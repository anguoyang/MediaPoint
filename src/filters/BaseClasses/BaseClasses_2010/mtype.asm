; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG82995 DB	'.', 00H, '.', 00H, '\', 00H, 'm', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG82996 DB	'p', 00H, 'b', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 00H, 00H
	ORG $+6
$SG83011 DB	'.', 00H, '.', 00H, '\', 00H, 'm', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG83012 DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	00H, 00H
	ORG $+2
$SG83020 DB	'.', 00H, '.', 00H, '\', 00H, 'm', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG83021 DB	'p', 00H, 'b', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 00H, 00H
	ORG $+6
$SG83028 DB	'.', 00H, '.', 00H, '\', 00H, 'm', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG83029 DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	00H, 00H
	ORG $+2
$SG83037 DB	'.', 00H, '.', 00H, '\', 00H, 'm', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG83038 DB	'p', 00H, 'b', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 00H, 00H
	ORG $+6
$SG83070 DB	'.', 00H, '.', 00H, '\', 00H, 'm', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG83071 DB	'p', 00H, 'S', 00H, 'r', 00H, 'c', 00H, 00H, 00H
	ORG $+6
$SG83085 DB	'.', 00H, '.', 00H, '\', 00H, 'm', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG83086 DB	'p', 00H, 'm', 00H, 't', 00H, 'S', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, 'p', 00H, 'm', 00H, 't', 00H, 'T', 00H, 'a', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG83089 DB	'.', 00H, '.', 00H, '\', 00H, 'm', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG83090 DB	'p', 00H, 'm', 00H, 't', 00H, 'S', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'p', 00H, 'b'
	DB	00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'L', 00H, 00H, 00H
CONST	ENDS
;	COMDAT IID_IAMFilterGraphCallback
CONST	SEGMENT
IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	?FreeMediaType@@YAXAEAU_AMMediaType@@@Z		; FreeMediaType
PUBLIC	??1CMediaType@@QEAA@XZ				; CMediaType::~CMediaType
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.cpp
pdata	SEGMENT
$pdata$??1CMediaType@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1CMediaType@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CMediaType@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??1CMediaType@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CMediaType@@QEAA@XZ PROC				; CMediaType::~CMediaType, COMDAT
; Line 18
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 19
	mov	rcx, QWORD PTR this$[rsp]
	call	?FreeMediaType@@YAXAEAU_AMMediaType@@@Z	; FreeMediaType
; Line 20
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CMediaType@@QEAA@XZ ENDP				; CMediaType::~CMediaType
_TEXT	ENDS
PUBLIC	?InitMediaType@CMediaType@@QEAAXXZ		; CMediaType::InitMediaType
PUBLIC	??0CMediaType@@QEAA@XZ				; CMediaType::CMediaType
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CMediaType@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0CMediaType@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CMediaType@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CMediaType@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CMediaType@@QEAA@XZ PROC				; CMediaType::CMediaType, COMDAT
; Line 24
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 25
	mov	rcx, QWORD PTR this$[rsp]
	call	?InitMediaType@CMediaType@@QEAAXXZ	; CMediaType::InitMediaType
; Line 26
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CMediaType@@QEAA@XZ ENDP				; CMediaType::CMediaType
_TEXT	ENDS
PUBLIC	$T83674
PUBLIC	??0CMediaType@@QEAA@PEBU_GUID@@@Z		; CMediaType::CMediaType
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CMediaType@@QEAA@PEBU_GUID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$??0CMediaType@@QEAA@PEBU_GUID@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CMediaType@@QEAA@PEBU_GUID@@@Z DD 032401H
	DD	0700c6210H
	DD	0600bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CMediaType@@QEAA@PEBU_GUID@@@Z
_TEXT	SEGMENT
$T83674 = 32
this$ = 80
type$ = 88
??0CMediaType@@QEAA@PEBU_GUID@@@Z PROC			; CMediaType::CMediaType, COMDAT
; Line 30
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rdi, rsp
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 31
	mov	rcx, QWORD PTR this$[rsp]
	call	?InitMediaType@CMediaType@@QEAAXXZ	; CMediaType::InitMediaType
; Line 32
	lea	rax, QWORD PTR $T83674[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR type$[rsp]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T83674[rsp]
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 33
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??0CMediaType@@QEAA@PEBU_GUID@@@Z ENDP			; CMediaType::CMediaType
_TEXT	ENDS
PUBLIC	?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z	; CopyMediaType
PUBLIC	??0CMediaType@@QEAA@AEBU_AMMediaType@@PEAJ@Z	; CMediaType::CMediaType
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CMediaType@@QEAA@AEBU_AMMediaType@@PEAJ@Z DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$??0CMediaType@@QEAA@AEBU_AMMediaType@@PEAJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CMediaType@@QEAA@AEBU_AMMediaType@@PEAJ@Z DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CMediaType@@QEAA@AEBU_AMMediaType@@PEAJ@Z
_TEXT	SEGMENT
hr$ = 32
this$ = 64
rt$ = 72
phr$ = 80
??0CMediaType@@QEAA@AEBU_AMMediaType@@PEAJ@Z PROC	; CMediaType::CMediaType, COMDAT
; Line 39
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 40
	mov	rdx, QWORD PTR rt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z ; CopyMediaType
	mov	DWORD PTR hr$[rsp], eax
; Line 41
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@CMediaType
	cmp	QWORD PTR phr$[rsp], 0
	je	SHORT $LN1@CMediaType
; Line 42
	mov	rax, QWORD PTR phr$[rsp]
	mov	ecx, DWORD PTR hr$[rsp]
	mov	DWORD PTR [rax], ecx
$LN1@CMediaType:
; Line 44
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CMediaType@@QEAA@AEBU_AMMediaType@@PEAJ@Z ENDP	; CMediaType::CMediaType
_TEXT	ENDS
PUBLIC	??0CMediaType@@QEAA@AEBV0@PEAJ@Z		; CMediaType::CMediaType
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CMediaType@@QEAA@AEBV0@PEAJ@Z DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$??0CMediaType@@QEAA@AEBV0@PEAJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CMediaType@@QEAA@AEBV0@PEAJ@Z DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CMediaType@@QEAA@AEBV0@PEAJ@Z
_TEXT	SEGMENT
hr$ = 32
this$ = 64
rt$ = 72
phr$ = 80
??0CMediaType@@QEAA@AEBV0@PEAJ@Z PROC			; CMediaType::CMediaType, COMDAT
; Line 48
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 49
	mov	rdx, QWORD PTR rt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z ; CopyMediaType
	mov	DWORD PTR hr$[rsp], eax
; Line 50
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@CMediaType@2
	cmp	QWORD PTR phr$[rsp], 0
	je	SHORT $LN1@CMediaType@2
; Line 51
	mov	rax, QWORD PTR phr$[rsp]
	mov	ecx, DWORD PTR hr$[rsp]
	mov	DWORD PTR [rax], ecx
$LN1@CMediaType@2:
; Line 53
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CMediaType@@QEAA@AEBV0@PEAJ@Z ENDP			; CMediaType::CMediaType
_TEXT	ENDS
PUBLIC	?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z	; CMediaType::Set
PUBLIC	??4CMediaType@@QEAAAEAV0@AEBU_AMMediaType@@@Z	; CMediaType::operator=
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4CMediaType@@QEAAAEAV0@AEBU_AMMediaType@@@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??4CMediaType@@QEAAAEAV0@AEBU_AMMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4CMediaType@@QEAAAEAV0@AEBU_AMMediaType@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??4CMediaType@@QEAAAEAV0@AEBU_AMMediaType@@@Z
_TEXT	SEGMENT
this$ = 48
rt$ = 56
??4CMediaType@@QEAAAEAV0@AEBU_AMMediaType@@@Z PROC	; CMediaType::operator=, COMDAT
; Line 63
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 64
	mov	rdx, QWORD PTR rt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z ; CMediaType::Set
; Line 65
	mov	rax, QWORD PTR this$[rsp]
; Line 66
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4CMediaType@@QEAAAEAV0@AEBU_AMMediaType@@@Z ENDP	; CMediaType::operator=
_TEXT	ENDS
PUBLIC	??4CMediaType@@QEAAAEAV0@AEBV0@@Z		; CMediaType::operator=
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4CMediaType@@QEAAAEAV0@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??4CMediaType@@QEAAAEAV0@AEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4CMediaType@@QEAAAEAV0@AEBV0@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??4CMediaType@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
rt$ = 56
??4CMediaType@@QEAAAEAV0@AEBV0@@Z PROC			; CMediaType::operator=, COMDAT
; Line 70
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 71
	mov	rdx, QWORD PTR rt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??4CMediaType@@QEAAAEAV0@AEBU_AMMediaType@@@Z ; CMediaType::operator=
; Line 72
	mov	rax, QWORD PTR this$[rsp]
; Line 73
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4CMediaType@@QEAAAEAV0@AEBV0@@Z ENDP			; CMediaType::operator=
_TEXT	ENDS
PUBLIC	IsEqualGUID
PUBLIC	??8CMediaType@@QEBAHAEBV0@@Z			; CMediaType::operator==
EXTRN	memcmp:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8CMediaType@@QEBAHAEBV0@@Z DD imagerel $LN6
	DD	imagerel $LN6+216
	DD	imagerel $unwind$??8CMediaType@@QEBAHAEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8CMediaType@@QEBAHAEBV0@@Z DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??8CMediaType@@QEBAHAEBV0@@Z
_TEXT	SEGMENT
tv176 = 32
this$ = 64
rt$ = 72
??8CMediaType@@QEBAHAEBV0@@Z PROC			; CMediaType::operator==, COMDAT
; Line 77
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 90
	mov	rdx, QWORD PTR rt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	IsEqualGUID
	cmp	eax, 1
	jne	$LN3@operator
	mov	rax, QWORD PTR rt$[rsp]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 16
	mov	rdx, rax
	call	IsEqualGUID
	cmp	eax, 1
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR rt$[rsp]
	add	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 44					; 0000002cH
	mov	rdx, rax
	call	IsEqualGUID
	cmp	eax, 1
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rt$[rsp]
	mov	ecx, DWORD PTR [rcx+72]
	cmp	DWORD PTR [rax+72], ecx
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+72], 0
	je	SHORT $LN4@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+72]
	mov	r8d, eax
	mov	rax, QWORD PTR rt$[rsp]
	mov	rdx, QWORD PTR [rax+80]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	memcmp
	test	eax, eax
	jne	SHORT $LN3@operator
$LN4@operator:
	mov	DWORD PTR tv176[rsp], 1
	jmp	SHORT $LN5@operator
$LN3@operator:
	mov	DWORD PTR tv176[rsp], 0
$LN5@operator:
	mov	eax, DWORD PTR tv176[rsp]
; Line 91
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??8CMediaType@@QEBAHAEBV0@@Z ENDP			; CMediaType::operator==
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
pdata	SEGMENT
$pdata$IsEqualGUID DD imagerel $LN5
	DD	imagerel $LN5+88
	DD	imagerel $unwind$IsEqualGUID
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsEqualGUID DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT IsEqualGUID
_TEXT	SEGMENT
tv69 = 32
rguid1$ = 64
rguid2$ = 72
IsEqualGUID PROC					; COMDAT
; Line 160
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 161
	mov	r8d, 16
	mov	rdx, QWORD PTR rguid2$[rsp]
	mov	rcx, QWORD PTR rguid1$[rsp]
	call	memcmp
	test	eax, eax
	jne	SHORT $LN3@IsEqualGUI
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
	mov	DWORD PTR tv69[rsp], 0
$LN4@IsEqualGUI:
	mov	eax, DWORD PTR tv69[rsp]
; Line 162
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	??9CMediaType@@QEBAHAEBV0@@Z			; CMediaType::operator!=
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.cpp
pdata	SEGMENT
$pdata$??9CMediaType@@QEBAHAEBV0@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??9CMediaType@@QEBAHAEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??9CMediaType@@QEBAHAEBV0@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??9CMediaType@@QEBAHAEBV0@@Z
_TEXT	SEGMENT
this$ = 48
rt$ = 56
??9CMediaType@@QEBAHAEBV0@@Z PROC			; CMediaType::operator!=, COMDAT
; Line 96
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 99
	mov	rdx, QWORD PTR rt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??8CMediaType@@QEBAHAEBV0@@Z		; CMediaType::operator==
	test	eax, eax
	je	SHORT $LN1@operator@2
; Line 100
	xor	eax, eax
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
; Line 102
	mov	eax, 1
$LN2@operator@2:
; Line 103
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??9CMediaType@@QEBAHAEBV0@@Z ENDP			; CMediaType::operator!=
_TEXT	ENDS
PUBLIC	?Set@CMediaType@@QEAAJAEBV1@@Z			; CMediaType::Set
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Set@CMediaType@@QEAAJAEBV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?Set@CMediaType@@QEAAJAEBV1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Set@CMediaType@@QEAAJAEBV1@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Set@CMediaType@@QEAAJAEBV1@@Z
_TEXT	SEGMENT
this$ = 48
rt$ = 56
?Set@CMediaType@@QEAAJAEBV1@@Z PROC			; CMediaType::Set, COMDAT
; Line 108
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 109
	mov	rdx, QWORD PTR rt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z ; CMediaType::Set
; Line 110
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Set@CMediaType@@QEAAJAEBV1@@Z ENDP			; CMediaType::Set
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z DD imagerel $LN5
	DD	imagerel $LN5+98
	DD	imagerel $unwind$?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z
_TEXT	SEGMENT
hr$82954 = 32
this$ = 64
rt$ = 72
?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z PROC		; CMediaType::Set, COMDAT
; Line 115
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 116
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR rt$[rsp], rax
	je	SHORT $LN2@Set
; Line 117
	mov	rcx, QWORD PTR this$[rsp]
	call	?FreeMediaType@@YAXAEAU_AMMediaType@@@Z	; FreeMediaType
; Line 118
	mov	rdx, QWORD PTR rt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z ; CopyMediaType
	mov	DWORD PTR hr$82954[rsp], eax
; Line 119
	cmp	DWORD PTR hr$82954[rsp], 0
	jge	SHORT $LN1@Set
; Line 120
	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	SHORT $LN3@Set
$LN1@Set:
$LN2@Set:
; Line 124
	xor	eax, eax
$LN3@Set:
; Line 125
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Set@CMediaType@@QEAAJAEBU_AMMediaType@@@Z ENDP		; CMediaType::Set
_TEXT	ENDS
PUBLIC	?IsValid@CMediaType@@QEBAHXZ			; CMediaType::IsValid
EXTRN	GUID_NULL:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsValid@CMediaType@@QEBAHXZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$?IsValid@CMediaType@@QEBAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsValid@CMediaType@@QEBAHXZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?IsValid@CMediaType@@QEBAHXZ
_TEXT	SEGMENT
tv73 = 32
this$ = 64
?IsValid@CMediaType@@QEBAHXZ PROC			; CMediaType::IsValid, COMDAT
; Line 130
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 131
	lea	rdx, OFFSET FLAT:GUID_NULL
	mov	rcx, QWORD PTR this$[rsp]
	call	IsEqualGUID
	test	eax, eax
	jne	SHORT $LN3@IsValid
	mov	DWORD PTR tv73[rsp], 1
	jmp	SHORT $LN4@IsValid
$LN3@IsValid:
	mov	DWORD PTR tv73[rsp], 0
$LN4@IsValid:
	mov	eax, DWORD PTR tv73[rsp]
; Line 132
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?IsValid@CMediaType@@QEBAHXZ ENDP			; CMediaType::IsValid
_TEXT	ENDS
PUBLIC	$T83759
PUBLIC	?SetType@CMediaType@@QEAAXPEBU_GUID@@@Z		; CMediaType::SetType
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetType@CMediaType@@QEAAXPEBU_GUID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?SetType@CMediaType@@QEAAXPEBU_GUID@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetType@CMediaType@@QEAAXPEBU_GUID@@@Z DD 032401H
	DD	0700c2210H
	DD	0600bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetType@CMediaType@@QEAAXPEBU_GUID@@@Z
_TEXT	SEGMENT
$T83759 = 0
this$ = 48
ptype$ = 56
?SetType@CMediaType@@QEAAXPEBU_GUID@@@Z PROC		; CMediaType::SetType, COMDAT
; Line 137
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 24
	mov	rdi, rsp
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 138
	lea	rax, QWORD PTR $T83759[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR ptype$[rsp]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T83759[rsp]
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 139
	add	rsp, 24
	pop	rdi
	pop	rsi
	ret	0
?SetType@CMediaType@@QEAAXPEBU_GUID@@@Z ENDP		; CMediaType::SetType
_TEXT	ENDS
PUBLIC	$T83767
PUBLIC	?SetSubtype@CMediaType@@QEAAXPEBU_GUID@@@Z	; CMediaType::SetSubtype
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetSubtype@CMediaType@@QEAAXPEBU_GUID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?SetSubtype@CMediaType@@QEAAXPEBU_GUID@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetSubtype@CMediaType@@QEAAXPEBU_GUID@@@Z DD 032401H
	DD	0700c2210H
	DD	0600bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetSubtype@CMediaType@@QEAAXPEBU_GUID@@@Z
_TEXT	SEGMENT
$T83767 = 0
this$ = 48
ptype$ = 56
?SetSubtype@CMediaType@@QEAAXPEBU_GUID@@@Z PROC		; CMediaType::SetSubtype, COMDAT
; Line 144
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 24
	mov	rdi, rsp
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 145
	lea	rax, QWORD PTR $T83767[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR ptype$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T83767[rsp]
	lea	rdi, QWORD PTR [rax+16]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 146
	add	rsp, 24
	pop	rdi
	pop	rsi
	ret	0
?SetSubtype@CMediaType@@QEAAXPEBU_GUID@@@Z ENDP		; CMediaType::SetSubtype
_TEXT	ENDS
PUBLIC	?IsFixedSize@CMediaType@@QEBAHXZ		; CMediaType::IsFixedSize
PUBLIC	?GetSampleSize@CMediaType@@QEBAKXZ		; CMediaType::GetSampleSize
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSampleSize@CMediaType@@QEBAKXZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?GetSampleSize@CMediaType@@QEBAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSampleSize@CMediaType@@QEBAKXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetSampleSize@CMediaType@@QEBAKXZ
_TEXT	SEGMENT
this$ = 48
?GetSampleSize@CMediaType@@QEBAKXZ PROC			; CMediaType::GetSampleSize, COMDAT
; Line 150
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 151
	mov	rcx, QWORD PTR this$[rsp]
	call	?IsFixedSize@CMediaType@@QEBAHXZ	; CMediaType::IsFixedSize
	test	eax, eax
	je	SHORT $LN2@GetSampleS
; Line 152
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+40]
	jmp	SHORT $LN3@GetSampleS
; Line 153
	jmp	SHORT $LN1@GetSampleS
$LN2@GetSampleS:
; Line 154
	xor	eax, eax
$LN1@GetSampleS:
$LN3@GetSampleS:
; Line 156
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetSampleSize@CMediaType@@QEBAKXZ ENDP			; CMediaType::GetSampleSize
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.h
pdata	SEGMENT
$pdata$?IsFixedSize@CMediaType@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?IsFixedSize@CMediaType@@QEBAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsFixedSize@CMediaType@@QEBAHXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?IsFixedSize@CMediaType@@QEBAHXZ
_TEXT	SEGMENT
this$ = 16
?IsFixedSize@CMediaType@@QEBAHXZ PROC			; CMediaType::IsFixedSize, COMDAT
; Line 44
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+32]
	pop	rdi
	ret	0
?IsFixedSize@CMediaType@@QEBAHXZ ENDP			; CMediaType::IsFixedSize
_TEXT	ENDS
PUBLIC	?SetVariableSize@CMediaType@@QEAAXXZ		; CMediaType::SetVariableSize
PUBLIC	?SetSampleSize@CMediaType@@QEAAXK@Z		; CMediaType::SetSampleSize
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.cpp
pdata	SEGMENT
$pdata$?SetSampleSize@CMediaType@@QEAAXK@Z DD imagerel $LN5
	DD	imagerel $LN5+83
	DD	imagerel $unwind$?SetSampleSize@CMediaType@@QEAAXK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetSampleSize@CMediaType@@QEAAXK@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetSampleSize@CMediaType@@QEAAXK@Z
_TEXT	SEGMENT
this$ = 48
sz$ = 56
?SetSampleSize@CMediaType@@QEAAXK@Z PROC		; CMediaType::SetSampleSize, COMDAT
; Line 160
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 161
	cmp	DWORD PTR sz$[rsp], 0
	jne	SHORT $LN2@SetSampleS
; Line 162
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetVariableSize@CMediaType@@QEAAXXZ	; CMediaType::SetVariableSize
; Line 163
	jmp	SHORT $LN1@SetSampleS
$LN2@SetSampleS:
; Line 164
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+32], 1
; Line 165
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR sz$[rsp]
	mov	DWORD PTR [rax+40], ecx
$LN1@SetSampleS:
; Line 167
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetSampleSize@CMediaType@@QEAAXK@Z ENDP		; CMediaType::SetSampleSize
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetVariableSize@CMediaType@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?SetVariableSize@CMediaType@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetVariableSize@CMediaType@@QEAAXXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetVariableSize@CMediaType@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?SetVariableSize@CMediaType@@QEAAXXZ PROC		; CMediaType::SetVariableSize, COMDAT
; Line 171
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 172
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+32], 0
; Line 173
	pop	rdi
	ret	0
?SetVariableSize@CMediaType@@QEAAXXZ ENDP		; CMediaType::SetVariableSize
_TEXT	ENDS
PUBLIC	?SetTemporalCompression@CMediaType@@QEAAXH@Z	; CMediaType::SetTemporalCompression
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetTemporalCompression@CMediaType@@QEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?SetTemporalCompression@CMediaType@@QEAAXH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetTemporalCompression@CMediaType@@QEAAXH@Z DD 010a01H
	DD	0700aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetTemporalCompression@CMediaType@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 16
bCompressed$ = 24
?SetTemporalCompression@CMediaType@@QEAAXH@Z PROC	; CMediaType::SetTemporalCompression, COMDAT
; Line 177
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 178
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR bCompressed$[rsp]
	mov	DWORD PTR [rax+36], ecx
; Line 179
	pop	rdi
	ret	0
?SetTemporalCompression@CMediaType@@QEAAXH@Z ENDP	; CMediaType::SetTemporalCompression
_TEXT	ENDS
PUBLIC	?AllocFormatBuffer@CMediaType@@QEAAPEAEK@Z	; CMediaType::AllocFormatBuffer
PUBLIC	?SetFormat@CMediaType@@QEAAHPEAEK@Z		; CMediaType::SetFormat
EXTRN	memcpy:PROC
EXTRN	?DbgAssert@@YAXPEB_W0H@Z:PROC			; DbgAssert
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetFormat@CMediaType@@QEAAHPEAEK@Z DD imagerel $LN5
	DD	imagerel $LN5+137
	DD	imagerel $unwind$?SetFormat@CMediaType@@QEAAHPEAEK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetFormat@CMediaType@@QEAAHPEAEK@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetFormat@CMediaType@@QEAAHPEAEK@Z
_TEXT	SEGMENT
this$ = 48
pformat$ = 56
cb$ = 64
?SetFormat@CMediaType@@QEAAHPEAEK@Z PROC		; CMediaType::SetFormat, COMDAT
; Line 183
$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 184
	mov	edx, DWORD PTR cb$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?AllocFormatBuffer@CMediaType@@QEAAPEAEK@Z ; CMediaType::AllocFormatBuffer
	test	rax, rax
	jne	SHORT $LN2@SetFormat
; Line 185
	xor	eax, eax
	jmp	SHORT $LN3@SetFormat
$LN2@SetFormat:
; Line 187
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN1@SetFormat
	mov	r8d, 187				; 000000bbH
	lea	rdx, OFFSET FLAT:$SG82995
	lea	rcx, OFFSET FLAT:$SG82996
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetFormat:
; Line 188
	mov	eax, DWORD PTR cb$[rsp]
	mov	r8d, eax
	mov	rdx, QWORD PTR pformat$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	memcpy
; Line 189
	mov	eax, 1
$LN3@SetFormat:
; Line 190
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetFormat@CMediaType@@QEAAHPEAEK@Z ENDP		; CMediaType::SetFormat
_TEXT	ENDS
PUBLIC	$T83817
PUBLIC	?SetFormatType@CMediaType@@QEAAXPEBU_GUID@@@Z	; CMediaType::SetFormatType
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetFormatType@CMediaType@@QEAAXPEBU_GUID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?SetFormatType@CMediaType@@QEAAXPEBU_GUID@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetFormatType@CMediaType@@QEAAXPEBU_GUID@@@Z DD 032401H
	DD	0700c2210H
	DD	0600bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetFormatType@CMediaType@@QEAAXPEBU_GUID@@@Z
_TEXT	SEGMENT
$T83817 = 0
this$ = 48
pformattype$ = 56
?SetFormatType@CMediaType@@QEAAXPEBU_GUID@@@Z PROC	; CMediaType::SetFormatType, COMDAT
; Line 200
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 24
	mov	rdi, rsp
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 201
	lea	rax, QWORD PTR $T83817[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR pformattype$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T83817[rsp]
	lea	rdi, QWORD PTR [rax+44]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 202
	add	rsp, 24
	pop	rdi
	pop	rsi
	ret	0
?SetFormatType@CMediaType@@QEAAXPEBU_GUID@@@Z ENDP	; CMediaType::SetFormatType
_TEXT	ENDS
PUBLIC	?ResetFormatBuffer@CMediaType@@QEAAXXZ		; CMediaType::ResetFormatBuffer
EXTRN	__imp_CoTaskMemFree:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ResetFormatBuffer@CMediaType@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?ResetFormatBuffer@CMediaType@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ResetFormatBuffer@CMediaType@@QEAAXXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ResetFormatBuffer@CMediaType@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ResetFormatBuffer@CMediaType@@QEAAXXZ PROC		; CMediaType::ResetFormatBuffer, COMDAT
; Line 208
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 209
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+72], 0
	je	SHORT $LN1@ResetForma
; Line 210
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_CoTaskMemFree
$LN1@ResetForma:
; Line 212
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+72], 0
; Line 213
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+80], 0
; Line 214
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ResetFormatBuffer@CMediaType@@QEAAXXZ ENDP		; CMediaType::ResetFormatBuffer
_TEXT	ENDS
EXTRN	__imp_CoTaskMemAlloc:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AllocFormatBuffer@CMediaType@@QEAAPEAEK@Z DD imagerel $LN9
	DD	imagerel $LN9+252
	DD	imagerel $unwind$?AllocFormatBuffer@CMediaType@@QEAAPEAEK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AllocFormatBuffer@CMediaType@@QEAAPEAEK@Z DD 022201H
	DD	0700a520eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?AllocFormatBuffer@CMediaType@@QEAAPEAEK@Z
_TEXT	SEGMENT
pNewFormat$ = 32
this$ = 64
length$ = 72
?AllocFormatBuffer@CMediaType@@QEAAPEAEK@Z PROC		; CMediaType::AllocFormatBuffer, COMDAT
; Line 223
$LN9:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 224
	cmp	DWORD PTR length$[rsp], 0
	jne	SHORT $LN6@AllocForma
	mov	r8d, 224				; 000000e0H
	lea	rdx, OFFSET FLAT:$SG83011
	lea	rcx, OFFSET FLAT:$SG83012
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@AllocForma:
; Line 228
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR length$[rsp]
	cmp	DWORD PTR [rax+72], ecx
	jne	SHORT $LN5@AllocForma
; Line 229
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+80]
	jmp	$LN7@AllocForma
$LN5@AllocForma:
; Line 234
	mov	eax, DWORD PTR length$[rsp]
	mov	ecx, eax
	call	QWORD PTR __imp_CoTaskMemAlloc
	mov	QWORD PTR pNewFormat$[rsp], rax
; Line 235
	cmp	QWORD PTR pNewFormat$[rsp], 0
	jne	SHORT $LN4@AllocForma
; Line 236
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+72]
	cmp	DWORD PTR length$[rsp], eax
	ja	SHORT $LN3@AllocForma
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+80]
	jmp	SHORT $LN7@AllocForma
$LN3@AllocForma:
; Line 237
	xor	eax, eax
	jmp	SHORT $LN7@AllocForma
$LN4@AllocForma:
; Line 242
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+72], 0
	je	SHORT $LN2@AllocForma
; Line 243
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN1@AllocForma
	mov	r8d, 243				; 000000f3H
	lea	rdx, OFFSET FLAT:$SG83020
	lea	rcx, OFFSET FLAT:$SG83021
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@AllocForma:
; Line 244
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_CoTaskMemFree
$LN2@AllocForma:
; Line 247
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR length$[rsp]
	mov	DWORD PTR [rax+72], ecx
; Line 248
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pNewFormat$[rsp]
	mov	QWORD PTR [rax+80], rcx
; Line 249
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+80]
$LN7@AllocForma:
; Line 250
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?AllocFormatBuffer@CMediaType@@QEAAPEAEK@Z ENDP		; CMediaType::AllocFormatBuffer
_TEXT	ENDS
PUBLIC	?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z	; CMediaType::ReallocFormatBuffer
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z DD imagerel $LN11
	DD	imagerel $LN11+316
	DD	imagerel $unwind$?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z DD 022201H
	DD	0700a520eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z
_TEXT	SEGMENT
pNewFormat$ = 32
tv153 = 40
this$ = 64
length$ = 72
?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z PROC	; CMediaType::ReallocFormatBuffer, COMDAT
; Line 260
$LN11:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 261
	cmp	DWORD PTR length$[rsp], 0
	jne	SHORT $LN6@ReallocFor
	mov	r8d, 261				; 00000105H
	lea	rdx, OFFSET FLAT:$SG83028
	lea	rcx, OFFSET FLAT:$SG83029
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@ReallocFor:
; Line 265
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR length$[rsp]
	cmp	DWORD PTR [rax+72], ecx
	jne	SHORT $LN5@ReallocFor
; Line 266
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+80]
	jmp	$LN7@ReallocFor
$LN5@ReallocFor:
; Line 271
	mov	eax, DWORD PTR length$[rsp]
	mov	ecx, eax
	call	QWORD PTR __imp_CoTaskMemAlloc
	mov	QWORD PTR pNewFormat$[rsp], rax
; Line 272
	cmp	QWORD PTR pNewFormat$[rsp], 0
	jne	SHORT $LN4@ReallocFor
; Line 273
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+72]
	cmp	DWORD PTR length$[rsp], eax
	ja	SHORT $LN3@ReallocFor
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+80]
	jmp	$LN7@ReallocFor
$LN3@ReallocFor:
; Line 274
	xor	eax, eax
	jmp	$LN7@ReallocFor
$LN4@ReallocFor:
; Line 280
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+72], 0
	je	SHORT $LN2@ReallocFor
; Line 281
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN1@ReallocFor
	mov	r8d, 281				; 00000119H
	lea	rdx, OFFSET FLAT:$SG83037
	lea	rcx, OFFSET FLAT:$SG83038
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@ReallocFor:
; Line 282
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+72]
	cmp	DWORD PTR length$[rsp], eax
	jae	SHORT $LN9@ReallocFor
	mov	eax, DWORD PTR length$[rsp]
	mov	DWORD PTR tv153[rsp], eax
	jmp	SHORT $LN10@ReallocFor
$LN9@ReallocFor:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+72]
	mov	DWORD PTR tv153[rsp], eax
$LN10@ReallocFor:
	mov	eax, DWORD PTR tv153[rsp]
	mov	r8d, eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+80]
	mov	rcx, QWORD PTR pNewFormat$[rsp]
	call	memcpy
; Line 283
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_CoTaskMemFree
$LN2@ReallocFor:
; Line 286
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR length$[rsp]
	mov	DWORD PTR [rax+72], ecx
; Line 287
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pNewFormat$[rsp]
	mov	QWORD PTR [rax+80], rcx
; Line 288
	mov	rax, QWORD PTR pNewFormat$[rsp]
$LN7@ReallocFor:
; Line 289
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z ENDP	; CMediaType::ReallocFormatBuffer
_TEXT	ENDS
EXTRN	memset:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InitMediaType@CMediaType@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?InitMediaType@CMediaType@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitMediaType@CMediaType@@QEAAXXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?InitMediaType@CMediaType@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?InitMediaType@CMediaType@@QEAAXXZ PROC			; CMediaType::InitMediaType, COMDAT
; Line 294
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 295
	mov	r8d, 88					; 00000058H
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	memset
; Line 296
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 1
; Line 297
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+32], 1
; Line 298
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?InitMediaType@CMediaType@@QEAAXXZ ENDP			; CMediaType::InitMediaType
_TEXT	ENDS
PUBLIC	==
PUBLIC	?IsPartiallySpecified@CMediaType@@QEBAHXZ	; CMediaType::IsPartiallySpecified
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsPartiallySpecified@CMediaType@@QEBAHXZ DD imagerel $LN6
	DD	imagerel $LN6+96
	DD	imagerel $unwind$?IsPartiallySpecified@CMediaType@@QEBAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsPartiallySpecified@CMediaType@@QEBAHXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?IsPartiallySpecified@CMediaType@@QEBAHXZ
_TEXT	SEGMENT
this$ = 48
?IsPartiallySpecified@CMediaType@@QEBAHXZ PROC		; CMediaType::IsPartiallySpecified, COMDAT
; Line 306
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 308
	lea	rdx, OFFSET FLAT:GUID_NULL
	mov	rcx, QWORD PTR this$[rsp]
	call	==
	test	eax, eax
	jne	SHORT $LN2@IsPartiall
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	lea	rdx, OFFSET FLAT:GUID_NULL
	mov	rcx, rax
	call	==
	test	eax, eax
	je	SHORT $LN3@IsPartiall
$LN2@IsPartiall:
; Line 309
	mov	eax, 1
	jmp	SHORT $LN4@IsPartiall
; Line 310
	jmp	SHORT $LN1@IsPartiall
$LN3@IsPartiall:
; Line 311
	xor	eax, eax
$LN1@IsPartiall:
$LN4@IsPartiall:
; Line 313
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?IsPartiallySpecified@CMediaType@@QEBAHXZ ENDP		; CMediaType::IsPartiallySpecified
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
pdata	SEGMENT
$pdata$== DD	imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$==
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$== DD	022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ==
_TEXT	SEGMENT
guidOne$ = 48
guidOther$ = 56
==	PROC						; COMDAT
; Line 193
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 194
	mov	rdx, QWORD PTR guidOther$[rsp]
	mov	rcx, QWORD PTR guidOne$[rsp]
	call	IsEqualGUID
; Line 195
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
==	ENDP
_TEXT	ENDS
PUBLIC	!=
PUBLIC	?MatchesPartial@CMediaType@@QEBAHPEBV1@@Z	; CMediaType::MatchesPartial
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.cpp
pdata	SEGMENT
$pdata$?MatchesPartial@CMediaType@@QEBAHPEBV1@@Z DD imagerel $LN9
	DD	imagerel $LN9+295
	DD	imagerel $unwind$?MatchesPartial@CMediaType@@QEBAHPEBV1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MatchesPartial@CMediaType@@QEBAHPEBV1@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?MatchesPartial@CMediaType@@QEBAHPEBV1@@Z
_TEXT	SEGMENT
this$ = 48
ppartial$ = 56
?MatchesPartial@CMediaType@@QEBAHPEBV1@@Z PROC		; CMediaType::MatchesPartial, COMDAT
; Line 317
$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 319
	lea	rdx, OFFSET FLAT:GUID_NULL
	mov	rcx, QWORD PTR ppartial$[rsp]
	call	!=
	test	eax, eax
	je	SHORT $LN6@MatchesPar
	mov	rdx, QWORD PTR ppartial$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	!=
	test	eax, eax
	je	SHORT $LN6@MatchesPar
; Line 320
	xor	eax, eax
	jmp	$LN7@MatchesPar
$LN6@MatchesPar:
; Line 323
	mov	rax, QWORD PTR ppartial$[rsp]
	add	rax, 16
	lea	rdx, OFFSET FLAT:GUID_NULL
	mov	rcx, rax
	call	!=
	test	eax, eax
	je	SHORT $LN5@MatchesPar
	mov	rax, QWORD PTR ppartial$[rsp]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 16
	mov	rdx, rax
	call	!=
	test	eax, eax
	je	SHORT $LN5@MatchesPar
; Line 324
	xor	eax, eax
	jmp	$LN7@MatchesPar
$LN5@MatchesPar:
; Line 327
	mov	rax, QWORD PTR ppartial$[rsp]
	add	rax, 44					; 0000002cH
	lea	rdx, OFFSET FLAT:GUID_NULL
	mov	rcx, rax
	call	!=
	test	eax, eax
	je	SHORT $LN4@MatchesPar
; Line 329
	mov	rax, QWORD PTR ppartial$[rsp]
	add	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 44					; 0000002cH
	mov	rdx, rax
	call	!=
	test	eax, eax
	je	SHORT $LN3@MatchesPar
; Line 330
	xor	eax, eax
	jmp	SHORT $LN7@MatchesPar
$LN3@MatchesPar:
; Line 332
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR ppartial$[rsp]
	mov	ecx, DWORD PTR [rcx+72]
	cmp	DWORD PTR [rax+72], ecx
	je	SHORT $LN2@MatchesPar
; Line 333
	xor	eax, eax
	jmp	SHORT $LN7@MatchesPar
$LN2@MatchesPar:
; Line 336
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+72], 0
	je	SHORT $LN1@MatchesPar
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+72]
	mov	r8d, eax
	mov	rax, QWORD PTR ppartial$[rsp]
	mov	rdx, QWORD PTR [rax+80]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	memcmp
	test	eax, eax
	je	SHORT $LN1@MatchesPar
; Line 337
	xor	eax, eax
	jmp	SHORT $LN7@MatchesPar
$LN1@MatchesPar:
$LN4@MatchesPar:
; Line 341
	mov	eax, 1
$LN7@MatchesPar:
; Line 343
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?MatchesPartial@CMediaType@@QEBAHPEBV1@@Z ENDP		; CMediaType::MatchesPartial
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
pdata	SEGMENT
$pdata$!= DD	imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$!=
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$!= DD	022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT !=
_TEXT	SEGMENT
tv68 = 32
guidOne$ = 64
guidOther$ = 72
!=	PROC						; COMDAT
; Line 198
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 199
	mov	rdx, QWORD PTR guidOther$[rsp]
	mov	rcx, QWORD PTR guidOne$[rsp]
	call	==
	test	eax, eax
	jne	SHORT $LN3@
	mov	DWORD PTR tv68[rsp], 1
	jmp	SHORT $LN4@
$LN3@:
	mov	DWORD PTR tv68[rsp], 0
$LN4@:
	mov	eax, DWORD PTR tv68[rsp]
; Line 200
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
!=	ENDP
_TEXT	ENDS
PUBLIC	?DeleteMediaType@@YAXPEAU_AMMediaType@@@Z	; DeleteMediaType
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.cpp
pdata	SEGMENT
$pdata$?DeleteMediaType@@YAXPEAU_AMMediaType@@@Z DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$?DeleteMediaType@@YAXPEAU_AMMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteMediaType@@YAXPEAU_AMMediaType@@@Z DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?DeleteMediaType@@YAXPEAU_AMMediaType@@@Z
_TEXT	SEGMENT
pmt$ = 48
?DeleteMediaType@@YAXPEAU_AMMediaType@@@Z PROC		; DeleteMediaType, COMDAT
; Line 353
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 356
	cmp	QWORD PTR pmt$[rsp], 0
	jne	SHORT $LN1@DeleteMedi
; Line 357
	jmp	SHORT $LN2@DeleteMedi
$LN1@DeleteMedi:
; Line 360
	mov	rcx, QWORD PTR pmt$[rsp]
	call	?FreeMediaType@@YAXAEAU_AMMediaType@@@Z	; FreeMediaType
; Line 361
	mov	rcx, QWORD PTR pmt$[rsp]
	call	QWORD PTR __imp_CoTaskMemFree
$LN2@DeleteMedi:
; Line 362
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?DeleteMediaType@@YAXPEAU_AMMediaType@@@Z ENDP		; DeleteMediaType
_TEXT	ENDS
PUBLIC	?CreateMediaType@@YAPEAU_AMMediaType@@PEBU1@@Z	; CreateMediaType
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateMediaType@@YAPEAU_AMMediaType@@PEBU1@@Z DD imagerel $LN6
	DD	imagerel $LN6+143
	DD	imagerel $unwind$?CreateMediaType@@YAPEAU_AMMediaType@@PEBU1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateMediaType@@YAPEAU_AMMediaType@@PEBU1@@Z DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CreateMediaType@@YAPEAU_AMMediaType@@PEBU1@@Z
_TEXT	SEGMENT
pMediaType$ = 32
hr$ = 40
pSrc$ = 64
?CreateMediaType@@YAPEAU_AMMediaType@@PEBU1@@Z PROC	; CreateMediaType, COMDAT
; Line 371
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 372
	cmp	QWORD PTR pSrc$[rsp], 0
	jne	SHORT $LN3@CreateMedi
	mov	r8d, 372				; 00000174H
	lea	rdx, OFFSET FLAT:$SG83070
	lea	rcx, OFFSET FLAT:$SG83071
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@CreateMedi:
; Line 377
	mov	ecx, 88					; 00000058H
	call	QWORD PTR __imp_CoTaskMemAlloc
	mov	QWORD PTR pMediaType$[rsp], rax
; Line 379
	cmp	QWORD PTR pMediaType$[rsp], 0
	jne	SHORT $LN2@CreateMedi
; Line 380
	xor	eax, eax
	jmp	SHORT $LN4@CreateMedi
$LN2@CreateMedi:
; Line 384
	mov	rdx, QWORD PTR pSrc$[rsp]
	mov	rcx, QWORD PTR pMediaType$[rsp]
	call	?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z ; CopyMediaType
	mov	DWORD PTR hr$[rsp], eax
; Line 385
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@CreateMedi
; Line 386
	mov	rcx, QWORD PTR pMediaType$[rsp]
	call	QWORD PTR __imp_CoTaskMemFree
; Line 387
	xor	eax, eax
	jmp	SHORT $LN4@CreateMedi
$LN1@CreateMedi:
; Line 390
	mov	rax, QWORD PTR pMediaType$[rsp]
$LN4@CreateMedi:
; Line 391
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CreateMediaType@@YAPEAU_AMMediaType@@PEBU1@@Z ENDP	; CreateMediaType
_TEXT	ENDS
PUBLIC	$T83899
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z DD imagerel $LN9
	DD	imagerel $LN9+359
	DD	imagerel $unwind$?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z DD 042a01H
	DD	0110113H
	DD	0600b700cH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z
_TEXT	SEGMENT
$T83899 = 32
pmtTarget$ = 160
pmtSource$ = 168
?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z PROC	; CopyMediaType, COMDAT
; Line 397
$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 136				; 00000088H
	mov	rdi, rsp
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]
; Line 400
	mov	rax, QWORD PTR pmtTarget$[rsp]
	cmp	QWORD PTR pmtSource$[rsp], rax
	jne	SHORT $LN6@CopyMediaT
	mov	r8d, 400				; 00000190H
	lea	rdx, OFFSET FLAT:$SG83085
	lea	rcx, OFFSET FLAT:$SG83086
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@CopyMediaT:
; Line 401
	lea	rax, QWORD PTR $T83899[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR pmtSource$[rsp]
	mov	ecx, 88					; 00000058H
	rep movsb
	lea	rax, QWORD PTR $T83899[rsp]
	mov	rdi, QWORD PTR pmtTarget$[rsp]
	mov	rsi, rax
	mov	ecx, 88					; 00000058H
	rep movsb
; Line 402
	mov	rax, QWORD PTR pmtSource$[rsp]
	cmp	DWORD PTR [rax+72], 0
	je	$LN5@CopyMediaT
; Line 403
	mov	rax, QWORD PTR pmtSource$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN4@CopyMediaT
	mov	r8d, 403				; 00000193H
	lea	rdx, OFFSET FLAT:$SG83089
	lea	rcx, OFFSET FLAT:$SG83090
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@CopyMediaT:
; Line 404
	mov	rax, QWORD PTR pmtSource$[rsp]
	mov	eax, DWORD PTR [rax+72]
	mov	ecx, eax
	call	QWORD PTR __imp_CoTaskMemAlloc
	mov	rcx, QWORD PTR pmtTarget$[rsp]
	mov	QWORD PTR [rcx+80], rax
; Line 405
	mov	rax, QWORD PTR pmtTarget$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN3@CopyMediaT
; Line 406
	mov	rax, QWORD PTR pmtTarget$[rsp]
	mov	DWORD PTR [rax+72], 0
; Line 407
	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	SHORT $LN7@CopyMediaT
; Line 408
	jmp	SHORT $LN2@CopyMediaT
$LN3@CopyMediaT:
; Line 410
	mov	rax, QWORD PTR pmtTarget$[rsp]
	mov	eax, DWORD PTR [rax+72]
	mov	r8d, eax
	mov	rax, QWORD PTR pmtSource$[rsp]
	mov	rdx, QWORD PTR [rax+80]
	mov	rax, QWORD PTR pmtTarget$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	memcpy
$LN2@CopyMediaT:
$LN5@CopyMediaT:
; Line 413
	mov	rax, QWORD PTR pmtTarget$[rsp]
	cmp	QWORD PTR [rax+64], 0
	je	SHORT $LN1@CopyMediaT
; Line 414
	mov	rax, QWORD PTR pmtTarget$[rsp]
	mov	rax, QWORD PTR [rax+64]
	mov	rcx, QWORD PTR pmtTarget$[rsp]
	mov	rcx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+8]
$LN1@CopyMediaT:
; Line 417
	xor	eax, eax
$LN7@CopyMediaT:
; Line 418
	add	rsp, 136				; 00000088H
	pop	rdi
	pop	rsi
	ret	0
?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z ENDP	; CopyMediaType
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FreeMediaType@@YAXAEAU_AMMediaType@@@Z DD imagerel $LN5
	DD	imagerel $LN5+136
	DD	imagerel $unwind$?FreeMediaType@@YAXAEAU_AMMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FreeMediaType@@YAXAEAU_AMMediaType@@@Z DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?FreeMediaType@@YAXAEAU_AMMediaType@@@Z
_TEXT	SEGMENT
mt$ = 48
?FreeMediaType@@YAXAEAU_AMMediaType@@@Z PROC		; FreeMediaType, COMDAT
; Line 423
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 424
	mov	rax, QWORD PTR mt$[rsp]
	cmp	DWORD PTR [rax+72], 0
	je	SHORT $LN2@FreeMediaT
; Line 425
	mov	rax, QWORD PTR mt$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_CoTaskMemFree
; Line 428
	mov	rax, QWORD PTR mt$[rsp]
	mov	DWORD PTR [rax+72], 0
; Line 429
	mov	rax, QWORD PTR mt$[rsp]
	mov	QWORD PTR [rax+80], 0
$LN2@FreeMediaT:
; Line 431
	mov	rax, QWORD PTR mt$[rsp]
	cmp	QWORD PTR [rax+64], 0
	je	SHORT $LN1@FreeMediaT
; Line 432
	mov	rax, QWORD PTR mt$[rsp]
	mov	rax, QWORD PTR [rax+64]
	mov	rcx, QWORD PTR mt$[rsp]
	mov	rcx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
; Line 433
	mov	rax, QWORD PTR mt$[rsp]
	mov	QWORD PTR [rax+64], 0
$LN1@FreeMediaT:
; Line 435
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?FreeMediaType@@YAXAEAU_AMMediaType@@@Z ENDP		; FreeMediaType
_TEXT	ENDS
PUBLIC	$T83915
PUBLIC	??0FOURCCMap@@QEAA@K@Z				; FOURCCMap::FOURCCMap
PUBLIC	$T83916
PUBLIC	__$ArrayPad$
PUBLIC	CreateAudioMediaType
EXTRN	__GSHandlerCheck:PROC
EXTRN	FORMAT_WaveFormatEx:BYTE
EXTRN	MEDIATYPE_Audio:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$CreateAudioMediaType DD imagerel $LN11
	DD	imagerel $LN11+579
	DD	imagerel $unwind$CreateAudioMediaType
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CreateAudioMediaType DD 033b19H
	DD	07011c215H
	DD	06010H
	DD	imagerel __GSHandlerCheck
	DD	058H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT CreateAudioMediaType
_TEXT	SEGMENT
$T83113 = 32
$T83915 = 56
$T83916 = 72
__$ArrayPad$ = 88
pwfx$ = 128
pmt$ = 136
bSetFormat$ = 144
CreateAudioMediaType PROC				; COMDAT
; Line 444
$LN11:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rdi, rsp
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 445
	lea	rax, OFFSET FLAT:MEDIATYPE_Audio
	mov	rdi, QWORD PTR pmt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 446
	mov	rax, QWORD PTR pwfx$[rsp]
	movzx	eax, WORD PTR [rax]
	cmp	eax, 65534				; 0000fffeH
	jne	SHORT $LN8@CreateAudi
; Line 447
	lea	rax, QWORD PTR $T83916[rsp]
	mov	rcx, QWORD PTR pwfx$[rsp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+24]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR pmt$[rsp]
	lea	rcx, QWORD PTR $T83916[rsp]
	lea	rdi, QWORD PTR [rax+16]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 448
	jmp	SHORT $LN7@CreateAudi
$LN8@CreateAudi:
; Line 449
	mov	rax, QWORD PTR pwfx$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	edx, eax
	lea	rcx, QWORD PTR $T83113[rsp]
	call	??0FOURCCMap@@QEAA@K@Z			; FOURCCMap::FOURCCMap
	lea	rcx, QWORD PTR $T83915[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR pmt$[rsp]
	lea	rcx, QWORD PTR $T83915[rsp]
	lea	rdi, QWORD PTR [rax+16]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
$LN7@CreateAudi:
; Line 451
	mov	rax, QWORD PTR pmt$[rsp]
	lea	rcx, OFFSET FLAT:FORMAT_WaveFormatEx
	lea	rdi, QWORD PTR [rax+44]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 452
	mov	rax, QWORD PTR pmt$[rsp]
	mov	DWORD PTR [rax+32], 1
; Line 453
	mov	rax, QWORD PTR pmt$[rsp]
	mov	DWORD PTR [rax+36], 0
; Line 454
	mov	rax, QWORD PTR pwfx$[rsp]
	movzx	eax, WORD PTR [rax+12]
	mov	rcx, QWORD PTR pmt$[rsp]
	mov	DWORD PTR [rcx+40], eax
; Line 455
	mov	rax, QWORD PTR pmt$[rsp]
	mov	QWORD PTR [rax+64], 0
; Line 456
	cmp	DWORD PTR bSetFormat$[rsp], 0
	je	$LN6@CreateAudi
; Line 457
	mov	rax, QWORD PTR pwfx$[rsp]
	movzx	eax, WORD PTR [rax]
	cmp	eax, 1
	jne	SHORT $LN5@CreateAudi
; Line 458
	mov	rax, QWORD PTR pmt$[rsp]
	mov	DWORD PTR [rax+72], 18
; Line 459
	jmp	SHORT $LN4@CreateAudi
$LN5@CreateAudi:
; Line 460
	mov	rax, QWORD PTR pwfx$[rsp]
	movzx	eax, WORD PTR [rax+16]
	add	rax, 18
	mov	rcx, QWORD PTR pmt$[rsp]
	mov	DWORD PTR [rcx+72], eax
$LN4@CreateAudi:
; Line 462
	mov	rax, QWORD PTR pmt$[rsp]
	mov	eax, DWORD PTR [rax+72]
	mov	ecx, eax
	call	QWORD PTR __imp_CoTaskMemAlloc
	mov	rcx, QWORD PTR pmt$[rsp]
	mov	QWORD PTR [rcx+80], rax
; Line 463
	mov	rax, QWORD PTR pmt$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN3@CreateAudi
; Line 464
	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	SHORT $LN9@CreateAudi
$LN3@CreateAudi:
; Line 466
	mov	rax, QWORD PTR pwfx$[rsp]
	movzx	eax, WORD PTR [rax]
	cmp	eax, 1
	jne	SHORT $LN2@CreateAudi
; Line 467
	mov	r8d, 16
	mov	rdx, QWORD PTR pwfx$[rsp]
	mov	rax, QWORD PTR pmt$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	memcpy
; Line 468
	mov	rax, QWORD PTR pmt$[rsp]
	mov	rax, QWORD PTR [rax+80]
	xor	ecx, ecx
	mov	WORD PTR [rax+16], cx
; Line 469
	jmp	SHORT $LN1@CreateAudi
$LN2@CreateAudi:
; Line 470
	mov	rax, QWORD PTR pmt$[rsp]
	mov	eax, DWORD PTR [rax+72]
	mov	r8d, eax
	mov	rdx, QWORD PTR pwfx$[rsp]
	mov	rax, QWORD PTR pmt$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	memcpy
$LN1@CreateAudi:
$LN6@CreateAudi:
; Line 473
	xor	eax, eax
$LN9@CreateAudi:
; Line 474
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
CreateAudioMediaType ENDP
_TEXT	ENDS
PUBLIC	?SetFOURCC@FOURCCMap@@QEAAXK@Z			; FOURCCMap::SetFOURCC
PUBLIC	?InitGUID@FOURCCMap@@AEAAXXZ			; FOURCCMap::InitGUID
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\fourcc.h
pdata	SEGMENT
$pdata$??0FOURCCMap@@QEAA@K@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??0FOURCCMap@@QEAA@K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FOURCCMap@@QEAA@K@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0FOURCCMap@@QEAA@K@Z
_TEXT	SEGMENT
this$ = 48
fourcc$ = 56
??0FOURCCMap@@QEAA@K@Z PROC				; FOURCCMap::FOURCCMap, COMDAT
; Line 69
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 70
	mov	rcx, QWORD PTR this$[rsp]
	call	?InitGUID@FOURCCMap@@AEAAXXZ		; FOURCCMap::InitGUID
; Line 71
	mov	edx, DWORD PTR fourcc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetFOURCC@FOURCCMap@@QEAAXK@Z		; FOURCCMap::SetFOURCC
; Line 72
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0FOURCCMap@@QEAA@K@Z ENDP				; FOURCCMap::FOURCCMap
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InitGUID@FOURCCMap@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?InitGUID@FOURCCMap@@AEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitGUID@FOURCCMap@@AEAAXXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?InitGUID@FOURCCMap@@AEAAXXZ
_TEXT	SEGMENT
this$ = 16
?InitGUID@FOURCCMap@@AEAAXXZ PROC			; FOURCCMap::InitGUID, COMDAT
; Line 54
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 55
	xor	eax, eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+4], ax
; Line 56
	mov	eax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+6], ax
; Line 57
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+8], -1442840448		; aa000080H
; Line 58
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+12], 1905997824		; 719b3800H
; Line 59
	pop	rdi
	ret	0
?InitGUID@FOURCCMap@@AEAAXXZ ENDP			; FOURCCMap::InitGUID
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetFOURCC@FOURCCMap@@QEAAXK@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$?SetFOURCC@FOURCCMap@@QEAAXK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetFOURCC@FOURCCMap@@QEAAXK@Z DD 010a01H
	DD	0700aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetFOURCC@FOURCCMap@@QEAAXK@Z
_TEXT	SEGMENT
this$ = 16
fourcc$ = 24
?SetFOURCC@FOURCCMap@@QEAAXK@Z PROC			; FOURCCMap::SetFOURCC, COMDAT
; Line 90
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 91
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR fourcc$[rsp]
	mov	DWORD PTR [rax], ecx
; Line 92
	pop	rdi
	ret	0
?SetFOURCC@FOURCCMap@@QEAAXK@Z ENDP			; FOURCCMap::SetFOURCC
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG82242 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'f', 00H
	DB	'c', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82243 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'm'
	DB	00H, '_', 00H, 'h', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82245 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'f', 00H
	DB	'c', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82246 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'm'
	DB	00H, '_', 00H, 'p', 00H, 'S', 00H, 'c', 00H, 'h', 00H, 'e', 00H
	DB	'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '(', 00H, ')', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG82265 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'f', 00H
	DB	'c', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82266 DB	'm', 00H, '_', 00H, 'p', 00H, 'S', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG82280 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'f', 00H
	DB	'c', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+8
$SG82281 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'm'
	DB	00H, '_', 00H, 'p', 00H, 'S', 00H, 'c', 00H, 'h', 00H, 'e', 00H
	DB	'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '(', 00H, ')', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG82310 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'f', 00H
	DB	'c', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82311 DB	'W', 00H, 'A', 00H, 'I', 00H, 'T', 00H, '_', 00H, 'T', 00H
	DB	'I', 00H, 'M', 00H, 'E', 00H, 'O', 00H, 'U', 00H, 'T', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'W', 00H, 'a', 00H, 'i', 00H
	DB	't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '(', 00H, 'H', 00H, 'A', 00H, 'N'
	DB	00H, 'D', 00H, 'L', 00H, 'E', 00H, '(', 00H, 'h', 00H, 'E', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ')', 00H, ',', 00H, '0'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+4
$SG82355 DB	'B', 00H, 'a', 00H, 'd', 00H, ' ', 00H, 'T', 00H, 'i', 00H
	DB	'm', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'e', 00H, 'l', 00H, 't'
	DB	00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG82363 DB	'S', 00H, 'e', 00H, 'v', 00H, ' ', 00H, '%', 00H, '2', 00H
	DB	'i', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'S', 00H, 'y', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 'C', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, ':', 00H, ':', 00H, 'S', 00H, 'e', 00H, 't'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'D', 00H, 'e', 00H
	DB	'l', 00H, 't', 00H, 'a', 00H, '(', 00H, '%', 00H, '8', 00H, 'l'
	DB	00H, 'd', 00H, ' ', 00H, 'u', 00H, 's', 00H, ')', 00H, ' ', 00H
	DB	'%', 00H, 'l', 00H, 'u', 00H, ' ', 00H, '-', 00H, '>', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 'u', 00H, ' ', 00H, 'm', 00H, 's', 00H
	DB	'.', 00H, 00H, 00H
	ORG $+8
$SG82378 DB	'C', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'f', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k'
	DB	00H, ':', 00H, ':', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H
	DB	's', 00H, 'e', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 'd', 00H, '(', 00H, ')', 00H, ' ', 00H, 'D', 00H, 'e', 00H
	DB	'l', 00H, 'a', 00H, 'y', 00H, ':', 00H, ' ', 00H, '%', 00H, 'l'
	DB	00H, 'u', 00H, ' ', 00H, 'm', 00H, 's', 00H, 00H, 00H
	ORG $+8
$SG82381 DB	'C', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'f', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k'
	DB	00H, ':', 00H, ':', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H
	DB	's', 00H, 'e', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 'd', 00H, '(', 00H, ')', 00H, ' ', 00H, 'W', 00H, 'o', 00H
	DB	'k', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 't', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H, ' ', 00H, 'm', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG82385 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'f', 00H
	DB	'c', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82386 DB	'l', 00H, 'l', 00H, 'W', 00H, 'a', 00H, 'i', 00H, 't', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H
CONST	ENDS
;	COMDAT IID_IAMFilterGraphCallback
CONST	SEGMENT
IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	==
PUBLIC	?NonDelegatingQueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CBaseReferenceClock::NonDelegatingQueryInterface
EXTRN	?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z:PROC ; CUnknown::NonDelegatingQueryInterface
EXTRN	GetInterface:PROC
EXTRN	IID_IReferenceClock:BYTE
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\refclock.cpp
pdata	SEGMENT
$pdata$?NonDelegatingQueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN7
	DD	imagerel $LN7+149
	DD	imagerel $unwind$?NonDelegatingQueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingQueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ?NonDelegatingQueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
hr$ = 32
tv77 = 40
this$ = 64
riid$ = 72
ppv$ = 80
?NonDelegatingQueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CBaseReferenceClock::NonDelegatingQueryInterface, COMDAT
; Line 22
$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 25
	lea	rdx, OFFSET FLAT:IID_IReferenceClock
	mov	rcx, QWORD PTR riid$[rsp]
	call	==
	test	eax, eax
	je	SHORT $LN2@NonDelegat
; Line 27
	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN5@NonDelegat
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR tv77[rsp], rax
	jmp	SHORT $LN6@NonDelegat
$LN5@NonDelegat:
	mov	QWORD PTR tv77[rsp], 0
$LN6@NonDelegat:
	mov	rdx, QWORD PTR ppv$[rsp]
	mov	rcx, QWORD PTR tv77[rsp]
	call	GetInterface
	mov	DWORD PTR hr$[rsp], eax
; Line 29
	jmp	SHORT $LN1@NonDelegat
$LN2@NonDelegat:
; Line 31
	mov	r8, QWORD PTR ppv$[rsp]
	mov	rdx, QWORD PTR riid$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CUnknown::NonDelegatingQueryInterface
	mov	DWORD PTR hr$[rsp], eax
$LN1@NonDelegat:
; Line 33
	mov	eax, DWORD PTR hr$[rsp]
; Line 34
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?NonDelegatingQueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CBaseReferenceClock::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	IsEqualGUID
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
pdata	SEGMENT
$pdata$== DD	imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$==
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$== DD	022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ==
_TEXT	SEGMENT
guidOne$ = 48
guidOther$ = 56
==	PROC						; COMDAT
; Line 193
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 194
	mov	rdx, QWORD PTR guidOther$[rsp]
	mov	rcx, QWORD PTR guidOne$[rsp]
	call	IsEqualGUID
; Line 195
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
==	ENDP
_TEXT	ENDS
EXTRN	memcmp:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$IsEqualGUID DD imagerel $LN5
	DD	imagerel $LN5+88
	DD	imagerel $unwind$IsEqualGUID
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsEqualGUID DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT IsEqualGUID
_TEXT	SEGMENT
tv69 = 32
rguid1$ = 64
rguid2$ = 72
IsEqualGUID PROC					; COMDAT
; Line 160
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 161
	mov	r8d, 16
	mov	rdx, QWORD PTR rguid2$[rsp]
	mov	rcx, QWORD PTR rguid1$[rsp]
	call	memcmp
	test	eax, eax
	jne	SHORT $LN3@IsEqualGUI
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
	mov	DWORD PTR tv69[rsp], 0
$LN4@IsEqualGUI:
	mov	eax, DWORD PTR tv69[rsp]
; Line 162
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	??1CUnknown@@UEAA@XZ				; CUnknown::~CUnknown
PUBLIC	?GetEvent@CAMSchedule@@QEBAPEAXXZ		; CAMSchedule::GetEvent
PUBLIC	?TriggerThread@CBaseReferenceClock@@QEAAXXZ	; CBaseReferenceClock::TriggerThread
PUBLIC	??_7CBaseReferenceClock@@6BIReferenceClock@@@	; CBaseReferenceClock::`vftable'
PUBLIC	??_7CBaseReferenceClock@@6BCUnknown@@@		; CBaseReferenceClock::`vftable'
PUBLIC	??1CBaseReferenceClock@@MEAA@XZ			; CBaseReferenceClock::~CBaseReferenceClock
PUBLIC	??_R4CBaseReferenceClock@@6BCUnknown@@@		; CBaseReferenceClock::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseReferenceClock@@@8			; CBaseReferenceClock `RTTI Type Descriptor'
PUBLIC	??_R3CBaseReferenceClock@@8			; CBaseReferenceClock::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseReferenceClock@@8			; CBaseReferenceClock::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseReferenceClock@@8		; CBaseReferenceClock::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CUnknown@@8			; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCUnknown@@@8				; CUnknown `RTTI Type Descriptor'
PUBLIC	??_R3CUnknown@@8				; CUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CUnknown@@8				; CUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@INonDelegatingUnknown@@8		; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUINonDelegatingUnknown@@@8		; INonDelegatingUnknown `RTTI Type Descriptor'
PUBLIC	??_R3INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AVCBaseObject@@@8				; CBaseObject `RTTI Type Descriptor'
PUBLIC	??_R3CBaseObject@@8				; CBaseObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseObject@@8				; CBaseObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1CA@?0A@EA@IReferenceClock@@8		; IReferenceClock::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R0?AUIReferenceClock@@@8			; IReferenceClock `RTTI Type Descriptor'
PUBLIC	??_R3IReferenceClock@@8				; IReferenceClock::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IReferenceClock@@8				; IReferenceClock::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IReferenceClock@@8		; IReferenceClock::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1CA@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R1CI@?0A@EA@CCritSec@@8			; CCritSec::`RTTI Base Class Descriptor at (40,-1,0,64)'
PUBLIC	??_R0?AVCCritSec@@@8				; CCritSec `RTTI Type Descriptor'
PUBLIC	??_R3CCritSec@@8				; CCritSec::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCritSec@@8				; CCritSec::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCritSec@@8			; CCritSec::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ	; CBaseReferenceClock::GetPrivateTime
PUBLIC	??_R4CBaseReferenceClock@@6BIReferenceClock@@@	; CBaseReferenceClock::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CBaseReferenceClock::QueryInterface
PUBLIC	?AddRef@CBaseReferenceClock@@UEAAKXZ		; CBaseReferenceClock::AddRef
PUBLIC	?Release@CBaseReferenceClock@@UEAAKXZ		; CBaseReferenceClock::Release
PUBLIC	?GetTime@CBaseReferenceClock@@UEAAJPEA_J@Z	; CBaseReferenceClock::GetTime
PUBLIC	?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z ; CBaseReferenceClock::AdviseTime
PUBLIC	?AdvisePeriodic@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z ; CBaseReferenceClock::AdvisePeriodic
PUBLIC	?Unadvise@CBaseReferenceClock@@UEAAJ_K@Z	; CBaseReferenceClock::Unadvise
EXTRN	__CxxFrameHandler3:PROC
EXTRN	??1CCritSec@@QEAA@XZ:PROC			; CCritSec::~CCritSec
EXTRN	?DbgAssert@@YAXPEB_W0H@Z:PROC			; DbgAssert
EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp_WaitForSingleObject:PROC
EXTRN	?DumpLinkedList@CAMSchedule@@QEAAXXZ:PROC	; CAMSchedule::DumpLinkedList
EXTRN	__imp_timeEndPeriod:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?NonDelegatingAddRef@CUnknown@@UEAAKXZ:PROC	; CUnknown::NonDelegatingAddRef
EXTRN	?NonDelegatingRelease@CUnknown@@UEAAKXZ:PROC	; CUnknown::NonDelegatingRelease
EXTRN	??_ECBaseReferenceClock@@MEAAPEAXI@Z:PROC	; CBaseReferenceClock::`vector deleting destructor'
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\refclock.cpp
pdata	SEGMENT
$pdata$??1CBaseReferenceClock@@MEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+408
	DD	imagerel $unwind$??1CBaseReferenceClock@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1CBaseReferenceClock@@MEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CBaseReferenceClock@@MEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CBaseReferenceClock@@MEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1CBaseReferenceClock@@MEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1CBaseReferenceClock@@MEAA@XZ@4HA DD imagerel ?dtor$1@?0???1CBaseReferenceClock@@MEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1CBaseReferenceClock@@MEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1CBaseReferenceClock@@MEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CBaseReferenceClock@@MEAA@XZ DD imagerel ??1CBaseReferenceClock@@MEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1CBaseReferenceClock@@MEAA@XZ+70
	DD	01H
	DD	imagerel ??1CBaseReferenceClock@@MEAA@XZ+374
	DD	00H
	DD	imagerel ??1CBaseReferenceClock@@MEAA@XZ+392
	DD	0ffffffffH
xdata	ENDS
;	COMDAT ??_R4CBaseReferenceClock@@6BIReferenceClock@@@
rdata$r	SEGMENT
??_R4CBaseReferenceClock@@6BIReferenceClock@@@ DD 01H	; CBaseReferenceClock::`RTTI Complete Object Locator'
	DD	020H
	DD	00H
	DD	imagerel ??_R0?AVCBaseReferenceClock@@@8
	DD	imagerel ??_R3CBaseReferenceClock@@8
	DD	imagerel ??_R4CBaseReferenceClock@@6BIReferenceClock@@@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCritSec@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCritSec@@8 DD imagerel ??_R0?AVCCritSec@@@8 ; CCritSec::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CCritSec@@8
rdata$r	ENDS
;	COMDAT ??_R2CCritSec@@8
rdata$r	SEGMENT
??_R2CCritSec@@8 DD imagerel ??_R1A@?0A@EA@CCritSec@@8	; CCritSec::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CCritSec@@8
rdata$r	SEGMENT
??_R3CCritSec@@8 DD 00H					; CCritSec::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CCritSec@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCritSec@@@8
_DATA	SEGMENT
??_R0?AVCCritSec@@@8 DQ FLAT:??_7type_info@@6B@		; CCritSec `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCCritSec@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CI@?0A@EA@CCritSec@@8
rdata$r	SEGMENT
??_R1CI@?0A@EA@CCritSec@@8 DD imagerel ??_R0?AVCCritSec@@@8 ; CCritSec::`RTTI Base Class Descriptor at (40,-1,0,64)'
	DD	00H
	DD	028H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CCritSec@@8
rdata$r	ENDS
;	COMDAT ??_R1CA@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@IUnknown@@8 DD imagerel ??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	00H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD imagerel ??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DQ FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD imagerel ??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IReferenceClock@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IReferenceClock@@8 DD imagerel ??_R0?AUIReferenceClock@@@8 ; IReferenceClock::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IReferenceClock@@8
rdata$r	ENDS
;	COMDAT ??_R2IReferenceClock@@8
rdata$r	SEGMENT
??_R2IReferenceClock@@8 DD imagerel ??_R1A@?0A@EA@IReferenceClock@@8 ; IReferenceClock::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3IReferenceClock@@8
rdata$r	SEGMENT
??_R3IReferenceClock@@8 DD 00H				; IReferenceClock::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IReferenceClock@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIReferenceClock@@@8
_DATA	SEGMENT
??_R0?AUIReferenceClock@@@8 DQ FLAT:??_7type_info@@6B@	; IReferenceClock `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIReferenceClock@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CA@?0A@EA@IReferenceClock@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@IReferenceClock@@8 DD imagerel ??_R0?AUIReferenceClock@@@8 ; IReferenceClock::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	01H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IReferenceClock@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseObject@@8 DD imagerel ??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseObject@@8
rdata$r	SEGMENT
??_R2CBaseObject@@8 DD imagerel ??_R1A@?0A@EA@CBaseObject@@8 ; CBaseObject::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CBaseObject@@8
rdata$r	SEGMENT
??_R3CBaseObject@@8 DD 00H				; CBaseObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseObject@@@8
_DATA	SEGMENT
??_R0?AVCBaseObject@@@8 DQ FLAT:??_7type_info@@6B@	; CBaseObject `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBaseObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R17?0A@EA@CBaseObject@@8 DD imagerel ??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R2INonDelegatingUnknown@@8 DD imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8 ; INonDelegatingUnknown::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R3INonDelegatingUnknown@@8 DD 00H			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUINonDelegatingUnknown@@@8
_DATA	SEGMENT
??_R0?AUINonDelegatingUnknown@@@8 DQ FLAT:??_7type_info@@6B@ ; INonDelegatingUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUINonDelegatingUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@INonDelegatingUnknown@@8 DD imagerel ??_R0?AUINonDelegatingUnknown@@@8 ; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CUnknown@@8
rdata$r	SEGMENT
??_R2CUnknown@@8 DD imagerel ??_R1A@?0A@EA@CUnknown@@8	; CUnknown::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	imagerel ??_R17?0A@EA@CBaseObject@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CUnknown@@8
rdata$r	SEGMENT
??_R3CUnknown@@8 DD 00H					; CUnknown::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCUnknown@@@8
_DATA	SEGMENT
??_R0?AVCUnknown@@@8 DQ FLAT:??_7type_info@@6B@		; CUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CUnknown@@8 DD imagerel ??_R0?AVCUnknown@@@8 ; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseReferenceClock@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseReferenceClock@@8 DD imagerel ??_R0?AVCBaseReferenceClock@@@8 ; CBaseReferenceClock::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBaseReferenceClock@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseReferenceClock@@8
rdata$r	SEGMENT
??_R2CBaseReferenceClock@@8 DD imagerel ??_R1A@?0A@EA@CBaseReferenceClock@@8 ; CBaseReferenceClock::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CUnknown@@8
	DD	imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	imagerel ??_R17?0A@EA@CBaseObject@@8
	DD	imagerel ??_R1CA@?0A@EA@IReferenceClock@@8
	DD	imagerel ??_R1CA@?0A@EA@IUnknown@@8
	DD	imagerel ??_R1CI@?0A@EA@CCritSec@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CBaseReferenceClock@@8
rdata$r	SEGMENT
??_R3CBaseReferenceClock@@8 DD 00H			; CBaseReferenceClock::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	07H
	DD	imagerel ??_R2CBaseReferenceClock@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseReferenceClock@@@8
_DATA	SEGMENT
??_R0?AVCBaseReferenceClock@@@8 DQ FLAT:??_7type_info@@6B@ ; CBaseReferenceClock `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBaseReferenceClock@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBaseReferenceClock@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CBaseReferenceClock@@6BCUnknown@@@ DD 01H		; CBaseReferenceClock::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCBaseReferenceClock@@@8
	DD	imagerel ??_R3CBaseReferenceClock@@8
	DD	imagerel ??_R4CBaseReferenceClock@@6BCUnknown@@@
rdata$r	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1CBaseReferenceClock@@MEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1CBaseReferenceClock@@MEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CBaseReferenceClock@@MEAA@XZ DD 022711H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1CBaseReferenceClock@@MEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1CBaseReferenceClock@@MEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1CBaseReferenceClock@@MEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??1CBaseReferenceClock@@MEAA@XZ
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1CBaseReferenceClock@@MEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1CBaseReferenceClock@@MEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1CBaseReferenceClock@@MEAA@XZ@4HA
xdata	ENDS
;	COMDAT ??_7CBaseReferenceClock@@6BIReferenceClock@@@
CONST	SEGMENT
??_7CBaseReferenceClock@@6BIReferenceClock@@@ DQ FLAT:??_R4CBaseReferenceClock@@6BIReferenceClock@@@ ; CBaseReferenceClock::`vftable'
	DQ	FLAT:?QueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CBaseReferenceClock@@UEAAKXZ
	DQ	FLAT:?Release@CBaseReferenceClock@@UEAAKXZ
	DQ	FLAT:?GetTime@CBaseReferenceClock@@UEAAJPEA_J@Z
	DQ	FLAT:?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z
	DQ	FLAT:?AdvisePeriodic@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z
	DQ	FLAT:?Unadvise@CBaseReferenceClock@@UEAAJ_K@Z
CONST	ENDS
;	COMDAT ??_7CBaseReferenceClock@@6BCUnknown@@@
CONST	SEGMENT
??_7CBaseReferenceClock@@6BCUnknown@@@ DQ FLAT:??_R4CBaseReferenceClock@@6BCUnknown@@@ ; CBaseReferenceClock::`vftable'
	DQ	FLAT:?NonDelegatingQueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?NonDelegatingAddRef@CUnknown@@UEAAKXZ
	DQ	FLAT:?NonDelegatingRelease@CUnknown@@UEAAKXZ
	DQ	FLAT:??_ECBaseReferenceClock@@MEAAPEAXI@Z
	DQ	FLAT:?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??1CBaseReferenceClock@@MEAA@XZ
_TEXT	SEGMENT
$T82943 = 32
$T82944 = 40
$T82956 = 48
tv153 = 56
this$ = 80
??1CBaseReferenceClock@@MEAA@XZ PROC			; CBaseReferenceClock::~CBaseReferenceClock, COMDAT
; Line 37
$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
	mov	QWORD PTR $T82956[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CBaseReferenceClock@@6BCUnknown@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CBaseReferenceClock@@6BIReferenceClock@@@
	mov	QWORD PTR [rax+32], rcx
; Line 39
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+128], 0
	je	SHORT $LN4@CBaseRefer
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rax+128]
	call	QWORD PTR __imp_timeEndPeriod
$LN4@CBaseRefer:
; Line 41
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+144]
	call	?DumpLinkedList@CAMSchedule@@QEAAXXZ	; CAMSchedule::DumpLinkedList
; Line 43
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+136], 0
	je	$LN3@CBaseRefer
; Line 45
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+132], 1
; Line 46
	mov	rcx, QWORD PTR this$[rsp]
	call	?TriggerThread@CBaseReferenceClock@@QEAAXXZ ; CBaseReferenceClock::TriggerThread
; Line 47
	mov	edx, -1					; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+136]
	call	QWORD PTR __imp_WaitForSingleObject
; Line 48
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+136]
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN2@CBaseRefer
	mov	r8d, 48					; 00000030H
	lea	rdx, OFFSET FLAT:$SG82242
	lea	rcx, OFFSET FLAT:$SG82243
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@CBaseRefer:
; Line 49
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+136], 0
; Line 50
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+144]
	call	?GetEvent@CAMSchedule@@QEBAPEAXXZ	; CAMSchedule::GetEvent
	mov	rcx, rax
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN1@CBaseRefer
	mov	r8d, 50					; 00000032H
	lea	rdx, OFFSET FLAT:$SG82245
	lea	rcx, OFFSET FLAT:$SG82246
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CBaseRefer:
; Line 51
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+144]
	mov	QWORD PTR $T82944[rsp], rax
	mov	rax, QWORD PTR $T82944[rsp]
	mov	QWORD PTR $T82943[rsp], rax
	cmp	QWORD PTR $T82943[rsp], 0
	je	SHORT $LN7@CBaseRefer
	mov	rax, QWORD PTR $T82943[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T82943[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv153[rsp], rax
	jmp	SHORT $LN3@CBaseRefer
$LN7@CBaseRefer:
	mov	QWORD PTR tv153[rsp], 0
$LN3@CBaseRefer:
; Line 53
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	npad	1
	mov	rcx, QWORD PTR this$[rsp]
	call	??1CUnknown@@UEAA@XZ			; CUnknown::~CUnknown
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??1CBaseReferenceClock@@MEAA@XZ ENDP			; CBaseReferenceClock::~CBaseReferenceClock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T82943 = 32
$T82944 = 40
$T82956 = 48
tv153 = 56
this$ = 80
?dtor$0@?0???1CBaseReferenceClock@@MEAA@XZ@4HA PROC	; `CBaseReferenceClock::~CBaseReferenceClock'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1CUnknown@@UEAA@XZ			; CUnknown::~CUnknown
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???1CBaseReferenceClock@@MEAA@XZ@4HA ENDP	; `CBaseReferenceClock::~CBaseReferenceClock'::`1'::dtor$0
; Function compile flags: /Odtp /RTCsu
$T82943 = 32
$T82944 = 40
$T82956 = 48
tv153 = 56
this$ = 80
?dtor$1@?0???1CBaseReferenceClock@@MEAA@XZ@4HA PROC	; `CBaseReferenceClock::~CBaseReferenceClock'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???1CBaseReferenceClock@@MEAA@XZ@4HA ENDP	; `CBaseReferenceClock::~CBaseReferenceClock'::`1'::dtor$1
text$x	ENDS
EXTRN	??1CBaseObject@@QEAA@XZ:PROC			; CBaseObject::~CBaseObject
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\combase.h
pdata	SEGMENT
$pdata$??1CUnknown@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+53
	DD	imagerel $unwind$??1CUnknown@@UEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CUnknown@@UEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CUnknown@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CUnknown@@UEAA@XZ PROC				; CUnknown::~CUnknown, COMDAT
; Line 212
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1CBaseObject@@QEAA@XZ			; CBaseObject::~CBaseObject
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CUnknown@@UEAA@XZ ENDP				; CUnknown::~CUnknown
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\dsschedule.h
pdata	SEGMENT
$pdata$?GetEvent@CAMSchedule@@QEBAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?GetEvent@CAMSchedule@@QEBAPEAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetEvent@CAMSchedule@@QEBAPEAXXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetEvent@CAMSchedule@@QEBAPEAXXZ
_TEXT	SEGMENT
this$ = 16
?GetEvent@CAMSchedule@@QEBAPEAXXZ PROC			; CAMSchedule::GetEvent, COMDAT
; Line 34
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+184]
	pop	rdi
	ret	0
?GetEvent@CAMSchedule@@QEBAPEAXXZ ENDP			; CAMSchedule::GetEvent
_TEXT	ENDS
PUBLIC	?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ	; CUnknown::GetOwner
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\refclock.h
pdata	SEGMENT
$pdata$?QueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?QueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?QueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
tv72 = 32
this$ = 64
riid$ = 72
ppv$ = 80
?QueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CBaseReferenceClock::QueryInterface, COMDAT
; Line 84
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 32					; 00000020H
	mov	rcx, rax
	call	?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ ; CUnknown::GetOwner
	mov	QWORD PTR tv72[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR ppv$[rsp]
	mov	rdx, QWORD PTR riid$[rsp]
	mov	rcx, QWORD PTR tv72[rsp]
	call	QWORD PTR [rax]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?QueryInterface@CBaseReferenceClock@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CBaseReferenceClock::QueryInterface
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\combase.h
pdata	SEGMENT
$pdata$?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ
_TEXT	SEGMENT
this$ = 16
?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ PROC		; CUnknown::GetOwner, COMDAT
; Line 224
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 225
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
; Line 226
	pop	rdi
	ret	0
?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ ENDP		; CUnknown::GetOwner
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\refclock.h
pdata	SEGMENT
$pdata$?AddRef@CBaseReferenceClock@@UEAAKXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?AddRef@CBaseReferenceClock@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRef@CBaseReferenceClock@@UEAAKXZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?AddRef@CBaseReferenceClock@@UEAAKXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?AddRef@CBaseReferenceClock@@UEAAKXZ PROC		; CBaseReferenceClock::AddRef, COMDAT
; Line 84
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 32					; 00000020H
	mov	rcx, rax
	call	?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ ; CUnknown::GetOwner
	mov	QWORD PTR tv72[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv72[rsp]
	call	QWORD PTR [rax+8]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?AddRef@CBaseReferenceClock@@UEAAKXZ ENDP		; CBaseReferenceClock::AddRef
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@CBaseReferenceClock@@UEAAKXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?Release@CBaseReferenceClock@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@CBaseReferenceClock@@UEAAKXZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Release@CBaseReferenceClock@@UEAAKXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?Release@CBaseReferenceClock@@UEAAKXZ PROC		; CBaseReferenceClock::Release, COMDAT
; Line 84
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 32					; 00000020H
	mov	rcx, rax
	call	?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ ; CUnknown::GetOwner
	mov	QWORD PTR tv72[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv72[rsp]
	call	QWORD PTR [rax+16]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Release@CBaseReferenceClock@@UEAAKXZ ENDP		; CBaseReferenceClock::Release
_TEXT	ENDS
PUBLIC	??_C@_1EE@JNLKNNBF@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAp?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAG?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ@ ; `string'
PUBLIC	??_C@_1II@BDJCKAMI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@ ; `string'
EXTRN	__imp_SetEvent:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TriggerThread@CBaseReferenceClock@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?TriggerThread@CBaseReferenceClock@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TriggerThread@CBaseReferenceClock@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_1EE@JNLKNNBF@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAp?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAG?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ@
CONST	SEGMENT
??_C@_1EE@JNLKNNBF@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAp?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAG?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '(', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'S', 00H, 'c'
	DB	00H, 'h', 00H, 'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H
	DB	'-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'E', 00H, 'v'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '(', 00H, ')', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1II@BDJCKAMI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@
CONST	SEGMENT
??_C@_1II@BDJCKAMI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'W'
	DB	00H, 'P', 00H, 'F', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'K', 00H, 'i', 00H, 't', 00H, ' ', 00H, '-'
	DB	00H, ' ', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, '\', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '\', 00H, 'B', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'e', 00H, 's', 00H, '\', 00H, 'r', 00H, 'e', 00H
	DB	'f', 00H, 'c', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, '.'
	DB	00H, 'h', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?TriggerThread@CBaseReferenceClock@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?TriggerThread@CBaseReferenceClock@@QEAAXXZ PROC	; CBaseReferenceClock::TriggerThread, COMDAT
; Line 152
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 153
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+144]
	call	?GetEvent@CAMSchedule@@QEBAPEAXXZ	; CAMSchedule::GetEvent
	mov	rcx, rax
	call	QWORD PTR __imp_SetEvent
	test	eax, eax
	jne	SHORT $LN1@TriggerThr
	mov	r8d, 153				; 00000099H
	lea	rdx, OFFSET FLAT:??_C@_1II@BDJCKAMI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@
	lea	rcx, OFFSET FLAT:??_C@_1EE@JNLKNNBF@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAp?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAG?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ@
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@TriggerThr:
; Line 154
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?TriggerThread@CBaseReferenceClock@@QEAAXXZ ENDP	; CBaseReferenceClock::TriggerThread
_TEXT	ENDS
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCBaseReferenceClock@@MEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??_GCBaseReferenceClock@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCBaseReferenceClock@@MEAAPEAXI@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??_GCBaseReferenceClock@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCBaseReferenceClock@@MEAAPEAXI@Z PROC		; CBaseReferenceClock::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??1CBaseReferenceClock@@MEAA@XZ		; CBaseReferenceClock::~CBaseReferenceClock
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN1@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN1@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCBaseReferenceClock@@MEAAPEAXI@Z ENDP		; CBaseReferenceClock::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?AdviseThreadFunction@CBaseReferenceClock@@CAKPEAX@Z ; CBaseReferenceClock::AdviseThreadFunction
PUBLIC	??0IReferenceClock@@QEAA@XZ			; IReferenceClock::IReferenceClock
PUBLIC	??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z ; CBaseReferenceClock::CBaseReferenceClock
EXTRN	__imp_SetThreadPriority:PROC
EXTRN	__imp_CreateThread:PROC
EXTRN	__imp_timeGetTime:PROC
EXTRN	__imp_timeBeginPeriod:PROC
EXTRN	__imp_timeGetDevCaps:PROC
EXTRN	??0CAMSchedule@@QEAA@PEAX@Z:PROC		; CAMSchedule::CAMSchedule
EXTRN	__imp_CreateEventW:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??0CCritSec@@QEAA@XZ:PROC			; CCritSec::CCritSec
EXTRN	??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z:PROC	; CUnknown::CUnknown
EXTRN	_RTC_CheckStackVars:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\refclock.cpp
pdata	SEGMENT
$pdata$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z DD imagerel $LN21
	DD	imagerel $LN21+924
	DD	imagerel $unwind$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA DD imagerel ?dtor$0@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA DD imagerel ?dtor$1@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA DD imagerel ?dtor$2@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
	DD	imagerel ?dtor$2@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z DD imagerel ??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z
	DD	0ffffffffH
	DD	imagerel ??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z+93
	DD	00H
	DD	imagerel ??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z+134
	DD	01H
	DD	imagerel ??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z+286
	DD	02H
	DD	imagerel ??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z+358
	DD	01H
	DD	imagerel ??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z+886
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z DD 033f11H
	DD	016011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z$rtcName$0 DB 074H ; CBaseReferenceClock::CBaseReferenceClock
	DB	063H
	DB	00H
	ORG $+5
??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z$rtcName$1 DB 054H ; CBaseReferenceClock::CBaseReferenceClock
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	049H
	DB	044H
	DB	00H
	ORG $+15
??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z$rtcVarDesc DD 054H ; CBaseReferenceClock::CBaseReferenceClock
	DD	04H
	DQ	FLAT:??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z$rtcName$0
	ORG $+96
??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z$rtcFrameData DD 02H ; CBaseReferenceClock::CBaseReferenceClock
	DD	00H
	DQ	FLAT:??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z$rtcVarDesc
$cppxdata$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z
	DD	088H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z
_TEXT	SEGMENT
tc$82270 = 56
ThreadID$82272 = 84
$T83039 = 104
$T83040 = 112
$T83047 = 120
$T83048 = 128
$T83060 = 136
tv154 = 144
tv153 = 152
tv167 = 160
tv206 = 168
this$ = 192
pName$ = 200
pUnk$ = 208
phr$ = 216
pShed$ = 224
??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z PROC ; CBaseReferenceClock::CBaseReferenceClock, COMDAT
; Line 65
$LN21:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rdi, rsp
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	QWORD PTR $T83060[rsp], -2
	mov	r8, QWORD PTR pUnk$[rsp]
	mov	rdx, QWORD PTR pName$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z	; CUnknown::CUnknown
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0IReferenceClock@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??0CCritSec@@QEAA@XZ			; CCritSec::CCritSec
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CBaseReferenceClock@@6BCUnknown@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CBaseReferenceClock@@6BIReferenceClock@@@
	mov	QWORD PTR [rax+32], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+112], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+128], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+132], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+136], 0
	cmp	QWORD PTR pShed$[rsp], 0
	je	SHORT $LN12@CBaseRefer@2
	mov	rax, QWORD PTR pShed$[rsp]
	mov	QWORD PTR tv154[rsp], rax
	jmp	SHORT $LN13@CBaseRefer@2
$LN12@CBaseRefer@2:
	mov	ecx, 208				; 000000d0H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T83040[rsp], rax
	cmp	QWORD PTR $T83040[rsp], 0
	je	SHORT $LN10@CBaseRefer@2
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateEventW
	mov	rdx, rax
	mov	rcx, QWORD PTR $T83040[rsp]
	call	??0CAMSchedule@@QEAA@PEAX@Z		; CAMSchedule::CAMSchedule
	mov	QWORD PTR tv153[rsp], rax
	jmp	SHORT $LN11@CBaseRefer@2
$LN10@CBaseRefer@2:
	mov	QWORD PTR tv153[rsp], 0
$LN11@CBaseRefer@2:
	mov	rax, QWORD PTR tv153[rsp]
	mov	QWORD PTR $T83039[rsp], rax
	mov	rax, QWORD PTR $T83039[rsp]
	mov	QWORD PTR tv154[rsp], rax
$LN13@CBaseRefer@2:
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR tv154[rsp]
	mov	QWORD PTR [rax+144], rcx
; Line 68
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+144], 0
	jne	SHORT $LN7@CBaseRefer@2
	mov	r8d, 68					; 00000044H
	lea	rdx, OFFSET FLAT:$SG82265
	lea	rcx, OFFSET FLAT:$SG82266
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN7@CBaseRefer@2:
; Line 69
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+144], 0
	jne	SHORT $LN6@CBaseRefer@2
; Line 71
	mov	rax, QWORD PTR phr$[rsp]
	mov	DWORD PTR [rax], -2147024882		; ffffffff8007000eH
; Line 73
	jmp	$LN5@CBaseRefer@2
$LN6@CBaseRefer@2:
; Line 79
	mov	edx, 8
	lea	rcx, QWORD PTR tc$82270[rsp]
	call	QWORD PTR __imp_timeGetDevCaps
	test	eax, eax
	jne	SHORT $LN14@CBaseRefer@2
	mov	eax, DWORD PTR tc$82270[rsp]
	mov	DWORD PTR tv167[rsp], eax
	jmp	SHORT $LN15@CBaseRefer@2
$LN14@CBaseRefer@2:
	mov	DWORD PTR tv167[rsp], 1
$LN15@CBaseRefer@2:
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR tv167[rsp]
	mov	DWORD PTR [rax+128], ecx
; Line 81
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rax+128]
	call	QWORD PTR __imp_timeBeginPeriod
; Line 84
	call	QWORD PTR __imp_timeGetTime
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+104], eax
; Line 85
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+104]
	imul	rax, 10000				; 00002710H
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+96], rax
; Line 91
	cmp	QWORD PTR pShed$[rsp], 0
	jne	$LN5@CBaseRefer@2
; Line 99
	lea	rax, QWORD PTR ThreadID$82272[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 0
	mov	r9, QWORD PTR this$[rsp]
	lea	r8, OFFSET FLAT:?AdviseThreadFunction@CBaseReferenceClock@@CAKPEAX@Z ; CBaseReferenceClock::AdviseThreadFunction
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateThread
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+136], rax
; Line 101
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+136], 0
	je	SHORT $LN3@CBaseRefer@2
; Line 103
	mov	edx, 15
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+136]
	call	QWORD PTR __imp_SetThreadPriority
; Line 105
	jmp	$LN5@CBaseRefer@2
$LN3@CBaseRefer@2:
; Line 107
	mov	rax, QWORD PTR phr$[rsp]
	mov	DWORD PTR [rax], -2147467259		; ffffffff80004005H
; Line 108
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+144]
	call	?GetEvent@CAMSchedule@@QEBAPEAXXZ	; CAMSchedule::GetEvent
	mov	rcx, rax
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN1@CBaseRefer@2
	mov	r8d, 108				; 0000006cH
	lea	rdx, OFFSET FLAT:$SG82280
	lea	rcx, OFFSET FLAT:$SG82281
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CBaseRefer@2:
; Line 109
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+144]
	mov	QWORD PTR $T83048[rsp], rax
	mov	rax, QWORD PTR $T83048[rsp]
	mov	QWORD PTR $T83047[rsp], rax
	cmp	QWORD PTR $T83047[rsp], 0
	je	SHORT $LN16@CBaseRefer@2
	mov	rax, QWORD PTR $T83047[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T83047[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv206[rsp], rax
	jmp	SHORT $LN5@CBaseRefer@2
$LN16@CBaseRefer@2:
	mov	QWORD PTR tv206[rsp], 0
$LN5@CBaseRefer@2:
; Line 113
	mov	rax, QWORD PTR this$[rsp]
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
??0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z ENDP ; CBaseReferenceClock::CBaseReferenceClock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tc$82270 = 56
ThreadID$82272 = 84
$T83039 = 104
$T83040 = 112
$T83047 = 120
$T83048 = 128
$T83060 = 136
tv154 = 144
tv153 = 152
tv167 = 160
tv206 = 168
this$ = 192
pName$ = 200
pUnk$ = 208
phr$ = 216
pShed$ = 224
?dtor$0@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA PROC ; `CBaseReferenceClock::CBaseReferenceClock'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1CUnknown@@UEAA@XZ			; CUnknown::~CUnknown
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA ENDP ; `CBaseReferenceClock::CBaseReferenceClock'::`1'::dtor$0
; Function compile flags: /Odtp /RTCsu
tc$82270 = 56
ThreadID$82272 = 84
$T83039 = 104
$T83040 = 112
$T83047 = 120
$T83048 = 128
$T83060 = 136
tv154 = 144
tv153 = 152
tv167 = 160
tv206 = 168
this$ = 192
pName$ = 200
pUnk$ = 208
phr$ = 216
pShed$ = 224
?dtor$1@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA PROC ; `CBaseReferenceClock::CBaseReferenceClock'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA ENDP ; `CBaseReferenceClock::CBaseReferenceClock'::`1'::dtor$1
; Function compile flags: /Odtp /RTCsu
tc$82270 = 56
ThreadID$82272 = 84
$T83039 = 104
$T83040 = 112
$T83047 = 120
$T83048 = 128
$T83060 = 136
tv154 = 144
tv153 = 152
tv167 = 160
tv206 = 168
this$ = 192
pName$ = 200
pUnk$ = 208
phr$ = 216
pShed$ = 224
?dtor$2@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA PROC ; `CBaseReferenceClock::CBaseReferenceClock'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T83040[rbp]
	call	??3@YAXPEAX@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0CBaseReferenceClock@@QEAA@PEA_WPEAUIUnknown@@PEAJPEAVCAMSchedule@@@Z@4HA ENDP ; `CBaseReferenceClock::CBaseReferenceClock'::`1'::dtor$2
text$x	ENDS
PUBLIC	??0IUnknown@@QEAA@XZ				; IUnknown::IUnknown
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IReferenceClock@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IReferenceClock@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IReferenceClock@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0IReferenceClock@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IReferenceClock@@QEAA@XZ PROC			; IReferenceClock::IReferenceClock, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0IUnknown@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0IReferenceClock@@QEAA@XZ ENDP			; IReferenceClock::IReferenceClock
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IUnknown@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0IUnknown@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IUnknown@@QEAA@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0IUnknown@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0IUnknown@@QEAA@XZ PROC				; IUnknown::IUnknown, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0IUnknown@@QEAA@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
EXTRN	?Unlock@CCritSec@@QEAAXXZ:PROC			; CCritSec::Unlock
EXTRN	?Lock@CCritSec@@QEAAXXZ:PROC			; CCritSec::Lock
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTime@CBaseReferenceClock@@UEAAJPEA_J@Z DD imagerel $LN7
	DD	imagerel $LN7+205
	DD	imagerel $unwind$?GetTime@CBaseReferenceClock@@UEAAJPEA_J@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTime@CBaseReferenceClock@@UEAAJPEA_J@Z DD 022301H
	DD	0700b720fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetTime@CBaseReferenceClock@@UEAAJPEA_J@Z
_TEXT	SEGMENT
hr$ = 32
rtNow$82292 = 40
tv90 = 48
this$ = 80
pTime$ = 88
?GetTime@CBaseReferenceClock@@UEAAJPEA_J@Z PROC		; CBaseReferenceClock::GetTime, COMDAT
; Line 116
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 118
	cmp	QWORD PTR pTime$[rsp], 0
	je	$LN4@GetTime
; Line 121
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?Lock@CCritSec@@QEAAXXZ			; CCritSec::Lock
; Line 122
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx-32]
	mov	QWORD PTR tv90[rsp], rcx
	mov	rcx, rax
	mov	rax, QWORD PTR tv90[rsp]
	call	QWORD PTR [rax+32]
	mov	QWORD PTR rtNow$82292[rsp], rax
; Line 123
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+80]
	cmp	QWORD PTR rtNow$82292[rsp], rax
	jle	SHORT $LN3@GetTime
; Line 125
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtNow$82292[rsp]
	mov	QWORD PTR [rax+80], rcx
; Line 126
	mov	DWORD PTR hr$[rsp], 0
; Line 128
	jmp	SHORT $LN2@GetTime
$LN3@GetTime:
; Line 130
	mov	DWORD PTR hr$[rsp], 1
$LN2@GetTime:
; Line 132
	mov	rax, QWORD PTR pTime$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+80]
	mov	QWORD PTR [rax], rcx
; Line 133
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?Unlock@CCritSec@@QEAAXXZ		; CCritSec::Unlock
	jmp	SHORT $LN1@GetTime
$LN4@GetTime:
; Line 136
	mov	DWORD PTR hr$[rsp], -2147467261		; ffffffff80004003H
$LN1@GetTime:
; Line 138
	mov	eax, DWORD PTR hr$[rsp]
; Line 139
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?GetTime@CBaseReferenceClock@@UEAAJPEA_J@Z ENDP		; CBaseReferenceClock::GetTime
_TEXT	ENDS
EXTRN	?AddAdvisePacket@CAMSchedule@@QEAA_KAEB_J0PEAXH@Z:PROC ; CAMSchedule::AddAdvisePacket
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z DD imagerel $LN10
	DD	imagerel $LN10+328
	DD	imagerel $unwind$?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z DD 023001H
	DD	07015d219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z$rtcName$0 DB 06cH ; CBaseReferenceClock::AdviseTime
	DB	052H
	DB	065H
	DB	066H
	DB	054H
	DB	069H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+7
?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z$rtcVarDesc DD 048H ; CBaseReferenceClock::AdviseTime
	DD	08H
	DQ	FLAT:?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z$rtcName$0
	ORG $+48
?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z$rtcFrameData DD 01H ; CBaseReferenceClock::AdviseTime
	DD	00H
	DQ	FLAT:?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z
_TEXT	SEGMENT
hr$ = 48
lRefTime$ = 72
$T83112 = 88
tv84 = 96
this$ = 128
baseTime$ = 136
streamTime$ = 144
hEvent$ = 152
pdwAdviseCookie$ = 160
?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z PROC	; CBaseReferenceClock::AdviseTime, COMDAT
; Line 148
$LN10:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rdi, rsp
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
; Line 149
	cmp	QWORD PTR pdwAdviseCookie$[rsp], 0
	jne	SHORT $LN5@AdviseTime
	mov	eax, -2147467261			; ffffffff80004003H
	jmp	$LN6@AdviseTime
$LN5@AdviseTime:
; Line 150
	mov	rax, QWORD PTR pdwAdviseCookie$[rsp]
	mov	QWORD PTR [rax], 0
; Line 153
	xor	edx, edx
	mov	rcx, QWORD PTR hEvent$[rsp]
	call	QWORD PTR __imp_WaitForSingleObject
	cmp	eax, 258				; 00000102H
	je	SHORT $LN4@AdviseTime
	mov	r8d, 153				; 00000099H
	lea	rdx, OFFSET FLAT:$SG82310
	lea	rcx, OFFSET FLAT:$SG82311
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@AdviseTime:
; Line 157
	mov	rax, QWORD PTR streamTime$[rsp]
	mov	rcx, QWORD PTR baseTime$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR lRefTime$[rsp], rax
; Line 158
	cmp	QWORD PTR lRefTime$[rsp], 0
	jle	SHORT $LN2@AdviseTime
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	QWORD PTR lRefTime$[rsp], rax
	jne	SHORT $LN3@AdviseTime
$LN2@AdviseTime:
; Line 160
	mov	DWORD PTR hr$[rsp], -2147024809		; ffffffff80070057H
; Line 162
	jmp	SHORT $LN1@AdviseTime
$LN3@AdviseTime:
; Line 164
	mov	QWORD PTR $T83112[rsp], 0
	mov	DWORD PTR [rsp+32], 0
	mov	r9, QWORD PTR hEvent$[rsp]
	lea	r8, QWORD PTR $T83112[rsp]
	lea	rdx, QWORD PTR lRefTime$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+112]
	call	?AddAdvisePacket@CAMSchedule@@QEAA_KAEB_J0PEAXH@Z ; CAMSchedule::AddAdvisePacket
	mov	rcx, QWORD PTR pdwAdviseCookie$[rsp]
	mov	QWORD PTR [rcx], rax
; Line 165
	mov	rax, QWORD PTR pdwAdviseCookie$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN8@AdviseTime
	mov	DWORD PTR tv84[rsp], 0
	jmp	SHORT $LN9@AdviseTime
$LN8@AdviseTime:
	mov	DWORD PTR tv84[rsp], -2147024882	; ffffffff8007000eH
$LN9@AdviseTime:
	mov	eax, DWORD PTR tv84[rsp]
	mov	DWORD PTR hr$[rsp], eax
$LN1@AdviseTime:
; Line 167
	mov	eax, DWORD PTR hr$[rsp]
$LN6@AdviseTime:
; Line 168
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?AdviseTime@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z ENDP	; CBaseReferenceClock::AdviseTime
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AdvisePeriodic@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z DD imagerel $LN8
	DD	imagerel $LN8+210
	DD	imagerel $unwind$?AdvisePeriodic@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AdvisePeriodic@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z DD 022d01H
	DD	070157219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?AdvisePeriodic@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z
_TEXT	SEGMENT
hr$ = 48
tv77 = 52
this$ = 80
StartTime$ = 88
PeriodTime$ = 96
hSemaphore$ = 104
pdwAdviseCookie$ = 112
?AdvisePeriodic@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z PROC ; CBaseReferenceClock::AdvisePeriodic, COMDAT
; Line 178
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 179
	cmp	QWORD PTR pdwAdviseCookie$[rsp], 0
	jne	SHORT $LN3@AdvisePeri
	mov	eax, -2147467261			; ffffffff80004003H
	jmp	$LN4@AdvisePeri
$LN3@AdvisePeri:
; Line 180
	mov	rax, QWORD PTR pdwAdviseCookie$[rsp]
	mov	QWORD PTR [rax], 0
; Line 183
	cmp	QWORD PTR StartTime$[rsp], 0
	jle	SHORT $LN2@AdvisePeri
	cmp	QWORD PTR PeriodTime$[rsp], 0
	jle	SHORT $LN2@AdvisePeri
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	QWORD PTR StartTime$[rsp], rax
	je	SHORT $LN2@AdvisePeri
; Line 185
	mov	DWORD PTR [rsp+32], 1
	mov	r9, QWORD PTR hSemaphore$[rsp]
	lea	r8, QWORD PTR PeriodTime$[rsp]
	lea	rdx, QWORD PTR StartTime$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+112]
	call	?AddAdvisePacket@CAMSchedule@@QEAA_KAEB_J0PEAXH@Z ; CAMSchedule::AddAdvisePacket
	mov	rcx, QWORD PTR pdwAdviseCookie$[rsp]
	mov	QWORD PTR [rcx], rax
; Line 186
	mov	rax, QWORD PTR pdwAdviseCookie$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN6@AdvisePeri
	mov	DWORD PTR tv77[rsp], 0
	jmp	SHORT $LN7@AdvisePeri
$LN6@AdvisePeri:
	mov	DWORD PTR tv77[rsp], -2147024882	; ffffffff8007000eH
$LN7@AdvisePeri:
	mov	eax, DWORD PTR tv77[rsp]
	mov	DWORD PTR hr$[rsp], eax
	jmp	SHORT $LN1@AdvisePeri
$LN2@AdvisePeri:
; Line 188
	mov	DWORD PTR hr$[rsp], -2147024809		; ffffffff80070057H
$LN1@AdvisePeri:
; Line 190
	mov	eax, DWORD PTR hr$[rsp]
$LN4@AdvisePeri:
; Line 191
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?AdvisePeriodic@CBaseReferenceClock@@UEAAJ_J0_KPEA_K@Z ENDP ; CBaseReferenceClock::AdvisePeriodic
_TEXT	ENDS
EXTRN	?Unadvise@CAMSchedule@@QEAAJ_K@Z:PROC		; CAMSchedule::Unadvise
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Unadvise@CBaseReferenceClock@@UEAAJ_K@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?Unadvise@CBaseReferenceClock@@UEAAJ_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Unadvise@CBaseReferenceClock@@UEAAJ_K@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Unadvise@CBaseReferenceClock@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 48
dwAdviseCookie$ = 56
?Unadvise@CBaseReferenceClock@@UEAAJ_K@Z PROC		; CBaseReferenceClock::Unadvise, COMDAT
; Line 195
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 196
	mov	rdx, QWORD PTR dwAdviseCookie$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+112]
	call	?Unadvise@CAMSchedule@@QEAAJ_K@Z	; CAMSchedule::Unadvise
; Line 197
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Unadvise@CBaseReferenceClock@@UEAAJ_K@Z ENDP		; CBaseReferenceClock::Unadvise
_TEXT	ENDS
PUBLIC	??1CAutoLock@@QEAA@XZ				; CAutoLock::~CAutoLock
PUBLIC	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z		; CAutoLock::CAutoLock
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ DD imagerel $LN6
	DD	imagerel $LN6+199
	DD	imagerel $unwind$?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ$rtcName$0 DB 063H ; CBaseReferenceClock::GetPrivateTime
	DB	04fH
	DB	062H
	DB	06aH
	DB	065H
	DB	063H
	DB	074H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+4
?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ$rtcVarDesc DD 028H ; CBaseReferenceClock::GetPrivateTime
	DD	08H
	DQ	FLAT:?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ$rtcName$0
	ORG $+48
?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ$rtcFrameData DD 01H ; CBaseReferenceClock::GetPrivateTime
	DD	00H
	DQ	FLAT:?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ
_TEXT	SEGMENT
cObjectLock$ = 40
dwTime$ = 52
$T83144 = 56
tv70 = 64
this$ = 96
?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ PROC	; CBaseReferenceClock::GetPrivateTime, COMDAT
; Line 201
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
; Line 202
	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN3@GetPrivate
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR tv70[rsp], rax
	jmp	SHORT $LN4@GetPrivate
$LN3@GetPrivate:
	mov	QWORD PTR tv70[rsp], 0
$LN4@GetPrivate:
	mov	rdx, QWORD PTR tv70[rsp]
	lea	rcx, QWORD PTR cObjectLock$[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 212
	call	QWORD PTR __imp_timeGetTime
	mov	DWORD PTR dwTime$[rsp], eax
; Line 214
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+104]
	mov	ecx, DWORD PTR dwTime$[rsp]
	sub	ecx, eax
	mov	eax, ecx
	cdqe
	imul	rax, 10000				; 00002710H
	mov	rcx, QWORD PTR this$[rsp]
	add	rax, QWORD PTR [rcx+96]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+96], rax
; Line 215
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR dwTime$[rsp]
	mov	DWORD PTR [rax+104], ecx
; Line 218
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+96]
	mov	QWORD PTR $T83144[rsp], rax
	lea	rcx, QWORD PTR cObjectLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	rax, QWORD PTR $T83144[rsp]
; Line 219
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?GetPrivateTime@CBaseReferenceClock@@UEAA_JXZ ENDP	; CBaseReferenceClock::GetPrivateTime
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.h
pdata	SEGMENT
$pdata$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CAutoLock@@QEAA@PEAVCCritSec@@@Z
_TEXT	SEGMENT
this$ = 48
plock$ = 56
??0CAutoLock@@QEAA@PEAVCCritSec@@@Z PROC		; CAutoLock::CAutoLock, COMDAT
; Line 94
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 96
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR plock$[rsp]
	mov	QWORD PTR [rax], rcx
; Line 97
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?Lock@CCritSec@@QEAAXXZ			; CCritSec::Lock
; Line 98
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CAutoLock@@QEAA@PEAVCCritSec@@@Z ENDP		; CAutoLock::CAutoLock
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAutoLock@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??1CAutoLock@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAutoLock@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CAutoLock@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAutoLock@@QEAA@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; Line 100
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 101
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?Unlock@CCritSec@@QEAAXXZ		; CCritSec::Unlock
; Line 102
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CAutoLock@@QEAA@XZ ENDP				; CAutoLock::~CAutoLock
_TEXT	ENDS
PUBLIC	?ConvertToMilliseconds@@YA_JAEB_J@Z		; ConvertToMilliseconds
PUBLIC	?abs@@YAJJ@Z					; abs
PUBLIC	?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z	; CBaseReferenceClock::SetTimeDelta
EXTRN	?GetAdviseCount@CAMSchedule@@QEAAKXZ:PROC	; CAMSchedule::GetAdviseCount
EXTRN	?DbgLogInfo@@YAXKKPEB_WZZ:PROC			; DbgLogInfo
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\refclock.cpp
pdata	SEGMENT
$pdata$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z DD imagerel $LN14
	DD	imagerel $LN14+591
	DD	imagerel $unwind$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z@4HA DD imagerel ?dtor$0@?0??SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z@4HA
	DD	imagerel ?dtor$0@?0??SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z DD imagerel ?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z
	DD	0ffffffffH
	DD	imagerel ?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z+446
	DD	00H
	DD	imagerel ?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z+546
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z DD 033511H
	DD	0160112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z$rtcName$0 DB 063H ; CBaseReferenceClock::SetTimeDelta
	DB	04fH
	DB	062H
	DB	06aH
	DB	065H
	DB	063H
	DB	074H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+4
?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z$rtcVarDesc DD 068H ; CBaseReferenceClock::SetTimeDelta
	DD	08H
	DQ	FLAT:?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z$rtcName$0
	ORG $+48
?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z$rtcFrameData DD 01H ; CBaseReferenceClock::SetTimeDelta
	DD	00H
	DQ	FLAT:?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z$rtcVarDesc
$cppxdata$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z
	DD	088H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z
_TEXT	SEGMENT
llDelta$ = 64
usDelta$ = 72
delta$ = 76
Severity$ = 80
cObjectLock$ = 104
$T83176 = 120
$T83181 = 128
$T83187 = 136
tv66 = 144
tv93 = 152
tv78 = 160
tv134 = 168
this$ = 192
TimeDelta$ = 200
?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z PROC	; CBaseReferenceClock::SetTimeDelta, COMDAT
; Line 233
$LN14:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rdi, rsp
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	QWORD PTR $T83187[rsp], -2
; Line 237
	mov	rax, QWORD PTR TimeDelta$[rsp]
	cmp	QWORD PTR [rax], 0
	jle	SHORT $LN7@SetTimeDel
	mov	rax, QWORD PTR TimeDelta$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv66[rsp], rax
	jmp	SHORT $LN8@SetTimeDel
$LN7@SetTimeDel:
	mov	rax, QWORD PTR TimeDelta$[rsp]
	mov	rax, QWORD PTR [rax]
	neg	rax
	mov	QWORD PTR tv66[rsp], rax
$LN8@SetTimeDel:
	mov	rax, QWORD PTR tv66[rsp]
	mov	QWORD PTR llDelta$[rsp], rax
; Line 238
	mov	rax, 10000000000			; 00000002540be400H
	cmp	QWORD PTR llDelta$[rsp], rax
	jle	SHORT $LN4@SetTimeDel
; Line 239
	lea	r8, OFFSET FLAT:$SG82355
	xor	edx, edx
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
$LN4@SetTimeDel:
; Line 246
	mov	rax, QWORD PTR TimeDelta$[rsp]
	mov	rax, QWORD PTR [rax]
	cdq
	mov	ecx, 10
	idiv	rcx
	mov	DWORD PTR usDelta$[rsp], eax
; Line 248
	mov	ecx, DWORD PTR usDelta$[rsp]
	call	?abs@@YAJJ@Z				; abs
	mov	DWORD PTR delta$[rsp], eax
; Line 250
	mov	DWORD PTR Severity$[rsp], 8
$LN3@SetTimeDel:
; Line 251
	cmp	DWORD PTR delta$[rsp], 0
	jbe	SHORT $LN2@SetTimeDel
; Line 253
	mov	eax, DWORD PTR delta$[rsp]
	shr	eax, 3
	mov	DWORD PTR delta$[rsp], eax
; Line 254
	mov	eax, DWORD PTR Severity$[rsp]
	dec	eax
	mov	DWORD PTR Severity$[rsp], eax
; Line 255
	jmp	SHORT $LN3@SetTimeDel
$LN2@SetTimeDel:
; Line 261
	mov	rax, QWORD PTR TimeDelta$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	add	rax, QWORD PTR [rcx+96]
	mov	QWORD PTR $T83176[rsp], rax
	cmp	DWORD PTR Severity$[rsp], 0
	jge	SHORT $LN9@SetTimeDel
	mov	DWORD PTR tv93[rsp], 0
	jmp	SHORT $LN10@SetTimeDel
$LN9@SetTimeDel:
	mov	eax, DWORD PTR Severity$[rsp]
	mov	DWORD PTR tv93[rsp], eax
$LN10@SetTimeDel:
	lea	rcx, QWORD PTR $T83176[rsp]
	call	?ConvertToMilliseconds@@YA_JAEB_J@Z	; ConvertToMilliseconds
	mov	QWORD PTR tv78[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 96					; 00000060H
	call	?ConvertToMilliseconds@@YA_JAEB_J@Z	; ConvertToMilliseconds
	mov	rcx, QWORD PTR tv78[rsp]
	mov	DWORD PTR [rsp+48], ecx
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR usDelta$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR Severity$[rsp]
	lea	r8, OFFSET FLAT:$SG82363
	mov	edx, DWORD PTR tv93[rsp]
	mov	ecx, 1
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 272
	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN11@SetTimeDel
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR tv134[rsp], rax
	jmp	SHORT $LN12@SetTimeDel
$LN11@SetTimeDel:
	mov	QWORD PTR tv134[rsp], 0
$LN12@SetTimeDel:
	mov	rdx, QWORD PTR tv134[rsp]
	lea	rcx, QWORD PTR cObjectLock$[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 273
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+96]
	mov	rcx, QWORD PTR TimeDelta$[rsp]
	add	rax, QWORD PTR [rcx]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+96], rax
; Line 281
	mov	rax, QWORD PTR TimeDelta$[rsp]
	cmp	QWORD PTR [rax], 5000			; 00001388H
	jle	SHORT $LN1@SetTimeDel
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+144]
	call	?GetAdviseCount@CAMSchedule@@QEAAKXZ	; CAMSchedule::GetAdviseCount
	test	eax, eax
	jbe	SHORT $LN1@SetTimeDel
	mov	rcx, QWORD PTR this$[rsp]
	call	?TriggerThread@CBaseReferenceClock@@QEAAXXZ ; CBaseReferenceClock::TriggerThread
$LN1@SetTimeDel:
; Line 282
	mov	DWORD PTR $T83181[rsp], 0
	lea	rcx, QWORD PTR cObjectLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83181[rsp]
; Line 283
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z ENDP	; CBaseReferenceClock::SetTimeDelta
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
llDelta$ = 64
usDelta$ = 72
delta$ = 76
Severity$ = 80
cObjectLock$ = 104
$T83176 = 120
$T83181 = 128
$T83187 = 136
tv66 = 144
tv93 = 152
tv78 = 160
tv134 = 168
this$ = 192
TimeDelta$ = 200
?dtor$0@?0??SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z@4HA PROC ; `CBaseReferenceClock::SetTimeDelta'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cObjectLock$[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??SetTimeDelta@CBaseReferenceClock@@QEAAJAEB_J@Z@4HA ENDP ; `CBaseReferenceClock::SetTimeDelta'::`1'::dtor$0
text$x	ENDS
EXTRN	labs:PROC
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdlib.h
pdata	SEGMENT
$pdata$?abs@@YAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?abs@@YAJJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?abs@@YAJJ@Z DD 021c01H
	DD	070053209H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?abs@@YAJJ@Z
_TEXT	SEGMENT
_X$ = 48
?abs@@YAJJ@Z PROC					; abs, COMDAT
; Line 468
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+48]
; Line 469
	mov	ecx, DWORD PTR _X$[rsp]
	call	labs
; Line 470
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?abs@@YAJJ@Z ENDP					; abs
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\refclock.h
pdata	SEGMENT
$pdata$?ConvertToMilliseconds@@YA_JAEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?ConvertToMilliseconds@@YA_JAEB_J@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ConvertToMilliseconds@@YA_JAEB_J@Z DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ConvertToMilliseconds@@YA_JAEB_J@Z
_TEXT	SEGMENT
RT$ = 16
?ConvertToMilliseconds@@YA_JAEB_J@Z PROC		; ConvertToMilliseconds, COMDAT
; Line 20
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 24
	mov	rax, QWORD PTR RT$[rsp]
	mov	rax, QWORD PTR [rax]
	cdq
	mov	ecx, 10000				; 00002710H
	idiv	rcx
; Line 25
	pop	rdi
	ret	0
?ConvertToMilliseconds@@YA_JAEB_J@Z ENDP		; ConvertToMilliseconds
_TEXT	ENDS
PUBLIC	?AdviseThread@CBaseReferenceClock@@AEAAJXZ	; CBaseReferenceClock::AdviseThread
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\refclock.cpp
pdata	SEGMENT
$pdata$?AdviseThreadFunction@CBaseReferenceClock@@CAKPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?AdviseThreadFunction@CBaseReferenceClock@@CAKPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AdviseThreadFunction@CBaseReferenceClock@@CAKPEAX@Z DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?AdviseThreadFunction@CBaseReferenceClock@@CAKPEAX@Z
_TEXT	SEGMENT
p$ = 48
?AdviseThreadFunction@CBaseReferenceClock@@CAKPEAX@Z PROC ; CBaseReferenceClock::AdviseThreadFunction, COMDAT
; Line 288
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 289
	mov	rcx, QWORD PTR p$[rsp]
	call	?AdviseThread@CBaseReferenceClock@@AEAAJXZ ; CBaseReferenceClock::AdviseThread
; Line 290
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?AdviseThreadFunction@CBaseReferenceClock@@CAKPEAX@Z ENDP ; CBaseReferenceClock::AdviseThreadFunction
_TEXT	ENDS
EXTRN	?Advise@CAMSchedule@@QEAA_JAEB_J@Z:PROC		; CAMSchedule::Advise
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AdviseThread@CBaseReferenceClock@@AEAAJXZ DD imagerel $LN9
	DD	imagerel $LN9+408
	DD	imagerel $unwind$?AdviseThread@CBaseReferenceClock@@AEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AdviseThread@CBaseReferenceClock@@AEAAJXZ DD 022401H
	DD	07006f20dH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AdviseThread@CBaseReferenceClock@@AEAAJXZ$rtcName$0 DB 072H ; CBaseReferenceClock::AdviseThread
	DB	074H
	DB	04eH
	DB	06fH
	DB	077H
	DB	00H
	ORG $+2
?AdviseThread@CBaseReferenceClock@@AEAAJXZ$rtcName$1 DB 06cH ; CBaseReferenceClock::AdviseThread
	DB	06cH
	DB	057H
	DB	061H
	DB	069H
	DB	074H
	DB	00H
	ORG $+1
?AdviseThread@CBaseReferenceClock@@AEAAJXZ$rtcVarDesc DD 058H ; CBaseReferenceClock::AdviseThread
	DD	08H
	DQ	FLAT:?AdviseThread@CBaseReferenceClock@@AEAAJXZ$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?AdviseThread@CBaseReferenceClock@@AEAAJXZ$rtcName$0
	ORG $+96
?AdviseThread@CBaseReferenceClock@@AEAAJXZ$rtcFrameData DD 02H ; CBaseReferenceClock::AdviseThread
	DD	00H
	DQ	FLAT:?AdviseThread@CBaseReferenceClock@@AEAAJXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?AdviseThread@CBaseReferenceClock@@AEAAJXZ
_TEXT	SEGMENT
dwWait$ = 32
rtNow$82380 = 56
llWait$82383 = 88
$T83229 = 104
tv134 = 112
this$ = 144
?AdviseThread@CBaseReferenceClock@@AEAAJXZ PROC		; CBaseReferenceClock::AdviseThread, COMDAT
; Line 293
$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rdi, rsp
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
; Line 294
	mov	DWORD PTR dwWait$[rsp], -1		; ffffffffH
$LN4@AdviseThre:
; Line 302
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+132], 0
	jne	$LN3@AdviseThre
; Line 305
	mov	r9d, DWORD PTR dwWait$[rsp]
	lea	r8, OFFSET FLAT:$SG82378
	mov	edx, 3
	mov	ecx, 1
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 306
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+144]
	call	?GetEvent@CAMSchedule@@QEBAPEAXXZ	; CAMSchedule::GetEvent
	mov	edx, DWORD PTR dwWait$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_WaitForSingleObject
; Line 307
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+132], 0
	je	SHORT $LN2@AdviseThre
	jmp	$LN3@AdviseThre
$LN2@AdviseThre:
; Line 314
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+32]
	mov	QWORD PTR rtNow$82380[rsp], rax
; Line 318
	lea	rcx, QWORD PTR rtNow$82380[rsp]
	call	?ConvertToMilliseconds@@YA_JAEB_J@Z	; ConvertToMilliseconds
	mov	r9, rax
	lea	r8, OFFSET FLAT:$SG82381
	mov	edx, 3
	mov	ecx, 1
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 323
	mov	rax, QWORD PTR rtNow$82380[rsp]
	add	rax, 10000				; 00002710H
	mov	QWORD PTR $T83229[rsp], rax
	lea	rdx, QWORD PTR $T83229[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+144]
	call	?Advise@CAMSchedule@@QEAA_JAEB_J@Z	; CAMSchedule::Advise
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+120], rax
; Line 324
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtNow$82380[rsp]
	mov	rax, QWORD PTR [rax+120]
	sub	rax, rcx
	mov	QWORD PTR llWait$82383[rsp], rax
; Line 326
	cmp	QWORD PTR llWait$82383[rsp], 0
	jg	SHORT $LN1@AdviseThre
	mov	r8d, 326				; 00000146H
	lea	rdx, OFFSET FLAT:$SG82385
	lea	rcx, OFFSET FLAT:$SG82386
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@AdviseThre:
; Line 328
	lea	rcx, QWORD PTR llWait$82383[rsp]
	call	?ConvertToMilliseconds@@YA_JAEB_J@Z	; ConvertToMilliseconds
	mov	QWORD PTR llWait$82383[rsp], rax
; Line 330
	mov	eax, -1
	cmp	QWORD PTR llWait$82383[rsp], rax
	jle	SHORT $LN7@AdviseThre
	mov	DWORD PTR tv134[rsp], -1		; ffffffffH
	jmp	SHORT $LN8@AdviseThre
$LN7@AdviseThre:
	mov	eax, DWORD PTR llWait$82383[rsp]
	mov	DWORD PTR tv134[rsp], eax
$LN8@AdviseThre:
	mov	eax, DWORD PTR tv134[rsp]
	mov	DWORD PTR dwWait$[rsp], eax
; Line 331
	jmp	$LN4@AdviseThre
$LN3@AdviseThre:
; Line 332
	xor	eax, eax
; Line 333
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?AdviseThread@CBaseReferenceClock@@AEAAJXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
?AdviseThread@CBaseReferenceClock@@AEAAJXZ ENDP		; CBaseReferenceClock::AdviseThread
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?hlibOLEAut32@@3PEAUHINSTANCE__@@EA		; hlibOLEAut32
PUBLIC	IID_IAMFilterGraphCallback
PUBLIC	?m_cObjects@CBaseObject@@0JA			; CBaseObject::m_cObjects
_BSS	SEGMENT
?hlibOLEAut32@@3PEAUHINSTANCE__@@EA DQ 01H DUP (?)	; hlibOLEAut32
?m_cObjects@CBaseObject@@0JA DD 01H DUP (?)		; CBaseObject::m_cObjects
_BSS	ENDS
CONST	SEGMENT
szOle32Aut DB	'O', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'u', 00H, 't', 00H
	DB	'3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+6
$SG82287 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82288 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82292 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82293 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82307 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82308 DB	'l', 00H, 'R', 00H, 'e', 00H, 'f', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H
	ORG $+6
$SG82309 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 'f', 00H, '+', 00H, '+', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+4
$SG82322 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82323 DB	'l', 00H, 'R', 00H, 'e', 00H, 'f', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG82324 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, '%', 00H, 'd'
	DB	00H, ' ', 00H, 'r', 00H, 'e', 00H, 'f', 00H, '-', 00H, '-', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG82346 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82347 DB	'p', 00H, 'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG82349 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82350 DB	'p', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	'd', 00H, 00H, 00H
$SG82354 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82355 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG82357 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82358 DB	'p', 00H, 'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, '1', 00H, 00H, 00H
	ORG $+4
$SG82362 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82363 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG82365 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82366 DB	'p', 00H, 'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, '2', 00H, 00H, 00H
CONST	ENDS
;	COMDAT IID_IAMFilterGraphCallback
CONST	SEGMENT
IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??0CBaseObject@@QEAA@PEB_W@Z			; CBaseObject::CBaseObject
EXTRN	?DbgRegisterObjectCreation@@YAKPEBDPEB_W@Z:PROC	; DbgRegisterObjectCreation
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\combase.cpp
pdata	SEGMENT
$pdata$??0CBaseObject@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0CBaseObject@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CBaseObject@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CBaseObject@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pName$ = 56
??0CBaseObject@@QEAA@PEB_W@Z PROC			; CBaseObject::CBaseObject, COMDAT
; Line 23
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 25
	lea	rax, OFFSET FLAT:?m_cObjects@CBaseObject@@0JA ; CBaseObject::m_cObjects
	lock inc DWORD PTR [rax]
; Line 30
	mov	rdx, QWORD PTR pName$[rsp]
	xor	ecx, ecx
	call	?DbgRegisterObjectCreation@@YAKPEBDPEB_W@Z ; DbgRegisterObjectCreation
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 36
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CBaseObject@@QEAA@PEB_W@Z ENDP			; CBaseObject::CBaseObject
_TEXT	ENDS
PUBLIC	??0CBaseObject@@QEAA@PEBD@Z			; CBaseObject::CBaseObject
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CBaseObject@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0CBaseObject@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CBaseObject@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CBaseObject@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pName$ = 56
??0CBaseObject@@QEAA@PEBD@Z PROC			; CBaseObject::CBaseObject, COMDAT
; Line 40
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 42
	lea	rax, OFFSET FLAT:?m_cObjects@CBaseObject@@0JA ; CBaseObject::m_cObjects
	lock inc DWORD PTR [rax]
; Line 45
	xor	edx, edx
	mov	rcx, QWORD PTR pName$[rsp]
	call	?DbgRegisterObjectCreation@@YAKPEBDPEB_W@Z ; DbgRegisterObjectCreation
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 47
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CBaseObject@@QEAA@PEBD@Z ENDP			; CBaseObject::CBaseObject
_TEXT	ENDS
PUBLIC	??1CBaseObject@@QEAA@XZ				; CBaseObject::~CBaseObject
EXTRN	?DbgRegisterObjectDestruction@@YAHK@Z:PROC	; DbgRegisterObjectDestruction
EXTRN	__imp_FreeLibrary:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CBaseObject@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+106
	DD	imagerel $unwind$??1CBaseObject@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CBaseObject@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CBaseObject@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CBaseObject@@QEAA@XZ PROC				; CBaseObject::~CBaseObject, COMDAT
; Line 55
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 57
	lea	rax, OFFSET FLAT:?m_cObjects@CBaseObject@@0JA ; CBaseObject::m_cObjects
	mov	ecx, -1
	lock xadd DWORD PTR [rax], ecx
	dec	ecx
	mov	eax, ecx
	test	eax, eax
	jne	SHORT $LN2@CBaseObjec
; Line 58
	cmp	QWORD PTR ?hlibOLEAut32@@3PEAUHINSTANCE__@@EA, 0 ; hlibOLEAut32
	je	SHORT $LN1@CBaseObjec
; Line 59
	mov	rcx, QWORD PTR ?hlibOLEAut32@@3PEAUHINSTANCE__@@EA ; hlibOLEAut32
	call	QWORD PTR __imp_FreeLibrary
; Line 61
	mov	QWORD PTR ?hlibOLEAut32@@3PEAUHINSTANCE__@@EA, 0 ; hlibOLEAut32
$LN1@CBaseObjec:
$LN2@CBaseObjec:
; Line 67
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rax]
	call	?DbgRegisterObjectDestruction@@YAHK@Z	; DbgRegisterObjectDestruction
; Line 69
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CBaseObject@@QEAA@XZ ENDP				; CBaseObject::~CBaseObject
_TEXT	ENDS
PUBLIC	?LoadOLEAut32@@YAPEAUHINSTANCE__@@XZ		; LoadOLEAut32
EXTRN	__imp_LoadLibraryW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LoadOLEAut32@@YAPEAUHINSTANCE__@@XZ DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$?LoadOLEAut32@@YAPEAUHINSTANCE__@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LoadOLEAut32@@YAPEAUHINSTANCE__@@XZ DD 021501H
	DD	070023206H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?LoadOLEAut32@@YAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?LoadOLEAut32@@YAPEAUHINSTANCE__@@XZ PROC		; LoadOLEAut32, COMDAT
; Line 74
$LN4:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 75
	cmp	QWORD PTR ?hlibOLEAut32@@3PEAUHINSTANCE__@@EA, 0 ; hlibOLEAut32
	jne	SHORT $LN1@LoadOLEAut
; Line 77
	lea	rcx, OFFSET FLAT:szOle32Aut
	call	QWORD PTR __imp_LoadLibraryW
	mov	QWORD PTR ?hlibOLEAut32@@3PEAUHINSTANCE__@@EA, rax ; hlibOLEAut32
$LN1@LoadOLEAut:
; Line 80
	mov	rax, QWORD PTR ?hlibOLEAut32@@3PEAUHINSTANCE__@@EA ; hlibOLEAut32
; Line 81
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?LoadOLEAut32@@YAPEAUHINSTANCE__@@XZ ENDP		; LoadOLEAut32
_TEXT	ENDS
PUBLIC	??0INonDelegatingUnknown@@QEAA@XZ		; INonDelegatingUnknown::INonDelegatingUnknown
PUBLIC	??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z		; CUnknown::CUnknown
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z DD imagerel $LN6
	DD	imagerel $LN6+139
	DD	imagerel $unwind$??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z
_TEXT	SEGMENT
tv87 = 32
this$ = 64
pName$ = 72
pUnk$ = 80
??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z PROC		; CUnknown::CUnknown, COMDAT
; Line 104
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0INonDelegatingUnknown@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdx, QWORD PTR pName$[rsp]
	mov	rcx, rax
	call	??0CBaseObject@@QEAA@PEB_W@Z		; CBaseObject::CBaseObject
	cmp	QWORD PTR pUnk$[rsp], 0
	je	SHORT $LN3@CUnknown
	mov	rax, QWORD PTR pUnk$[rsp]
	mov	QWORD PTR tv87[rsp], rax
	jmp	SHORT $LN4@CUnknown
$LN3@CUnknown:
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR tv87[rsp], rax
$LN4@CUnknown:
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR tv87[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+24], 0
; Line 106
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CUnknown@@QEAA@PEB_WPEAUIUnknown@@@Z ENDP		; CUnknown::CUnknown
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0INonDelegatingUnknown@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0INonDelegatingUnknown@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0INonDelegatingUnknown@@QEAA@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0INonDelegatingUnknown@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0INonDelegatingUnknown@@QEAA@XZ PROC			; INonDelegatingUnknown::INonDelegatingUnknown, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0INonDelegatingUnknown@@QEAA@XZ ENDP			; INonDelegatingUnknown::INonDelegatingUnknown
_TEXT	ENDS
PUBLIC	??0CUnknown@@QEAA@PEA_WPEAUIUnknown@@PEAJ@Z	; CUnknown::CUnknown
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CUnknown@@QEAA@PEA_WPEAUIUnknown@@PEAJ@Z DD imagerel $LN6
	DD	imagerel $LN6+144
	DD	imagerel $unwind$??0CUnknown@@QEAA@PEA_WPEAUIUnknown@@PEAJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CUnknown@@QEAA@PEA_WPEAUIUnknown@@PEAJ@Z DD 022d01H
	DD	070155219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CUnknown@@QEAA@PEA_WPEAUIUnknown@@PEAJ@Z
_TEXT	SEGMENT
tv87 = 32
this$ = 64
pName$ = 72
pUnk$ = 80
phr$ = 88
??0CUnknown@@QEAA@PEA_WPEAUIUnknown@@PEAJ@Z PROC	; CUnknown::CUnknown, COMDAT
; Line 114
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0INonDelegatingUnknown@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdx, QWORD PTR pName$[rsp]
	mov	rcx, rax
	call	??0CBaseObject@@QEAA@PEB_W@Z		; CBaseObject::CBaseObject
	cmp	QWORD PTR pUnk$[rsp], 0
	je	SHORT $LN3@CUnknown@2
	mov	rax, QWORD PTR pUnk$[rsp]
	mov	QWORD PTR tv87[rsp], rax
	jmp	SHORT $LN4@CUnknown@2
$LN3@CUnknown@2:
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR tv87[rsp], rax
$LN4@CUnknown@2:
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR tv87[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+24], 0
; Line 115
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CUnknown@@QEAA@PEA_WPEAUIUnknown@@PEAJ@Z ENDP	; CUnknown::CUnknown
_TEXT	ENDS
PUBLIC	??0CUnknown@@QEAA@PEBDPEAUIUnknown@@@Z		; CUnknown::CUnknown
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CUnknown@@QEAA@PEBDPEAUIUnknown@@@Z DD imagerel $LN6
	DD	imagerel $LN6+139
	DD	imagerel $unwind$??0CUnknown@@QEAA@PEBDPEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CUnknown@@QEAA@PEBDPEAUIUnknown@@@Z DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CUnknown@@QEAA@PEBDPEAUIUnknown@@@Z
_TEXT	SEGMENT
tv87 = 32
this$ = 64
pName$ = 72
pUnk$ = 80
??0CUnknown@@QEAA@PEBDPEAUIUnknown@@@Z PROC		; CUnknown::CUnknown, COMDAT
; Line 121
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0INonDelegatingUnknown@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdx, QWORD PTR pName$[rsp]
	mov	rcx, rax
	call	??0CBaseObject@@QEAA@PEBD@Z		; CBaseObject::CBaseObject
	cmp	QWORD PTR pUnk$[rsp], 0
	je	SHORT $LN3@CUnknown@3
	mov	rax, QWORD PTR pUnk$[rsp]
	mov	QWORD PTR tv87[rsp], rax
	jmp	SHORT $LN4@CUnknown@3
$LN3@CUnknown@3:
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR tv87[rsp], rax
$LN4@CUnknown@3:
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR tv87[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CUnknown@@QEAA@PEBDPEAUIUnknown@@@Z ENDP		; CUnknown::CUnknown
_TEXT	ENDS
PUBLIC	??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z	; CUnknown::CUnknown
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z DD imagerel $LN6
	DD	imagerel $LN6+144
	DD	imagerel $unwind$??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z DD 022d01H
	DD	070155219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z
_TEXT	SEGMENT
tv87 = 32
this$ = 64
pName$ = 72
pUnk$ = 80
phr$ = 88
??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z PROC		; CUnknown::CUnknown, COMDAT
; Line 126
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0INonDelegatingUnknown@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdx, QWORD PTR pName$[rsp]
	mov	rcx, rax
	call	??0CBaseObject@@QEAA@PEBD@Z		; CBaseObject::CBaseObject
	cmp	QWORD PTR pUnk$[rsp], 0
	je	SHORT $LN3@CUnknown@4
	mov	rax, QWORD PTR pUnk$[rsp]
	mov	QWORD PTR tv87[rsp], rax
	jmp	SHORT $LN4@CUnknown@4
$LN3@CUnknown@4:
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR tv87[rsp], rax
$LN4@CUnknown@4:
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR tv87[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z ENDP		; CUnknown::CUnknown
_TEXT	ENDS
PUBLIC	GetInterface
PUBLIC	==
PUBLIC	?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CUnknown::NonDelegatingQueryInterface
EXTRN	IID_IUnknown:BYTE
EXTRN	__imp_IsBadWritePtr:PROC
EXTRN	?DbgBreakPoint@@YAXPEB_W0H@Z:PROC		; DbgBreakPoint
EXTRN	__imp_IsBadReadPtr:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN8
	DD	imagerel $LN8+215
	DD	imagerel $unwind$?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CUnknown::NonDelegatingQueryInterface, COMDAT
; Line 136
$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 137
	cmp	QWORD PTR ppv$[rsp], 0
	jne	SHORT $LN5@NonDelegat
	mov	eax, -2147467261			; ffffffff80004003H
	jmp	$LN6@NonDelegat
$LN5@NonDelegat:
; Line 138
	mov	edx, 8
	mov	rcx, QWORD PTR ppv$[rsp]
	call	QWORD PTR __imp_IsBadReadPtr
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat
	mov	r8d, 138				; 0000008aH
	lea	rdx, OFFSET FLAT:$SG82287
	lea	rcx, OFFSET FLAT:$SG82288
	call	?DbgBreakPoint@@YAXPEB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat:
	mov	edx, 8
	mov	rcx, QWORD PTR ppv$[rsp]
	call	QWORD PTR __imp_IsBadWritePtr
	cmp	eax, 1
	jne	SHORT $LN3@NonDelegat
	mov	r8d, 138				; 0000008aH
	lea	rdx, OFFSET FLAT:$SG82292
	lea	rcx, OFFSET FLAT:$SG82293
	call	?DbgBreakPoint@@YAXPEB_W0H@Z		; DbgBreakPoint
$LN3@NonDelegat:
; Line 142
	lea	rdx, OFFSET FLAT:IID_IUnknown
	mov	rcx, QWORD PTR riid$[rsp]
	call	==
	test	eax, eax
	je	SHORT $LN2@NonDelegat
; Line 143
	mov	rdx, QWORD PTR ppv$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	GetInterface
; Line 144
	xor	eax, eax
	jmp	SHORT $LN6@NonDelegat
; Line 145
	jmp	SHORT $LN1@NonDelegat
$LN2@NonDelegat:
; Line 146
	mov	rax, QWORD PTR ppv$[rsp]
	mov	QWORD PTR [rax], 0
; Line 147
	mov	eax, -2147467262			; ffffffff80004002H
$LN1@NonDelegat:
$LN6@NonDelegat:
; Line 149
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CUnknown::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	IsEqualGUID
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
pdata	SEGMENT
$pdata$== DD	imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$==
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$== DD	022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ==
_TEXT	SEGMENT
guidOne$ = 48
guidOther$ = 56
==	PROC						; COMDAT
; Line 193
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 194
	mov	rdx, QWORD PTR guidOther$[rsp]
	mov	rcx, QWORD PTR guidOne$[rsp]
	call	IsEqualGUID
; Line 195
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
==	ENDP
_TEXT	ENDS
EXTRN	memcmp:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$IsEqualGUID DD imagerel $LN5
	DD	imagerel $LN5+88
	DD	imagerel $unwind$IsEqualGUID
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsEqualGUID DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT IsEqualGUID
_TEXT	SEGMENT
tv69 = 32
rguid1$ = 64
rguid2$ = 72
IsEqualGUID PROC					; COMDAT
; Line 160
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 161
	mov	r8d, 16
	mov	rdx, QWORD PTR rguid2$[rsp]
	mov	rcx, QWORD PTR rguid1$[rsp]
	call	memcmp
	test	eax, eax
	jne	SHORT $LN3@IsEqualGUI
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
	mov	DWORD PTR tv69[rsp], 0
$LN4@IsEqualGUI:
	mov	eax, DWORD PTR tv69[rsp]
; Line 162
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	?NonDelegatingAddRef@CUnknown@@UEAAKXZ		; CUnknown::NonDelegatingAddRef
EXTRN	?DbgLogInfo@@YAXKKPEB_WZZ:PROC			; DbgLogInfo
EXTRN	?DbgAssert@@YAXPEB_W0H@Z:PROC			; DbgAssert
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\combase.cpp
pdata	SEGMENT
$pdata$?NonDelegatingAddRef@CUnknown@@UEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+172
	DD	imagerel $unwind$?NonDelegatingAddRef@CUnknown@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingAddRef@CUnknown@@UEAAKXZ DD 021e01H
	DD	07006720aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NonDelegatingAddRef@CUnknown@@UEAAKXZ
_TEXT	SEGMENT
lRef$ = 48
$T82961 = 52
$T82962 = 56
this$ = 80
?NonDelegatingAddRef@CUnknown@@UEAAKXZ PROC		; CUnknown::NonDelegatingAddRef, COMDAT
; Line 164
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 165
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	ecx, 1
	lock xadd DWORD PTR [rax], ecx
	inc	ecx
	mov	eax, ecx
	mov	DWORD PTR lRef$[rsp], eax
; Line 166
	cmp	DWORD PTR lRef$[rsp], 0
	jg	SHORT $LN1@NonDelegat@2
	mov	r8d, 166				; 000000a6H
	lea	rdx, OFFSET FLAT:$SG82307
	lea	rcx, OFFSET FLAT:$SG82308
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@NonDelegat@2:
; Line 168
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+24]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+8]
	lea	r8, OFFSET FLAT:$SG82309
	mov	edx, 3
	mov	ecx, 4
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 169
	mov	DWORD PTR $T82961[rsp], 1
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+24]
	mov	DWORD PTR $T82962[rsp], eax
	lea	rdx, QWORD PTR $T82961[rsp]
	lea	rcx, QWORD PTR $T82962[rsp]
	call	??$ourmax@K@@YAKAEBK0@Z			; ourmax<unsigned long>
; Line 170
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?NonDelegatingAddRef@CUnknown@@UEAAKXZ ENDP		; CUnknown::NonDelegatingAddRef
_TEXT	ENDS
PUBLIC	?NonDelegatingRelease@CUnknown@@UEAAKXZ		; CUnknown::NonDelegatingRelease
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NonDelegatingRelease@CUnknown@@UEAAKXZ DD imagerel $LN8
	DD	imagerel $LN8+268
	DD	imagerel $unwind$?NonDelegatingRelease@CUnknown@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingRelease@CUnknown@@UEAAKXZ DD 021e01H
	DD	07006b20aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NonDelegatingRelease@CUnknown@@UEAAKXZ
_TEXT	SEGMENT
lRef$ = 48
$T82970 = 56
$T82971 = 64
$T82974 = 72
$T82975 = 76
tv95 = 80
this$ = 112
?NonDelegatingRelease@CUnknown@@UEAAKXZ PROC		; CUnknown::NonDelegatingRelease, COMDAT
; Line 176
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
; Line 179
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	ecx, -1
	lock xadd DWORD PTR [rax], ecx
	dec	ecx
	mov	eax, ecx
	mov	DWORD PTR lRef$[rsp], eax
; Line 180
	cmp	DWORD PTR lRef$[rsp], 0
	jge	SHORT $LN3@NonDelegat@3
	mov	r8d, 180				; 000000b4H
	lea	rdx, OFFSET FLAT:$SG82322
	lea	rcx, OFFSET FLAT:$SG82323
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@NonDelegat@3:
; Line 183
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+24]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+8]
	lea	r8, OFFSET FLAT:$SG82324
	mov	edx, 3
	mov	ecx, 4
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 184
	cmp	DWORD PTR lRef$[rsp], 0
	jne	SHORT $LN2@NonDelegat@3
; Line 198
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+24]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+24], eax
; Line 200
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T82971[rsp], rax
	mov	rax, QWORD PTR $T82971[rsp]
	mov	QWORD PTR $T82970[rsp], rax
	cmp	QWORD PTR $T82970[rsp], 0
	je	SHORT $LN6@NonDelegat@3
	mov	rax, QWORD PTR $T82970[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T82970[rsp]
	call	QWORD PTR [rax+24]
	mov	QWORD PTR tv95[rsp], rax
	jmp	SHORT $LN7@NonDelegat@3
$LN6@NonDelegat@3:
	mov	QWORD PTR tv95[rsp], 0
$LN7@NonDelegat@3:
; Line 201
	xor	eax, eax
	jmp	SHORT $LN4@NonDelegat@3
; Line 202
	jmp	SHORT $LN1@NonDelegat@3
$LN2@NonDelegat@3:
; Line 203
	mov	DWORD PTR $T82974[rsp], 1
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+24]
	mov	DWORD PTR $T82975[rsp], eax
	lea	rdx, QWORD PTR $T82974[rsp]
	lea	rcx, QWORD PTR $T82975[rsp]
	call	??$ourmax@K@@YAKAEBK0@Z			; ourmax<unsigned long>
$LN1@NonDelegat@3:
$LN4@NonDelegat@3:
; Line 205
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?NonDelegatingRelease@CUnknown@@UEAAKXZ ENDP		; CUnknown::NonDelegatingRelease
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$GetInterface DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$GetInterface
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$GetInterface DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT GetInterface
_TEXT	SEGMENT
pUnk$ = 48
ppv$ = 56
GetInterface PROC					; COMDAT
; Line 212
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 213
	cmp	QWORD PTR ppv$[rsp], 0
	jne	SHORT $LN1@GetInterfa
	mov	eax, -2147467261			; ffffffff80004003H
	jmp	SHORT $LN2@GetInterfa
$LN1@GetInterfa:
; Line 214
	mov	rax, QWORD PTR ppv$[rsp]
	mov	rcx, QWORD PTR pUnk$[rsp]
	mov	QWORD PTR [rax], rcx
; Line 215
	mov	rax, QWORD PTR pUnk$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pUnk$[rsp]
	call	QWORD PTR [rax+8]
; Line 216
	xor	eax, eax
$LN2@GetInterfa:
; Line 217
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
GetInterface ENDP
_TEXT	ENDS
PUBLIC	?IsEqualObject@@YAHPEAUIUnknown@@0@Z		; IsEqualObject
EXTRN	_RTC_CheckStackVars:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsEqualObject@@YAHPEAUIUnknown@@0@Z DD imagerel $LN12
	DD	imagerel $LN12+408
	DD	imagerel $unwind$?IsEqualObject@@YAHPEAUIUnknown@@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsEqualObject@@YAHPEAUIUnknown@@0@Z DD 022301H
	DD	0700bb20fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?IsEqualObject@@YAHPEAUIUnknown@@0@Z$rtcName$0 DB 070H	; IsEqualObject
	DB	055H
	DB	06eH
	DB	06bH
	DB	06eH
	DB	06fH
	DB	077H
	DB	06eH
	DB	031H
	DB	00H
	ORG $+6
?IsEqualObject@@YAHPEAUIUnknown@@0@Z$rtcName$1 DB 070H	; IsEqualObject
	DB	055H
	DB	06eH
	DB	06bH
	DB	06eH
	DB	06fH
	DB	077H
	DB	06eH
	DB	032H
	DB	00H
	ORG $+6
?IsEqualObject@@YAHPEAUIUnknown@@0@Z$rtcVarDesc DD 048H	; IsEqualObject
	DD	08H
	DQ	FLAT:?IsEqualObject@@YAHPEAUIUnknown@@0@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?IsEqualObject@@YAHPEAUIUnknown@@0@Z$rtcName$0
	ORG $+96
?IsEqualObject@@YAHPEAUIUnknown@@0@Z$rtcFrameData DD 02H ; IsEqualObject
	DD	00H
	DQ	FLAT:?IsEqualObject@@YAHPEAUIUnknown@@0@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?IsEqualObject@@YAHPEAUIUnknown@@0@Z
_TEXT	SEGMENT
pUnknown1$ = 40
pUnknown2$ = 72
hr$ = 84
tv140 = 88
pFirst$ = 112
pSecond$ = 120
?IsEqualObject@@YAHPEAUIUnknown@@0@Z PROC		; IsEqualObject, COMDAT
; Line 223
$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
; Line 227
	mov	rax, QWORD PTR pSecond$[rsp]
	cmp	QWORD PTR pFirst$[rsp], rax
	jne	SHORT $LN7@IsEqualObj
; Line 228
	mov	eax, 1
	jmp	$LN8@IsEqualObj
$LN7@IsEqualObj:
; Line 237
	cmp	QWORD PTR pFirst$[rsp], 0
	jne	SHORT $LN6@IsEqualObj
	mov	r8d, 237				; 000000edH
	lea	rdx, OFFSET FLAT:$SG82346
	lea	rcx, OFFSET FLAT:$SG82347
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@IsEqualObj:
; Line 238
	cmp	QWORD PTR pSecond$[rsp], 0
	jne	SHORT $LN5@IsEqualObj
	mov	r8d, 238				; 000000eeH
	lea	rdx, OFFSET FLAT:$SG82349
	lea	rcx, OFFSET FLAT:$SG82350
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@IsEqualObj:
; Line 242
	mov	rax, QWORD PTR pFirst$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR pUnknown1$[rsp]
	lea	rdx, OFFSET FLAT:IID_IUnknown
	mov	rcx, QWORD PTR pFirst$[rsp]
	call	QWORD PTR [rax]
	mov	DWORD PTR hr$[rsp], eax
; Line 243
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN4@IsEqualObj
	mov	r8d, 243				; 000000f3H
	lea	rdx, OFFSET FLAT:$SG82354
	lea	rcx, OFFSET FLAT:$SG82355
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@IsEqualObj:
; Line 244
	cmp	QWORD PTR pUnknown1$[rsp], 0
	jne	SHORT $LN3@IsEqualObj
	mov	r8d, 244				; 000000f4H
	lea	rdx, OFFSET FLAT:$SG82357
	lea	rcx, OFFSET FLAT:$SG82358
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@IsEqualObj:
; Line 246
	mov	rax, QWORD PTR pSecond$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR pUnknown2$[rsp]
	lea	rdx, OFFSET FLAT:IID_IUnknown
	mov	rcx, QWORD PTR pSecond$[rsp]
	call	QWORD PTR [rax]
	mov	DWORD PTR hr$[rsp], eax
; Line 247
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN2@IsEqualObj
	mov	r8d, 247				; 000000f7H
	lea	rdx, OFFSET FLAT:$SG82362
	lea	rcx, OFFSET FLAT:$SG82363
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@IsEqualObj:
; Line 248
	cmp	QWORD PTR pUnknown2$[rsp], 0
	jne	SHORT $LN1@IsEqualObj
	mov	r8d, 248				; 000000f8H
	lea	rdx, OFFSET FLAT:$SG82365
	lea	rcx, OFFSET FLAT:$SG82366
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@IsEqualObj:
; Line 252
	mov	rax, QWORD PTR pUnknown1$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pUnknown1$[rsp]
	call	QWORD PTR [rax+16]
; Line 253
	mov	rax, QWORD PTR pUnknown2$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pUnknown2$[rsp]
	call	QWORD PTR [rax+16]
; Line 254
	mov	rax, QWORD PTR pUnknown2$[rsp]
	cmp	QWORD PTR pUnknown1$[rsp], rax
	jne	SHORT $LN10@IsEqualObj
	mov	DWORD PTR tv140[rsp], 1
	jmp	SHORT $LN11@IsEqualObj
$LN10@IsEqualObj:
	mov	DWORD PTR tv140[rsp], 0
$LN11@IsEqualObj:
	mov	eax, DWORD PTR tv140[rsp]
$LN8@IsEqualObj:
; Line 255
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?IsEqualObject@@YAHPEAUIUnknown@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?IsEqualObject@@YAHPEAUIUnknown@@0@Z ENDP		; IsEqualObject
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ourmax@K@@YAKAEBK0@Z DD imagerel ??$ourmax@K@@YAKAEBK0@Z
	DD	imagerel ??$ourmax@K@@YAKAEBK0@Z+82
	DD	imagerel $unwind$??$ourmax@K@@YAKAEBK0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ourmax@K@@YAKAEBK0@Z DD 022301H
	DD	0700b120fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??$ourmax@K@@YAKAEBK0@Z
_TEXT	SEGMENT
tv65 = 0
a$ = 32
b$ = 40
??$ourmax@K@@YAKAEBK0@Z PROC				; ourmax<unsigned long>, COMDAT
; Line 157
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+32]
; Line 158
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jbe	SHORT $LN3@ourmax
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv65[rsp], eax
	jmp	SHORT $LN4@ourmax
$LN3@ourmax:
	mov	rax, QWORD PTR b$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv65[rsp], eax
$LN4@ourmax:
	mov	eax, DWORD PTR tv65[rsp]
; Line 159
	add	rsp, 16
	pop	rdi
	ret	0
??$ourmax@K@@YAKAEBK0@Z ENDP				; ourmax<unsigned long>
_TEXT	ENDS
END

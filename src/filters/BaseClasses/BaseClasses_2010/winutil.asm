; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG82625 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82626 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82628 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82629 DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L'
	DB	00H, 00H, 00H
	ORG $+4
$SG82632 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'H', 00H, 'O', 00H
	DB	'W', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'G', 00H, 'E', 00H, 00H
	DB	00H
	ORG $+6
$SG82634 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'H', 00H, 'O', 00H
	DB	'W', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'G', 00H, 'E', 00H, 'T'
	DB	00H, 'O', 00H, 'P', 00H, 00H, 00H
$SG82636 DB	'W', 00H, 'M', 00H, '_', 00H, 'R', 00H, 'E', 00H, 'A', 00H
	DB	'L', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, 'P', 00H, 'A', 00H, 'L'
	DB	00H, 'E', 00H, 'T', 00H, 'T', 00H, 'E', 00H, 00H, 00H
	ORG $+4
$SG82638 DB	'A', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'S', 00H
	DB	'T', 00H, 'R', 00H, 'O', 00H, 'Y', 00H, 00H, 00H
	ORG $+2
$SG82644 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82645 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82647 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82648 DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L'
	DB	00H, 00H, 00H
	ORG $+4
$SG82662 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82663 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'D', 00H, 'C', 00H, '(', 00H, 'm', 00H, '_', 00H, 'M', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H
	DB	')', 00H, 00H, 00H
	ORG $+6
$SG82666 DB	'I', 00H, 'n', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'v', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG82668 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82669 DB	'G', 00H, 'e', 00H, 't', 00H, 'P', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, '(', 00H, 'h', 00H, 'w', 00H, 'n'
	DB	00H, 'd', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG82670 DB	'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 's', 00H
	DB	' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG82671 DB	'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'y', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, '0', 00H, 'x'
	DB	00H, '%', 00H, '8', 00H, '.', 00H, '8', 00H, 'X', 00H, 00H, 00H
	ORG $+2
$SG82673 DB	'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'y', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, ' ', 00H, '%', 00H, '8', 00H, '.', 00H, '8', 00H, 'X', 00H
	DB	' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG82674 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82675 DB	'"', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82702 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82703 DB	'm', 00H, '_', 00H, 'b', 00H, 'A', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'T', 00H, 'R', 00H, 'U', 00H
	DB	'E', 00H, 00H, 00H
	ORG $+6
$SG82718 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82719 DB	'h', 00H, 'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG82727 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82728 DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, 00H, 00H
	ORG $+4
$SG82730 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82731 DB	'm', 00H, '_', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H, 00H, 00H
	ORG $+2
$SG82743 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82744 DB	'h', 00H, 'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG82759 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82760 DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, 00H, 00H
	ORG $+4
$SG82762 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82763 DB	'm', 00H, '_', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H, 00H, 00H
	ORG $+2
$SG82765 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82766 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'O', 00H, 'u', 00H, 't', 00H, '('
	DB	00H, '&', 00H, 'm', 00H, '_', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 'k'
	DB	00H, ')', 00H, 00H, 00H
$SG82768 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82769 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'O', 00H, 'u', 00H, 't', 00H, '('
	DB	00H, '&', 00H, 'm', 00H, '_', 00H, 'P', 00H, 'a', 00H, 'l', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'c'
	DB	00H, 'k', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG82771 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82805 DB	'S', 00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, '(', 00H, '(', 00H, 'H', 00H, 'A', 00H, 'N'
	DB	00H, 'D', 00H, 'L', 00H, 'E', 00H, ')', 00H, 'w', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG82772 DB	'R', 00H, 'e', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'e', 00H, '(', 00H, 'm', 00H, '_', 00H, 'h', 00H, 'd', 00H
	DB	'c', 00H, ')', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '('
	DB	00H, '0', 00H, 'x', 00H, 'F', 00H, 'F', 00H, 'F', 00H, 'F', 00H
	DB	'F', 00H, 'F', 00H, 'F', 00H, 'F', 00H, 'L', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG82774 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82775 DB	'R', 00H, 'e', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'e', 00H, '(', 00H, 'm', 00H, '_', 00H, 'M', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H, ')'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '(', 00H, '0', 00H
	DB	'x', 00H, 'F', 00H, 'F', 00H, 'F', 00H, 'F', 00H, 'F', 00H, 'F'
	DB	00H, 'F', 00H, 'F', 00H, 'L', 00H, ')', 00H, 00H, 00H
$SG82798 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82799 DB	'0', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o'
	DB	00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG82804 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82819 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82820 DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L'
	DB	00H, 00H, 00H
	ORG $+4
$SG82822 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82823 DB	'm', 00H, '_', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82825 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82826 DB	'G', 00H, 'd', 00H, 'i', 00H, 'F', 00H, 'l', 00H, 'u', 00H
	DB	's', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82829 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82830 DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H
	DB	'e', 00H, 'D', 00H, 'C', 00H, '(', 00H, 'm', 00H, '_', 00H, 'h'
	DB	00H, 'w', 00H, 'n', 00H, 'd', 00H, ',', 00H, 'm', 00H, '_', 00H
	DB	'h', 00H, 'd', 00H, 'c', 00H, ')', 00H, 00H, 00H
$SG82833 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82834 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'D', 00H, 'C', 00H, '(', 00H, 'm', 00H, '_', 00H, 'M', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H
	DB	')', 00H, 00H, 00H
	ORG $+6
$SG82840 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82841 DB	'I', 00H, 's', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'o', 00H, 'w', 00H, '(', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82844 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82845 DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'D', 00H, 'C'
	DB	00H, '(', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H
$SG82847 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82848 DB	'm', 00H, '_', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, 'D', 00H, 'C', 00H, '(', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG82850 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82851 DB	'S', 00H, 'e', 00H, 't', 00H, 'S', 00H, 't', 00H, 'r', 00H
	DB	'e', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'B', 00H, 'l', 00H, 't'
	DB	00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '(', 00H, 'm', 00H
	DB	'_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, ',', 00H, '3', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG82853 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82871 DB	'A', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H
	DB	'M', 00H, 'o', 00H, 'v', 00H, 'i', 00H, 'e', 00H, ' ', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG82854 DB	'S', 00H, 'e', 00H, 't', 00H, 'S', 00H, 't', 00H, 'r', 00H
	DB	'e', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'B', 00H, 'l', 00H, 't'
	DB	00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '(', 00H, 'm', 00H
	DB	'_', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, 'D', 00H, 'C', 00H, ',', 00H, '3', 00H, ')', 00H, 00H, 00H
$SG82880 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82881 DB	'G', 00H, 'e', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'L', 00H, 'o', 00H, 'n', 00H, 'g'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, '(', 00H, 'h', 00H, 'w', 00H
	DB	'n', 00H, 'd', 00H, ',', 00H, ' ', 00H, '0', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '(', 00H, 'L', 00H, 'O', 00H
	DB	'N', 00H, 'G', 00H, '_', 00H, 'P', 00H, 'T', 00H, 'R', 00H, ')'
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, 00H, 00H
$SG82947 DB	'R', 00H, 'e', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'w', 00H, 'h', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H
	DB	's', 00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e', 00H, '!', 00H, 00H
	DB	00H
	ORG $+4
$SG82882 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, ' ', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H, ')', 00H, ' '
	DB	00H, 'H', 00H, 'W', 00H, 'N', 00H, 'D', 00H, '(', 00H, '%', 00H
	DB	'8', 00H, '.', 00H, '8', 00H, 'X', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG82892 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82893 DB	'I', 00H, 's', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'o', 00H, 'w', 00H, '(', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82908 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82909 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'h', 00H, 'w', 00H, 'n'
	DB	00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG82921 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82922 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'h', 00H, 'w', 00H, 'n'
	DB	00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG82942 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82943 DB	'!', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'R', 00H, 'e', 00H
	DB	'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 00H, 00H
	ORG $+4
$SG82960 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82961 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	00H, 00H
	ORG $+2
$SG82966 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82967 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	00H, 00H
	ORG $+2
$SG82972 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82973 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	00H, 00H
	ORG $+2
$SG82978 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82979 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	00H, 00H
	ORG $+2
$SG82984 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82985 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	00H, 00H
	ORG $+2
$SG82987 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82988 DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, 00H, 00H
	ORG $+4
$SG82993 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82994 DB	'm', 00H, '_', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H
	DB	00H, 00H
	ORG $+2
$SG82996 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82997 DB	'm', 00H, '_', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H, 00H, 00H
	ORG $+2
$SG83002 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83003 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 'k'
	DB	00H, ')', 00H, 00H, 00H
$SG83023 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83024 DB	'p', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG83033 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83034 DB	'p', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG83041 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83043 DB	'%', 00H, '0', 00H, '8', 00H, 'd', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, '%', 00H, '0', 00H, '8', 00H, 'd', 00H, 00H, 00H
$SG83042 DB	'G', 00H, 'e', 00H, 't', 00H, 'C', 00H, 'l', 00H, 'i', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '(', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H, ',', 00H
	DB	'&', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, ')', 00H, 00H, 00H
$SG83045 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83046 DB	'l', 00H, 's', 00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, '(', 00H, 's', 00H, 'z', 00H, 'T', 00H, 'i', 00H, 'm'
	DB	00H, 'e', 00H, 's', 00H, ')', 00H, ' ', 00H, '<', 00H, ' ', 00H
	DB	'T', 00H, 'I', 00H, 'M', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'N'
	DB	00H, 'G', 00H, 'T', 00H, 'H', 00H, 00H, 00H
	ORG $+4
$SG83056 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83057 DB	'p', 00H, 'b', 00H, 'm', 00H, 'i', 00H, '-', 00H, '>', 00H
	DB	'b', 00H, 'i', 00H, 'C', 00H, 'l', 00H, 'r', 00H, 'U', 00H, 's'
	DB	00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG83063 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83064 DB	'u', 00H, 'i', 00H, 'R', 00H, 'e', 00H, 't', 00H, 'u', 00H
	DB	'r', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'p'
	DB	00H, 'b', 00H, 'm', 00H, 'i', 00H, '-', 00H, '>', 00H, 'b', 00H
	DB	'i', 00H, 'C', 00H, 'l', 00H, 'r', 00H, 'U', 00H, 's', 00H, 'e'
	DB	00H, 'd', 00H, 00H, 00H
$SG83071 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83072 DB	'p', 00H, 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
$SG83083 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83084 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG83093 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83094 DB	'p', 00H, 'b', 00H, 'm', 00H, 'i', 00H, '-', 00H, '>', 00H
	DB	'b', 00H, 'i', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H
	DB	' ', 00H, 'i', 00H, 'P', 00H, 'A', 00H, 'L', 00H, 'E', 00H, 'T'
	DB	00H, 'T', 00H, 'E', 00H, 00H, 00H
	ORG $+6
$SG83108 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83109 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG83133 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83134 DB	'm', 00H, '_', 00H, 'h', 00H, 'd', 00H, 'c', 00H, 00H, 00H
	ORG $+4
$SG83136 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83137 DB	'm', 00H, '_', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'D', 00H, 'C', 00H, 00H, 00H
	ORG $+2
$SG83140 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83141 DB	'G', 00H, 'd', 00H, 'i', 00H, 'F', 00H, 'l', 00H, 'u', 00H
	DB	's', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG83143 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83144 DB	'G', 00H, 'd', 00H, 'i', 00H, 'F', 00H, 'l', 00H, 'u', 00H
	DB	's', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG83153 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83154 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG83181 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83182 DB	'p', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, 00H, 00H
$SG83188 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83189 DB	'p', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, 00H, 00H
$SG83195 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83196 DB	'p', 00H, 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, 00H, 00H
$SG83202 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83203 DB	'p', 00H, 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, 00H, 00H
$SG83240 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83241 DB	'p', 00H, 'h', 00H, 'r', 00H, 00H, 00H
$SG83243 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83244 DB	'p', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG83253 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83254 DB	'm', 00H, '_', 00H, 'b', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'm', 00H, 'i', 00H, 't', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A', 00H, 'L', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H
	ORG $+4
$SG83259 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83263 DB	'G', 00H, 'd', 00H, 'i', 00H, 'F', 00H, 'l', 00H, 'u', 00H
	DB	's', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG83260 DB	'm', 00H, '_', 00H, 'l', 00H, 'A', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'l', 00H
	DB	'F', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '.', 00H, 'G', 00H, 'e'
	DB	00H, 't', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	'(', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG83262 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83271 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83314 DB	'm', 00H, '_', 00H, 'l', 00H, 'A', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG83272 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '('
	DB	00H, 'p', 00H, 'D', 00H, 'i', 00H, 'b', 00H, 'D', 00H, 'a', 00H
	DB	't', 00H, 'a', 00H, '-', 00H, '>', 00H, 'h', 00H, 'B', 00H, 'i'
	DB	00H, 't', 00H, 'm', 00H, 'a', 00H, 'p', 00H, ')', 00H, 00H, 00H
$SG83274 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83275 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'p'
	DB	00H, 'D', 00H, 'i', 00H, 'b', 00H, 'D', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, '-', 00H, '>', 00H, 'h', 00H, 'M', 00H, 'a', 00H, 'p'
	DB	00H, 'p', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ')', 00H, 00H, 00H
$SG83305 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83306 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG83313 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83323 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83324 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '('
	DB	00H, 'D', 00H, 'i', 00H, 'b', 00H, 'D', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, '.', 00H, 'h', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'm'
	DB	00H, 'a', 00H, 'p', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG83326 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83327 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'D'
	DB	00H, 'i', 00H, 'b', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	'.', 00H, 'h', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG83344 DB	'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	's', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG83369 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83370 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 'd', 00H, 'i'
	DB	00H, 'a', 00H, ' ', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'"', 00H, 00H, 00H
	ORG $+6
$SG83377 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83378 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'h'
	DB	00H, 'M', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG83405 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83406 DB	'p', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG83408 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83409 DB	'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG83421 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83422 DB	'p', 00H, 'D', 00H, 'i', 00H, 'b', 00H, 'D', 00H, 'a', 00H
	DB	't', 00H, 'a', 00H, 00H, 00H
	ORG $+6
$SG83427 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83428 DB	'm', 00H, '_', 00H, 'b', 00H, 'I', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'T', 00H, 'R'
	DB	00H, 'U', 00H, 'E', 00H, 00H, 00H
$SG83436 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83437 DB	'm', 00H, '_', 00H, 'p', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG83446 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83447 DB	'm', 00H, '_', 00H, 'h', 00H, 'P', 00H, 'a', 00H, 'l', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG83476 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83477 DB	'p', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 'I', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG83479 DB	'N', 00H, 'o', 00H, ' ', 00H, 'u', 00H, 'p', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'n', 00H, 'e', 00H, 'e'
	DB	00H, 'd', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG83482 DB	'N', 00H, 'e', 00H, 'w', 00H, ' ', 00H, 'h', 00H, 'a', 00H
	DB	's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, ' ', 00H, 'p', 00H, 'a'
	DB	00H, 'l', 00H, 'e', 00H, 't', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG83485 DB	'M', 00H, 'a', 00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'n', 00H, 'e', 00H, 'w', 00H, ' ', 00H, 'c', 00H, 'o'
	DB	00H, 'l', 00H, 'o', 00H, 'u', 00H, 'r', 00H, ' ', 00H, 'p', 00H
	DB	'a', 00H, 'l', 00H, 'e', 00H, 't', 00H, 't', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+4
$SG83487 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83488 DB	'm', 00H, '_', 00H, 'h', 00H, 'P', 00H, 'a', 00H, 'l', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'e', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG83500 DB	'N', 00H, 'o', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'i', 00H, 'n', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 'l', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG83505 DB	'N', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 'l'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG83510 DB	'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'x', 00H, 'i', 00H, 'm'
	DB	00H, 'u', 00H, 'm', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'l', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 's', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG83512 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83513 DB	'p', 00H, 'S', 00H, 'r', 00H, 'c', 00H, 'I', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'b', 00H, 'm', 00H, 'i'
	DB	00H, 'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'b', 00H, 'i', 00H, 'C', 00H, 'l', 00H, 'r', 00H, 'U'
	DB	00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '<', 00H, '=', 00H
	DB	' ', 00H, 'i', 00H, 'P', 00H, 'A', 00H, 'L', 00H, 'E', 00H, 'T'
	DB	00H, 'T', 00H, 'E', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'L', 00H
	DB	'O', 00H, 'R', 00H, 'S', 00H, 00H, 00H
	ORG $+6
$SG83515 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83525 DB	'R', 00H, 'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, 's', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG83516 DB	'p', 00H, 'S', 00H, 'r', 00H, 'c', 00H, 'I', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'b', 00H, 'm', 00H, 'i'
	DB	00H, 'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'b', 00H, 'i', 00H, 'C', 00H, 'l', 00H, 'r', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'a', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'P'
	DB	00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H, 't', 00H, 'e', 00H
	DB	'E', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+6
$SG83520 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83521 DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'S', 00H
	DB	'(', 00H, 'p', 00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, ')', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'i'
	DB	00H, 't', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'l', 00H, 'e', 00H, 't', 00H, 't', 00H, 'e', 00H, '(', 00H, 'p'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'I', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG83538 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83542 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '('
	DB	00H, 'm', 00H, '_', 00H, 'h', 00H, 'P', 00H, 'a', 00H, 'l', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'e', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG83539 DB	'm', 00H, '_', 00H, 'h', 00H, 'P', 00H, 'a', 00H, 'l', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'B', 00H, 'a', 00H
	DB	's', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H, 't', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG83541 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83549 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83573 DB	'h', 00H, 'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N'
	DB	00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+6
$SG83550 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 's', 00H, 'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't'
	DB	00H, 't', 00H, 'e', 00H, '(', 00H, 'p', 00H, 'V', 00H, 'i', 00H
	DB	'd', 00H, 'e', 00H, 'o', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o'
	DB	00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'T', 00H
	DB	'R', 00H, 'U', 00H, 'E', 00H, 00H, 00H
$SG83552 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83584 DB	'i', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 's', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'i'
	DB	00H, 'P', 00H, 'A', 00H, 'L', 00H, 'E', 00H, 'T', 00H, 'T', 00H
	DB	'E', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R'
	DB	00H, 'S', 00H, 00H, 00H
$SG83553 DB	'p', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H
	DB	'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'b'
	DB	00H, 'm', 00H, 'i', 00H, 'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'b', 00H, 'i', 00H, 'C', 00H, 'l'
	DB	00H, 'r', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, 'i', 00H, 'P', 00H, 'A', 00H, 'L'
	DB	00H, 'E', 00H, 'T', 00H, 'T', 00H, 'E', 00H, '_', 00H, 'C', 00H
	DB	'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG83572 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83583 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83592 DB	'DISPLAY', 00H
$SG83593 DB	'DISPLAY', 00H
$SG83635 DB	'DISPLAY', 00H
$SG83636 DB	'DISPLAY', 00H
$SG83640 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83641 DB	'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG83642 DB	'<NULL>', 00H
	ORG $+5
$SG83643 DB	'A', 00H, 'C', 00H, 'K', 00H, '!', 00H, ' ', 00H, 'C', 00H
	DB	'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H, 'g', 00H, 'e'
	DB	00H, 't', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'D', 00H, 'C', 00H
	DB	' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '%', 00H, 'h'
	DB	00H, 's', 00H, 00H, 00H
$SG83647 DB	'<NULL>', 00H
	ORG $+1
$SG83648 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'D', 00H, 'C', 00H, ' '
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
$SG83654 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83656 DB	'N', 00H, 'e', 00H, 'w', 00H, ' ', 00H, 'D', 00H, 'I', 00H
	DB	'S', 00H, 'P', 00H, 'L', 00H, 'A', 00H, 'Y', 00H, ' ', 00H, 'b'
	DB	00H, 'i', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'p', 00H
	DB	't', 00H, 'h', 00H, ' ', 00H, '=', 00H, '%', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+4
$SG83655 DB	'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H, 'H', 00H
	DB	'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'V', 00H, 'a'
	DB	00H, 'l', 00H, 'i', 00H, 'd', 00H, 'i', 00H, 't', 00H, 'y', 00H
	DB	'(', 00H, '&', 00H, 'm', 00H, '_', 00H, 'D', 00H, 'i', 00H, 's'
	DB	00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, ')', 00H, 00H, 00H
$SG83672 DB	'B', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H
	DB	'e', 00H, 'l', 00H, 'd', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H
	DB	'o', 00H, 'n', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'd', 00H, 00H, 00H
$SG83697 DB	'M', 00H, 'a', 00H, 's', 00H, 'k', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 'x', 00H, '8', 00H, '0', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG83677 DB	'B', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H
	DB	'e', 00H, 'l', 00H, 'd', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H
	DB	'o', 00H, 'n', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'g', 00H, 'u'
	DB	00H, 'o', 00H, 'u', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG83696 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83704 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't', 00H, 'm', 00H, 'a'
	DB	00H, 'p', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H
	DB	00H
	ORG $+4
$SG83707 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't'
	DB	00H, 00H, 00H
	ORG $+2
$SG83714 DB	'B', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H
	DB	'e', 00H, 'l', 00H, 'd', 00H, 's', 00H, ' ', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG83711 DB	'B', 00H, 'I', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'T', 00H
	DB	'F', 00H, 'I', 00H, 'E', 00H, 'L', 00H, 'D', 00H, 'S', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, '1', 00H, '6', 00H
	DB	'/', 00H, '3', 00H, '2', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 'p', 00H, 't', 00H, 'h', 00H
	DB	00H, 00H
	ORG $+6
$SG83716 DB	'N', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'p', 00H, 'l', 00H, 'a'
	DB	00H, 'n', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG83719 DB	'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H
	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 'n'
	DB	00H, 'c', 00H, 'o', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 's', 00H, 'e', 00H, 't'
	DB	00H, 00H, 00H
	ORG $+2
$SG83722 DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'f', 00H, ' ', 00H, 'B', 00H, 'I', 00H, 'T', 00H, 'M', 00H, 'A'
	DB	00H, 'P', 00H, 'I', 00H, 'N', 00H, 'F', 00H, 'O', 00H, 'H', 00H
	DB	'E', 00H, 'A', 00H, 'D', 00H, 'E', 00H, 'R', 00H, ' ', 00H, 'w'
	DB	00H, 'r', 00H, 'o', 00H, 'n', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG83728 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG83733 DB	'T', 00H, 'o', 00H, 'o', 00H, ' ', 00H, 'm', 00H, 'a', 00H
	DB	'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'l', 00H, 'o'
	DB	00H, 'u', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'p', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'e', 00H, 00H, 00H
$SG83730 DB	'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 't', 00H, 't', 00H
	DB	'i', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H, 'm', 00H, 'u', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, 'b', 00H, 'e', 00H, ' ', 00H, 'B'
	DB	00H, 'I', 00H, '_', 00H, 'R', 00H, 'G', 00H, 'B', 00H, 00H, 00H
$SG83735 DB	'T', 00H, 'o', 00H, 'o', 00H, ' ', 00H, 'm', 00H, 'a', 00H
	DB	'n', 00H, 'y', 00H, ' ', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'o'
	DB	00H, 'r', 00H, 't', 00H, 'a', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+2
$SG83750 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83751 DB	'p', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H
	DB	'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG83769 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83770 DB	'P', 00H, 'A', 00H, 'L', 00H, 'E', 00H, 'T', 00H, 'T', 00H
	DB	'I', 00H, 'S', 00H, 'E', 00H, 'D', 00H, '(', 00H, '&', 00H, 'm'
	DB	00H, '_', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'T', 00H, 'R', 00H, 'U', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG83771 DB	'(', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H
	DB	')', 00H, ' ', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 'C'
	DB	00H, 'C', 00H, 'E', 00H, 'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H
	DB	00H, 00H
	ORG $+6
$SG83773 DB	'(', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H
	DB	')', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm', 00H, 'a'
	DB	00H, 't', 00H, 'c', 00H, 'h', 00H, ' ', 00H, 'a', 00H, 'g', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG83775 DB	'(', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H
	DB	')', 00H, ' ', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 't', 00H, ' ', 00H, 'm', 00H, 'i', 00H, 's', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, 00H, 00H
$SG83778 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83782 DB	'P', 00H, 'A', 00H, 'L', 00H, 'E', 00H, 'T', 00H, 'T', 00H
	DB	'I', 00H, 'S', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'p', 00H, 'I'
	DB	00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, ')', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S'
	DB	00H, 'E', 00H, 00H, 00H
$SG83779 DB	'm', 00H, '_', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H
	DB	'l', 00H, 'a', 00H, 'y', 00H, '.', 00H, 'b', 00H, 'm', 00H, 'i'
	DB	00H, 'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'b', 00H, 'i', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'C'
	DB	00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H, 'u'
	DB	00H, 't', 00H, '-', 00H, '>', 00H, 'b', 00H, 'm', 00H, 'i', 00H
	DB	'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '.'
	DB	00H, 'b', 00H, 'i', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'C', 00H
	DB	'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG83781 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83784 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83785 DB	'P', 00H, 'A', 00H, 'L', 00H, 'E', 00H, 'T', 00H, 'T', 00H
	DB	'I', 00H, 'S', 00H, 'E', 00H, 'D', 00H, '(', 00H, '&', 00H, 'm'
	DB	00H, '_', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG83791 DB	'(', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H
	DB	')', 00H, ' ', 00H, 'B', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'f'
	DB	00H, 'i', 00H, 'e', 00H, 'l', 00H, 'd', 00H, ' ', 00H, 'm', 00H
	DB	'i', 00H, 's', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h'
	DB	00H, 00H, 00H
	ORG $+2
$SG83824 DB	'p', 00H, 'm', 00H, 't', 00H, 'I', 00H, 'n', 00H, '-', 00H
	DB	'>', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H
$SG83841 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o'
	DB	00H, ' ', 00H, 'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 't', 00H, 'y', 00H, 'p'
	DB	00H, 'e', 00H, 00H, 00H
$SG83793 DB	'(', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H
	DB	')', 00H, ' ', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 'C'
	DB	00H, 'C', 00H, 'E', 00H, 'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H
	DB	00H, 00H
	ORG $+6
$SG83804 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+10
$SG83805 DB	'p', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H
	DB	'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'b'
	DB	00H, 'm', 00H, 'i', 00H, 'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'b', 00H, 'i', 00H, 'C', 00H, 'o'
	DB	00H, 'm', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'B', 00H, 'I', 00H, '_', 00H, 'R', 00H, 'G', 00H, 'B', 00H
	DB	00H, 00H
	ORG $+4
$SG83820 DB	'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, 'G', 00H, 'U', 00H, 'I', 00H, 'D', 00H, ' ', 00H, 'n'
	DB	00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'V', 00H
	DB	'I', 00H, 'D', 00H, 'E', 00H, 'O', 00H, 'I', 00H, 'N', 00H, 'F'
	DB	00H, 'O', 00H, 'H', 00H, 'E', 00H, 'A', 00H, 'D', 00H, 'E', 00H
	DB	'R', 00H, 00H, 00H
	ORG $+4
$SG83823 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+10
$SG83831 DB	'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'a', 00H, 'n', 00H
	DB	' ', 00H, 'a', 00H, ' ', 00H, 'V', 00H, 'I', 00H, 'D', 00H, 'E'
	DB	00H, 'O', 00H, 'H', 00H, 'E', 00H, 'A', 00H, 'D', 00H, 'E', 00H
	DB	'R', 00H, 00H, 00H
	ORG $+4
$SG83837 DB	'M', 00H, 'a', 00H, 'j', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o'
	DB	00H, 't', 00H, ' ', 00H, 'M', 00H, 'E', 00H, 'D', 00H, 'I', 00H
	DB	'A', 00H, 'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, '_', 00H, 'V'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG83854 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+10
$SG83855 DB	'm', 00H, '_', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H
	DB	'l', 00H, 'a', 00H, 'y', 00H, '.', 00H, 'b', 00H, 'm', 00H, 'i'
	DB	00H, 'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'b', 00H, 'i', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'B', 00H, 'I'
	DB	00H, '_', 00H, 'R', 00H, 'G', 00H, 'B', 00H, 00H, 00H
$SG83872 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+10
$SG83873 DB	'p', 00H, 'm', 00H, 't', 00H, '-', 00H, '>', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'F', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_'
	DB	00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'I', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H
CONST	ENDS
;	COMDAT IID_IAMFilterGraphCallback
CONST	SEGMENT
IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??0CBaseWindow@@QEAA@H_N@Z			; CBaseWindow::CBaseWindow
EXTRN	__CxxFrameHandler3:PROC
EXTRN	??1CCritSec@@QEAA@XZ:PROC			; CCritSec::~CCritSec
EXTRN	??0CCritSec@@QEAA@XZ:PROC			; CCritSec::CCritSec
EXTRN	?g_hInst@@3PEAUHINSTANCE__@@EA:QWORD		; g_hInst
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$??0CBaseWindow@@QEAA@H_N@Z DD imagerel $LN5
	DD	imagerel $LN5+307
	DD	imagerel $unwind$??0CBaseWindow@@QEAA@H_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CBaseWindow@@QEAA@H_N@Z@4HA DD imagerel ?dtor$0@?0???0CBaseWindow@@QEAA@H_N@Z@4HA
	DD	imagerel ?dtor$0@?0???0CBaseWindow@@QEAA@H_N@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0CBaseWindow@@QEAA@H_N@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CBaseWindow@@QEAA@H_N@Z DD imagerel ??0CBaseWindow@@QEAA@H_N@Z
	DD	0ffffffffH
	DD	imagerel ??0CBaseWindow@@QEAA@H_N@Z+246
	DD	00H
	DD	imagerel ??0CBaseWindow@@QEAA@H_N@Z+296
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CBaseWindow@@QEAA@H_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CBaseWindow@@QEAA@H_N@Z DD 023011H
	DD	0700f5213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CBaseWindow@@QEAA@H_N@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CBaseWindow@@QEAA@H_N@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CBaseWindow@@QEAA@H_N@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CBaseWindow@@QEAA@H_N@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CBaseWindow@@QEAA@H_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CBaseWindow@@QEAA@H_N@Z@4HA
xdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CBaseWindow@@QEAA@H_N@Z
_TEXT	SEGMENT
$T84869 = 32
this$ = 64
bDoGetDC$ = 72
bDoPostToDestroy$ = 80
??0CBaseWindow@@QEAA@H_N@Z PROC				; CBaseWindow::CBaseWindow, COMDAT
; Line 37
$LN5:
	mov	BYTE PTR [rsp+24], r8b
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	QWORD PTR $T84869[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+48], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+56], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+60], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+64], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+68], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+72], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+80], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+88], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+96], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+97], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+98], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	rcx, rax
	call	??0CCritSec@@QEAA@XZ			; CCritSec::CCritSec
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR bDoPostToDestroy$[rsp]
	mov	BYTE PTR [rax+164], cl
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	??0CCritSec@@QEAA@XZ			; CCritSec::CCritSec
; Line 38
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR bDoGetDC$[rsp]
	mov	DWORD PTR [rax+160], ecx
; Line 39
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CBaseWindow@@QEAA@H_N@Z ENDP				; CBaseWindow::CBaseWindow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T84869 = 32
this$ = 64
bDoGetDC$ = 72
bDoPostToDestroy$ = 80
?dtor$0@?0???0CBaseWindow@@QEAA@H_N@Z@4HA PROC		; `CBaseWindow::CBaseWindow'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 104				; 00000068H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0CBaseWindow@@QEAA@H_N@Z@4HA ENDP		; `CBaseWindow::CBaseWindow'::`1'::dtor$0
text$x	ENDS
PUBLIC	?DoCreateWindow@CBaseWindow@@QEAAJXZ		; CBaseWindow::DoCreateWindow
PUBLIC	?PrepareWindow@CBaseWindow@@UEAAJXZ		; CBaseWindow::PrepareWindow
EXTRN	?AmGetLastErrorToHResult@@YAJXZ:PROC		; AmGetLastErrorToHResult
EXTRN	__imp_RegisterWindowMessageW:PROC
EXTRN	?DbgAssert@@YAXPEB_W0H@Z:PROC			; DbgAssert
_BSS	SEGMENT
MsgDestroy DD	01H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PrepareWindow@CBaseWindow@@UEAAJXZ DD imagerel $LN11
	DD	imagerel $LN11+381
	DD	imagerel $unwind$?PrepareWindow@CBaseWindow@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PrepareWindow@CBaseWindow@@UEAAJXZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?PrepareWindow@CBaseWindow@@UEAAJXZ
_TEXT	SEGMENT
tv145 = 32
this$ = 64
?PrepareWindow@CBaseWindow@@UEAAJXZ PROC		; CBaseWindow::PrepareWindow, COMDAT
; Line 50
$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 51
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN8@PrepareWin
	xor	eax, eax
	jmp	$LN9@PrepareWin
$LN8@PrepareWin:
; Line 52
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@PrepareWin
	mov	r8d, 52					; 00000034H
	lea	rdx, OFFSET FLAT:$SG82625
	lea	rcx, OFFSET FLAT:$SG82626
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN7@PrepareWin:
; Line 53
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN6@PrepareWin
	mov	r8d, 53					; 00000035H
	lea	rdx, OFFSET FLAT:$SG82628
	lea	rcx, OFFSET FLAT:$SG82629
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@PrepareWin:
; Line 59
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 64					; 00000040H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 60					; 0000003cH
	mov	rdx, QWORD PTR this$[rsp]
	add	rdx, 56					; 00000038H
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8]
	mov	QWORD PTR tv145[rsp], r8
	mov	r9, rax
	mov	r8, rcx
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv145[rsp]
	call	QWORD PTR [rax+120]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+48], rax
; Line 60
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+48], 0
	jne	SHORT $LN5@PrepareWin
; Line 61
	mov	eax, -2147467259			; ffffffff80004005H
	jmp	$LN9@PrepareWin
$LN5@PrepareWin:
; Line 65
	lea	rcx, OFFSET FLAT:$SG82632
	call	QWORD PTR __imp_RegisterWindowMessageW
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+68], eax
; Line 68
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+68], 0
	jne	SHORT $LN4@PrepareWin
; Line 69
	call	?AmGetLastErrorToHResult@@YAJXZ		; AmGetLastErrorToHResult
	jmp	SHORT $LN9@PrepareWin
$LN4@PrepareWin:
; Line 72
	lea	rcx, OFFSET FLAT:$SG82634
	call	QWORD PTR __imp_RegisterWindowMessageW
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+72], eax
; Line 73
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+72], 0
	jne	SHORT $LN3@PrepareWin
; Line 74
	call	?AmGetLastErrorToHResult@@YAJXZ		; AmGetLastErrorToHResult
	jmp	SHORT $LN9@PrepareWin
$LN3@PrepareWin:
; Line 77
	lea	rcx, OFFSET FLAT:$SG82636
	call	QWORD PTR __imp_RegisterWindowMessageW
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+76], eax
; Line 78
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+76], 0
	jne	SHORT $LN2@PrepareWin
; Line 79
	call	?AmGetLastErrorToHResult@@YAJXZ		; AmGetLastErrorToHResult
	jmp	SHORT $LN9@PrepareWin
$LN2@PrepareWin:
; Line 82
	lea	rcx, OFFSET FLAT:$SG82638
	call	QWORD PTR __imp_RegisterWindowMessageW
	mov	DWORD PTR MsgDestroy, eax
; Line 83
	cmp	DWORD PTR MsgDestroy, 0
	jne	SHORT $LN1@PrepareWin
; Line 84
	call	?AmGetLastErrorToHResult@@YAJXZ		; AmGetLastErrorToHResult
	jmp	SHORT $LN9@PrepareWin
$LN1@PrepareWin:
; Line 87
	mov	rcx, QWORD PTR this$[rsp]
	call	?DoCreateWindow@CBaseWindow@@QEAAJXZ	; CBaseWindow::DoCreateWindow
$LN9@PrepareWin:
; Line 88
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?PrepareWindow@CBaseWindow@@UEAAJXZ ENDP		; CBaseWindow::PrepareWindow
_TEXT	ENDS
PUBLIC	??1CBaseWindow@@UEAA@XZ				; CBaseWindow::~CBaseWindow
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CBaseWindow@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+157
	DD	imagerel $unwind$??1CBaseWindow@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1CBaseWindow@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CBaseWindow@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CBaseWindow@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1CBaseWindow@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1CBaseWindow@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1CBaseWindow@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1CBaseWindow@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???1CBaseWindow@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CBaseWindow@@UEAA@XZ DD imagerel ??1CBaseWindow@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1CBaseWindow@@UEAA@XZ+39
	DD	01H
	DD	imagerel ??1CBaseWindow@@UEAA@XZ+114
	DD	00H
	DD	imagerel ??1CBaseWindow@@UEAA@XZ+134
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1CBaseWindow@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1CBaseWindow@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CBaseWindow@@UEAA@XZ DD 022711H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1CBaseWindow@@UEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1CBaseWindow@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1CBaseWindow@@UEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??1CBaseWindow@@UEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1CBaseWindow@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1CBaseWindow@@UEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1CBaseWindow@@UEAA@XZ@4HA
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CBaseWindow@@UEAA@XZ
_TEXT	SEGMENT
$T84904 = 32
this$ = 64
??1CBaseWindow@@UEAA@XZ PROC				; CBaseWindow::~CBaseWindow, COMDAT
; Line 97
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	QWORD PTR $T84904[rsp], -2
; Line 98
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN2@CBaseWindo
	mov	r8d, 98					; 00000062H
	lea	rdx, OFFSET FLAT:$SG82644
	lea	rcx, OFFSET FLAT:$SG82645
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@CBaseWindo:
; Line 99
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN1@CBaseWindo
	mov	r8d, 99					; 00000063H
	lea	rdx, OFFSET FLAT:$SG82647
	lea	rcx, OFFSET FLAT:$SG82648
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
	npad	1
$LN1@CBaseWindo:
; Line 100
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	rcx, rax
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1CBaseWindow@@UEAA@XZ ENDP				; CBaseWindow::~CBaseWindow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T84904 = 32
this$ = 64
?dtor$0@?0???1CBaseWindow@@UEAA@XZ@4HA PROC		; `CBaseWindow::~CBaseWindow'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 104				; 00000068H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???1CBaseWindow@@UEAA@XZ@4HA ENDP		; `CBaseWindow::~CBaseWindow'::`1'::dtor$0
; Function compile flags: /Odtp /RTCsu
$T84904 = 32
this$ = 64
?dtor$1@?0???1CBaseWindow@@UEAA@XZ@4HA PROC		; `CBaseWindow::~CBaseWindow'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 168				; 000000a8H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???1CBaseWindow@@UEAA@XZ@4HA ENDP		; `CBaseWindow::~CBaseWindow'::`1'::dtor$1
text$x	ENDS
PUBLIC	??BCAMEvent@@QEBAPEAXXZ				; CAMEvent::operator void * __ptr64
PUBLIC	?DoneWithWindow@CBaseWindow@@UEAAJXZ		; CBaseWindow::DoneWithWindow
EXTRN	?DbgBreakPoint@@YAXPEB_W0H@Z:PROC		; DbgBreakPoint
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_DestroyWindow:PROC
EXTRN	__imp_GetParent:PROC
EXTRN	__imp_SetWindowLongW:PROC
EXTRN	?DbgLogInfo@@YAXKKPEB_WZZ:PROC			; DbgLogInfo
EXTRN	__imp_DeleteDC:PROC
EXTRN	__imp_SendMessageW:PROC
EXTRN	??1CAMEvent@@QEAA@XZ:PROC			; CAMEvent::~CAMEvent
EXTRN	?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z:PROC ; WaitDispatchingMessages
EXTRN	__imp_PostMessageW:PROC
EXTRN	??0CAMEvent@@QEAA@H@Z:PROC			; CAMEvent::CAMEvent
EXTRN	__imp_GetCurrentThreadId:PROC
EXTRN	__imp_GetWindowThreadProcessId:PROC
EXTRN	__imp_IsWindow:PROC
EXTRN	_RTC_CheckStackVars:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DoneWithWindow@CBaseWindow@@UEAAJXZ DD imagerel $LN14
	DD	imagerel $LN14+749
	DD	imagerel $unwind$?DoneWithWindow@CBaseWindow@@UEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??DoneWithWindow@CBaseWindow@@UEAAJXZ@4HA DD imagerel ?dtor$0@?0??DoneWithWindow@CBaseWindow@@UEAAJXZ@4HA
	DD	imagerel ?dtor$0@?0??DoneWithWindow@CBaseWindow@@UEAAJXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??DoneWithWindow@CBaseWindow@@UEAAJXZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DoneWithWindow@CBaseWindow@@UEAAJXZ DD imagerel ?DoneWithWindow@CBaseWindow@@UEAAJXZ
	DD	0ffffffffH
	DD	imagerel ?DoneWithWindow@CBaseWindow@@UEAAJXZ+149
	DD	00H
	DD	imagerel ?DoneWithWindow@CBaseWindow@@UEAAJXZ+225
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??DoneWithWindow@CBaseWindow@@UEAAJXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DoneWithWindow@CBaseWindow@@UEAAJXZ DD 022711H
	DD	07006b20aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?DoneWithWindow@CBaseWindow@@UEAAJXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DoneWithWindow@CBaseWindow@@UEAAJXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??DoneWithWindow@CBaseWindow@@UEAAJXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DoneWithWindow@CBaseWindow@@UEAAJXZ$rtcName$0 DB 06dH	; CBaseWindow::DoneWithWindow
	DB	05fH
	DB	065H
	DB	076H
	DB	044H
	DB	06fH
	DB	06eH
	DB	065H
	DB	00H
	ORG $+7
?DoneWithWindow@CBaseWindow@@UEAAJXZ$rtcVarDesc DD 038H	; CBaseWindow::DoneWithWindow
	DD	08H
	DQ	FLAT:?DoneWithWindow@CBaseWindow@@UEAAJXZ$rtcName$0
	ORG $+48
?DoneWithWindow@CBaseWindow@@UEAAJXZ$rtcFrameData DD 01H ; CBaseWindow::DoneWithWindow
	DD	00H
	DQ	FLAT:?DoneWithWindow@CBaseWindow@@UEAAJXZ$rtcVarDesc
$cppxdata$?DoneWithWindow@CBaseWindow@@UEAAJXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?DoneWithWindow@CBaseWindow@@UEAAJXZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?DoneWithWindow@CBaseWindow@@UEAAJXZ
	DD	050H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?DoneWithWindow@CBaseWindow@@UEAAJXZ
_TEXT	SEGMENT
m_evDone$82656 = 56
hwnd$ = 72
$T84931 = 80
tv68 = 88
this$ = 112
?DoneWithWindow@CBaseWindow@@UEAAJXZ PROC		; CBaseWindow::DoneWithWindow, COMDAT
; Line 112
$LN14:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
	mov	QWORD PTR $T84931[rsp], -2
; Line 113
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_IsWindow
	test	eax, eax
	je	SHORT $LN9@DoneWithWi
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_GetWindowThreadProcessId
	mov	DWORD PTR tv68[rsp], eax
	call	QWORD PTR __imp_GetCurrentThreadId
	mov	ecx, DWORD PTR tv68[rsp]
	cmp	ecx, eax
	je	$LN10@DoneWithWi
$LN9@DoneWithWi:
; Line 115
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_IsWindow
	test	eax, eax
	je	$LN8@DoneWithWi
; Line 117
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+164]
	test	eax, eax
	je	SHORT $LN7@DoneWithWi
; Line 119
	xor	edx, edx
	lea	rcx, QWORD PTR m_evDone$82656[rsp]
	call	??0CAMEvent@@QEAA@H@Z			; CAMEvent::CAMEvent
	npad	1
; Line 125
	lea	rcx, QWORD PTR m_evDone$82656[rsp]
	call	??BCAMEvent@@QEBAPEAXXZ			; CAMEvent::operator void * __ptr64
	xor	r9d, r9d
	mov	r8, rax
	mov	edx, DWORD PTR MsgDestroy
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_PostMessageW
; Line 126
	lea	rcx, QWORD PTR m_evDone$82656[rsp]
	call	??BCAMEvent@@QEBAPEAXXZ			; CAMEvent::operator void * __ptr64
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, -1					; ffffffffH
	mov	rcx, rax
	call	?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z ; WaitDispatchingMessages
	npad	1
; Line 127
	lea	rcx, QWORD PTR m_evDone$82656[rsp]
	call	??1CAMEvent@@QEAA@XZ			; CAMEvent::~CAMEvent
	jmp	SHORT $LN8@DoneWithWi
$LN7@DoneWithWi:
; Line 128
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, DWORD PTR MsgDestroy
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_SendMessageW
$LN8@DoneWithWi:
; Line 137
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
; Line 143
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	je	SHORT $LN5@DoneWithWi
; Line 145
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_DeleteDC
	test	eax, eax
	jne	SHORT $LN4@DoneWithWi
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:$SG82662
	lea	rcx, OFFSET FLAT:$SG82663
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@DoneWithWi:
; Line 146
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+80], 0
$LN5@DoneWithWi:
; Line 150
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
; Line 152
	xor	eax, eax
	jmp	$LN11@DoneWithWi
$LN10@DoneWithWi:
; Line 154
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR hwnd$[rsp], rax
; Line 155
	cmp	QWORD PTR hwnd$[rsp], 0
	jne	SHORT $LN3@DoneWithWi
; Line 156
	xor	eax, eax
	jmp	$LN11@DoneWithWi
$LN3@DoneWithWi:
; Line 159
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+32]
; Line 160
	lea	r8, OFFSET FLAT:$SG82666
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 164
	mov	rax, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rax+60]
	mov	edx, -16
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_SetWindowLongW
; Line 165
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_GetParent
	test	rax, rax
	je	SHORT $LN2@DoneWithWi
	mov	r8d, 165				; 000000a5H
	lea	rdx, OFFSET FLAT:$SG82668
	lea	rcx, OFFSET FLAT:$SG82669
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@DoneWithWi:
; Line 166
	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+60]
	lea	r8, OFFSET FLAT:$SG82670
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 169
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+72]
; Line 170
	mov	r9, QWORD PTR hwnd$[rsp]
	lea	r8, OFFSET FLAT:$SG82671
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 171
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_DestroyWindow
	test	eax, eax
	jne	SHORT $LN1@DoneWithWi
; Line 173
	call	QWORD PTR __imp_GetLastError
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR hwnd$[rsp]
	lea	r8, OFFSET FLAT:$SG82673
	xor	edx, edx
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 174
	mov	r8d, 174				; 000000aeH
	lea	rdx, OFFSET FLAT:$SG82674
	lea	rcx, OFFSET FLAT:$SG82675
	call	?DbgBreakPoint@@YAXPEB_W0H@Z		; DbgBreakPoint
$LN1@DoneWithWi:
; Line 179
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+48], 0
; Line 180
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+56], 0
; Line 181
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+60], 0
; Line 182
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+64], 0
; Line 183
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+68], 0
; Line 184
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+72], 0
; Line 186
	xor	eax, eax
$LN11@DoneWithWi:
; Line 187
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?DoneWithWindow@CBaseWindow@@UEAAJXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?DoneWithWindow@CBaseWindow@@UEAAJXZ ENDP		; CBaseWindow::DoneWithWindow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
m_evDone$82656 = 56
hwnd$ = 72
$T84931 = 80
tv68 = 88
this$ = 112
?dtor$0@?0??DoneWithWindow@CBaseWindow@@UEAAJXZ@4HA PROC ; `CBaseWindow::DoneWithWindow'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR m_evDone$82656[rbp]
	call	??1CAMEvent@@QEAA@XZ			; CAMEvent::~CAMEvent
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??DoneWithWindow@CBaseWindow@@UEAAJXZ@4HA ENDP ; `CBaseWindow::DoneWithWindow'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.h
pdata	SEGMENT
$pdata$??BCAMEvent@@QEBAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??BCAMEvent@@QEBAPEAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??BCAMEvent@@QEBAPEAXXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??BCAMEvent@@QEBAPEAXXZ
_TEXT	SEGMENT
this$ = 16
??BCAMEvent@@QEBAPEAXXZ PROC				; CAMEvent::operator void * __ptr64, COMDAT
; Line 123
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	pop	rdi
	ret	0
??BCAMEvent@@QEBAPEAXXZ ENDP				; CAMEvent::operator void * __ptr64
_TEXT	ENDS
PUBLIC	?InactivateWindow@CBaseWindow@@UEAAJXZ		; CBaseWindow::InactivateWindow
EXTRN	__imp_ShowWindow:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?InactivateWindow@CBaseWindow@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+85
	DD	imagerel $unwind$?InactivateWindow@CBaseWindow@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InactivateWindow@CBaseWindow@@UEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?InactivateWindow@CBaseWindow@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?InactivateWindow@CBaseWindow@@UEAAJXZ PROC		; CBaseWindow::InactivateWindow, COMDAT
; Line 197
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 199
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+40], 0
	jne	SHORT $LN1@Inactivate
; Line 200
	mov	eax, 1
	jmp	SHORT $LN2@Inactivate
$LN1@Inactivate:
; Line 203
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 0
; Line 204
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_ShowWindow
; Line 205
	xor	eax, eax
$LN2@Inactivate:
; Line 206
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?InactivateWindow@CBaseWindow@@UEAAJXZ ENDP		; CBaseWindow::InactivateWindow
_TEXT	ENDS
PUBLIC	?CompleteConnect@CBaseWindow@@QEAAJXZ		; CBaseWindow::CompleteConnect
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CompleteConnect@CBaseWindow@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+22
	DD	imagerel $unwind$?CompleteConnect@CBaseWindow@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CompleteConnect@CBaseWindow@@QEAAJXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CompleteConnect@CBaseWindow@@QEAAJXZ
_TEXT	SEGMENT
this$ = 16
?CompleteConnect@CBaseWindow@@QEAAJXZ PROC		; CBaseWindow::CompleteConnect, COMDAT
; Line 210
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 211
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 0
; Line 212
	xor	eax, eax
; Line 213
	pop	rdi
	ret	0
?CompleteConnect@CBaseWindow@@QEAAJXZ ENDP		; CBaseWindow::CompleteConnect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ActivateWindow@CBaseWindow@@UEAAJXZ		; CBaseWindow::ActivateWindow
EXTRN	__GSHandlerCheck:PROC
EXTRN	__imp_AdjustWindowRectEx:PROC
EXTRN	__imp_GetWindowLongW:PROC
EXTRN	__imp_GetWindowRect:PROC
EXTRN	__imp_SetWindowPos:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ActivateWindow@CBaseWindow@@UEAAJXZ DD imagerel $LN5
	DD	imagerel $LN5+486
	DD	imagerel $unwind$?ActivateWindow@CBaseWindow@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ActivateWindow@CBaseWindow@@UEAAJXZ DD 033619H
	DD	016010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0a8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ActivateWindow@CBaseWindow@@UEAAJXZ$rtcName$0 DB 057H	; CBaseWindow::ActivateWindow
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?ActivateWindow@CBaseWindow@@UEAAJXZ$rtcName$1 DB 043H	; CBaseWindow::ActivateWindow
	DB	06cH
	DB	069H
	DB	065H
	DB	06eH
	DB	074H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?ActivateWindow@CBaseWindow@@UEAAJXZ$rtcVarDesc DD 078H	; CBaseWindow::ActivateWindow
	DD	010H
	DQ	FLAT:?ActivateWindow@CBaseWindow@@UEAAJXZ$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?ActivateWindow@CBaseWindow@@UEAAJXZ$rtcName$0
	ORG $+96
?ActivateWindow@CBaseWindow@@UEAAJXZ$rtcFrameData DD 02H ; CBaseWindow::ActivateWindow
	DD	00H
	DQ	FLAT:?ActivateWindow@CBaseWindow@@UEAAJXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?ActivateWindow@CBaseWindow@@UEAAJXZ
_TEXT	SEGMENT
WindowRect$ = 72
ClientRect$ = 120
WindowFlags$ = 148
tv87 = 160
__$ArrayPad$ = 168
this$ = 192
?ActivateWindow@CBaseWindow@@UEAAJXZ PROC		; CBaseWindow::ActivateWindow, COMDAT
; Line 223
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rdi, rsp
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 226
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+40], 1
	je	SHORT $LN1@ActivateWi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_GetParent
	test	rax, rax
	je	SHORT $LN2@ActivateWi
$LN1@ActivateWi:
; Line 232
	mov	DWORD PTR [rsp+48], 3
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_SetWindowPos
; Line 234
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 1
; Line 235
	mov	eax, 1
	jmp	$LN3@ActivateWi
$LN2@ActivateWi:
; Line 240
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR ClientRect$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+64]
; Line 241
	lea	rdx, QWORD PTR WindowRect$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_GetWindowRect
; Line 243
	mov	edx, -20
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_GetWindowLongW
	mov	DWORD PTR tv87[rsp], eax
	mov	edx, -16
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	call	QWORD PTR __imp_GetWindowLongW
	mov	ecx, DWORD PTR tv87[rsp]
	mov	r9d, ecx
	xor	r8d, r8d
	mov	edx, eax
	lea	rcx, QWORD PTR ClientRect$[rsp]
	call	QWORD PTR __imp_AdjustWindowRectEx
; Line 247
	mov	DWORD PTR WindowFlags$[rsp], 48		; 00000030H
; Line 248
	mov	eax, DWORD PTR WindowRect$[rsp]
	and	eax, 3
	mov	ecx, DWORD PTR WindowRect$[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR WindowRect$[rsp], eax
; Line 249
	mov	eax, DWORD PTR WindowRect$[rsp+4]
	and	eax, 3
	mov	ecx, DWORD PTR WindowRect$[rsp+4]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR WindowRect$[rsp+4], eax
; Line 257
	mov	eax, DWORD PTR ClientRect$[rsp+4]
	mov	ecx, DWORD PTR ClientRect$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR ClientRect$[rsp]
	mov	edx, DWORD PTR ClientRect$[rsp+8]
	sub	edx, ecx
	mov	ecx, edx
	mov	edx, DWORD PTR WindowFlags$[rsp]
	mov	DWORD PTR [rsp+48], edx
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], ecx
	mov	r9d, DWORD PTR WindowRect$[rsp+4]
	mov	r8d, DWORD PTR WindowRect$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_SetWindowPos
; Line 259
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 1
; Line 260
	xor	eax, eax
$LN3@ActivateWi:
; Line 261
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?ActivateWindow@CBaseWindow@@UEAAJXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?ActivateWindow@CBaseWindow@@UEAAJXZ ENDP		; CBaseWindow::ActivateWindow
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ	; CBaseWindow::PerformanceAlignWindow
EXTRN	__imp_MapWindowPoints:PROC
EXTRN	__imp_GetClientRect:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ DD imagerel $LN5
	DD	imagerel $LN5+354
	DD	imagerel $unwind$?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ DD 033619H
	DD	016010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ$rtcName$0 DB 043H ; CBaseWindow::PerformanceAlignWindow
	DB	06cH
	DB	069H
	DB	065H
	DB	06eH
	DB	074H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ$rtcName$1 DB 057H ; CBaseWindow::PerformanceAlignWindow
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ$rtcVarDesc DD 078H ; CBaseWindow::PerformanceAlignWindow
	DD	010H
	DQ	FLAT:?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ$rtcName$0
	ORG $+96
?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ$rtcFrameData DD 02H ; CBaseWindow::PerformanceAlignWindow
	DD	00H
	DQ	FLAT:?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ
_TEXT	SEGMENT
ClientRect$ = 72
WindowRect$ = 120
WindowFlags$ = 148
__$ArrayPad$ = 160
this$ = 192
?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ PROC	; CBaseWindow::PerformanceAlignWindow, COMDAT
; Line 267
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rdi, rsp
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 269
	lea	rdx, QWORD PTR WindowRect$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_GetWindowRect
; Line 270
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+40], 1
	je	SHORT $LN2@Performanc
	mov	r8d, 270				; 0000010eH
	lea	rdx, OFFSET FLAT:$SG82702
	lea	rcx, OFFSET FLAT:$SG82703
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@Performanc:
; Line 274
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_GetParent
	test	rax, rax
	je	SHORT $LN1@Performanc
; Line 275
	xor	eax, eax
	jmp	$LN3@Performanc
$LN1@Performanc:
; Line 280
	lea	rdx, QWORD PTR ClientRect$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_GetClientRect
; Line 281
	mov	r9d, 2
	lea	r8, QWORD PTR ClientRect$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_MapWindowPoints
; Line 282
	mov	eax, DWORD PTR ClientRect$[rsp]
	and	eax, 3
	mov	ecx, DWORD PTR WindowRect$[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR WindowRect$[rsp], eax
; Line 283
	mov	eax, DWORD PTR ClientRect$[rsp+4]
	and	eax, 3
	mov	ecx, DWORD PTR WindowRect$[rsp+4]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR WindowRect$[rsp+4], eax
; Line 284
	mov	DWORD PTR WindowFlags$[rsp], 17
; Line 291
	mov	eax, DWORD PTR WindowFlags$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, DWORD PTR WindowRect$[rsp+4]
	mov	r8d, DWORD PTR WindowRect$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_SetWindowPos
; Line 293
	xor	eax, eax
$LN3@Performanc:
; Line 294
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?PerformanceAlignWindow@CBaseWindow@@QEAAJXZ ENDP	; CBaseWindow::PerformanceAlignWindow
_TEXT	ENDS
PUBLIC	?SetPalette@CBaseWindow@@QEAAJXZ		; CBaseWindow::SetPalette
PUBLIC	??1CAutoLock@@QEAA@XZ				; CAutoLock::~CAutoLock
PUBLIC	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z		; CAutoLock::CAutoLock
PUBLIC	?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z ; CBaseWindow::SetPalette
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z DD imagerel $LN6
	DD	imagerel $LN6+197
	DD	imagerel $unwind$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA DD imagerel ?dtor$0@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA
	DD	imagerel ?dtor$0@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA DD imagerel ?dtor$1@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA
	DD	imagerel ?dtor$1@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z DD imagerel ?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z
	DD	0ffffffffH
	DD	imagerel ?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z+67
	DD	00H
	DD	imagerel ?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z+92
	DD	01H
	DD	imagerel ?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z+139
	DD	00H
	DD	imagerel ?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z+150
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z DD 022c11H
	DD	0700bb20fH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z$rtcName$0 DB 063H ; CBaseWindow::SetPalette
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+4
?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z$rtcName$1 DB 063H ; CBaseWindow::SetPalette
	DB	050H
	DB	061H
	DB	06cH
	DB	065H
	DB	074H
	DB	074H
	DB	065H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+3
?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z$rtcVarDesc DD 048H ; CBaseWindow::SetPalette
	DD	08H
	DQ	FLAT:?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z$rtcName$0
	ORG $+96
?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z$rtcFrameData DD 02H ; CBaseWindow::SetPalette
	DD	00H
	DQ	FLAT:?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z$rtcVarDesc
$cppxdata$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z
	DD	058H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z
_TEXT	SEGMENT
cWindowLock$82715 = 40
cPaletteLock$82716 = 72
$T85010 = 88
this$ = 112
hPalette$ = 120
?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z PROC	; CBaseWindow::SetPalette, COMDAT
; Line 304
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
	mov	QWORD PTR $T85010[rsp], -2
; Line 307
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	rdx, rax
	lea	rcx, QWORD PTR cWindowLock$82715[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 308
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rdx, rax
	lea	rcx, QWORD PTR cPaletteLock$82716[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 309
	cmp	QWORD PTR hPalette$[rsp], 0
	jne	SHORT $LN1@SetPalette
	mov	r8d, 309				; 00000135H
	lea	rdx, OFFSET FLAT:$SG82718
	lea	rcx, OFFSET FLAT:$SG82719
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetPalette:
; Line 310
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR hPalette$[rsp]
	mov	QWORD PTR [rax+88], rcx
; Line 311
	lea	rcx, QWORD PTR cPaletteLock$82716[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	npad	1
	lea	rcx, QWORD PTR cWindowLock$82715[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
; Line 312
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetPalette@CBaseWindow@@QEAAJXZ	; CBaseWindow::SetPalette
; Line 313
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z ENDP	; CBaseWindow::SetPalette
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cWindowLock$82715 = 40
cPaletteLock$82716 = 72
$T85010 = 88
this$ = 112
hPalette$ = 120
?dtor$0@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA PROC ; `CBaseWindow::SetPalette'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cWindowLock$82715[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA ENDP ; `CBaseWindow::SetPalette'::`1'::dtor$0
; Function compile flags: /Odtp /RTCsu
cWindowLock$82715 = 40
cPaletteLock$82716 = 72
$T85010 = 88
this$ = 112
hPalette$ = 120
?dtor$1@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA PROC ; `CBaseWindow::SetPalette'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cPaletteLock$82716[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??SetPalette@CBaseWindow@@UEAAJPEAUHPALETTE__@@@Z@4HA ENDP ; `CBaseWindow::SetPalette'::`1'::dtor$1
text$x	ENDS
EXTRN	?Lock@CCritSec@@QEAAXXZ:PROC			; CCritSec::Lock
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.h
pdata	SEGMENT
$pdata$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CAutoLock@@QEAA@PEAVCCritSec@@@Z
_TEXT	SEGMENT
this$ = 48
plock$ = 56
??0CAutoLock@@QEAA@PEAVCCritSec@@@Z PROC		; CAutoLock::CAutoLock, COMDAT
; Line 94
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 96
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR plock$[rsp]
	mov	QWORD PTR [rax], rcx
; Line 97
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?Lock@CCritSec@@QEAAXXZ			; CCritSec::Lock
; Line 98
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CAutoLock@@QEAA@PEAVCCritSec@@@Z ENDP		; CAutoLock::CAutoLock
_TEXT	ENDS
EXTRN	?Unlock@CCritSec@@QEAAXXZ:PROC			; CCritSec::Unlock
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAutoLock@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??1CAutoLock@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAutoLock@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CAutoLock@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAutoLock@@QEAA@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; Line 100
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 101
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?Unlock@CCritSec@@QEAAXXZ		; CCritSec::Unlock
; Line 102
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CAutoLock@@QEAA@XZ ENDP				; CAutoLock::~CAutoLock
_TEXT	ENDS
EXTRN	__imp_SelectPalette:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?SetPalette@CBaseWindow@@QEAAJXZ DD imagerel $LN8
	DD	imagerel $LN8+303
	DD	imagerel $unwind$?SetPalette@CBaseWindow@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetPalette@CBaseWindow@@QEAAJXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SetPalette@CBaseWindow@@QEAAJXZ$rtcName$0 DB 063H	; CBaseWindow::SetPalette
	DB	050H
	DB	061H
	DB	06cH
	DB	065H
	DB	074H
	DB	074H
	DB	065H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+3
?SetPalette@CBaseWindow@@QEAAJXZ$rtcVarDesc DD 028H	; CBaseWindow::SetPalette
	DD	08H
	DQ	FLAT:?SetPalette@CBaseWindow@@QEAAJXZ$rtcName$0
	ORG $+48
?SetPalette@CBaseWindow@@QEAAJXZ$rtcFrameData DD 01H	; CBaseWindow::SetPalette
	DD	00H
	DQ	FLAT:?SetPalette@CBaseWindow@@QEAAJXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?SetPalette@CBaseWindow@@QEAAJXZ
_TEXT	SEGMENT
cPaletteLock$82732 = 40
$T85050 = 52
this$ = 80
?SetPalette@CBaseWindow@@QEAAJXZ PROC			; CBaseWindow::SetPalette, COMDAT
; Line 317
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 318
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+96]
	test	eax, eax
	jne	SHORT $LN4@SetPalette@2
; Line 319
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+76]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_SendMessageW
; Line 320
	xor	eax, eax
	jmp	$LN5@SetPalette@2
; Line 321
	jmp	$LN5@SetPalette@2
$LN4@SetPalette@2:
; Line 323
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	jne	SHORT $LN2@SetPalette@2
	mov	r8d, 323				; 00000143H
	lea	rdx, OFFSET FLAT:$SG82727
	lea	rcx, OFFSET FLAT:$SG82728
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@SetPalette@2:
; Line 324
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN1@SetPalette@2
	mov	r8d, 324				; 00000144H
	lea	rdx, OFFSET FLAT:$SG82730
	lea	rcx, OFFSET FLAT:$SG82731
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetPalette@2:
; Line 326
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rdx, rax
	lea	rcx, QWORD PTR cPaletteLock$82732[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 327
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+97]
	mov	r8d, eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+88]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_SelectPalette
; Line 328
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+97]
	mov	r8d, eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+88]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_SelectPalette
; Line 330
	mov	DWORD PTR $T85050[rsp], 0
	lea	rcx, QWORD PTR cPaletteLock$82732[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T85050[rsp]
$LN5@SetPalette@2:
; Line 332
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?SetPalette@CBaseWindow@@QEAAJXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?SetPalette@CBaseWindow@@QEAAJXZ ENDP			; CBaseWindow::SetPalette
_TEXT	ENDS
PUBLIC	?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ	; CBaseWindow::GetMemoryHDC
PUBLIC	?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ	; CBaseWindow::GetWindowHDC
PUBLIC	?UnsetPalette@CBaseWindow@@QEAAXXZ		; CBaseWindow::UnsetPalette
EXTRN	__imp_GetStockObject:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UnsetPalette@CBaseWindow@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+269
	DD	imagerel $unwind$?UnsetPalette@CBaseWindow@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA DD imagerel ?dtor$1@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA
	DD	imagerel ?dtor$1@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?UnsetPalette@CBaseWindow@@QEAAXXZ DD imagerel ?UnsetPalette@CBaseWindow@@QEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?UnsetPalette@CBaseWindow@@QEAAXXZ+68
	DD	00H
	DD	imagerel ?UnsetPalette@CBaseWindow@@QEAAXXZ+96
	DD	01H
	DD	imagerel ?UnsetPalette@CBaseWindow@@QEAAXXZ+227
	DD	00H
	DD	imagerel ?UnsetPalette@CBaseWindow@@QEAAXXZ+238
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UnsetPalette@CBaseWindow@@QEAAXXZ DD 022a11H
	DD	07006d20aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?UnsetPalette@CBaseWindow@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?UnsetPalette@CBaseWindow@@QEAAXXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?UnsetPalette@CBaseWindow@@QEAAXXZ$rtcName$0 DB 063H	; CBaseWindow::UnsetPalette
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+4
?UnsetPalette@CBaseWindow@@QEAAXXZ$rtcName$1 DB 063H	; CBaseWindow::UnsetPalette
	DB	050H
	DB	061H
	DB	06cH
	DB	065H
	DB	074H
	DB	074H
	DB	065H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+3
?UnsetPalette@CBaseWindow@@QEAAXXZ$rtcVarDesc DD 048H	; CBaseWindow::UnsetPalette
	DD	08H
	DQ	FLAT:?UnsetPalette@CBaseWindow@@QEAAXXZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?UnsetPalette@CBaseWindow@@QEAAXXZ$rtcName$0
	ORG $+96
?UnsetPalette@CBaseWindow@@QEAAXXZ$rtcFrameData DD 02H	; CBaseWindow::UnsetPalette
	DD	00H
	DQ	FLAT:?UnsetPalette@CBaseWindow@@QEAAXXZ$rtcVarDesc
$cppxdata$?UnsetPalette@CBaseWindow@@QEAAXXZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?UnsetPalette@CBaseWindow@@QEAAXXZ
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?UnsetPalette@CBaseWindow@@QEAAXXZ
	DD	060H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?UnsetPalette@CBaseWindow@@QEAAXXZ
_TEXT	SEGMENT
cWindowLock$ = 40
cPaletteLock$ = 72
hPalette$ = 88
$T85073 = 96
this$ = 128
?UnsetPalette@CBaseWindow@@QEAAXXZ PROC			; CBaseWindow::UnsetPalette, COMDAT
; Line 336
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rdi, rsp
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	QWORD PTR $T85073[rsp], -2
; Line 337
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	rdx, rax
	lea	rcx, QWORD PTR cWindowLock$[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 338
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rdx, rax
	lea	rcx, QWORD PTR cPaletteLock$[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 342
	mov	ecx, 15
	call	QWORD PTR __imp_GetStockObject
	mov	QWORD PTR hPalette$[rsp], rax
; Line 343
	cmp	QWORD PTR hPalette$[rsp], 0
	jne	SHORT $LN1@UnsetPalet
	mov	r8d, 343				; 00000157H
	lea	rdx, OFFSET FLAT:$SG82743
	lea	rcx, OFFSET FLAT:$SG82744
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@UnsetPalet:
; Line 345
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ ; CBaseWindow::GetWindowHDC
	mov	r8d, 1
	mov	rdx, QWORD PTR hPalette$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_SelectPalette
; Line 346
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ ; CBaseWindow::GetMemoryHDC
	mov	r8d, 1
	mov	rdx, QWORD PTR hPalette$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_SelectPalette
; Line 348
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+88], 0
; Line 349
	lea	rcx, QWORD PTR cPaletteLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	npad	1
	lea	rcx, QWORD PTR cWindowLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?UnsetPalette@CBaseWindow@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?UnsetPalette@CBaseWindow@@QEAAXXZ ENDP			; CBaseWindow::UnsetPalette
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cWindowLock$ = 40
cPaletteLock$ = 72
hPalette$ = 88
$T85073 = 96
this$ = 128
?dtor$0@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA PROC	; `CBaseWindow::UnsetPalette'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cWindowLock$[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA ENDP	; `CBaseWindow::UnsetPalette'::`1'::dtor$0
; Function compile flags: /Odtp /RTCsu
cWindowLock$ = 40
cPaletteLock$ = 72
hPalette$ = 88
$T85073 = 96
this$ = 128
?dtor$1@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA PROC	; `CBaseWindow::UnsetPalette'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cPaletteLock$[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??UnsetPalette@CBaseWindow@@QEAAXXZ@4HA ENDP	; `CBaseWindow::UnsetPalette'::`1'::dtor$1
text$x	ENDS
PUBLIC	?LockPaletteLock@CBaseWindow@@QEAAXXZ		; CBaseWindow::LockPaletteLock
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LockPaletteLock@CBaseWindow@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?LockPaletteLock@CBaseWindow@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LockPaletteLock@CBaseWindow@@QEAAXXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?LockPaletteLock@CBaseWindow@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?LockPaletteLock@CBaseWindow@@QEAAXXZ PROC		; CBaseWindow::LockPaletteLock, COMDAT
; Line 353
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 354
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	?Lock@CCritSec@@QEAAXXZ			; CCritSec::Lock
; Line 355
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?LockPaletteLock@CBaseWindow@@QEAAXXZ ENDP		; CBaseWindow::LockPaletteLock
_TEXT	ENDS
PUBLIC	?UnlockPaletteLock@CBaseWindow@@QEAAXXZ		; CBaseWindow::UnlockPaletteLock
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UnlockPaletteLock@CBaseWindow@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?UnlockPaletteLock@CBaseWindow@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UnlockPaletteLock@CBaseWindow@@QEAAXXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?UnlockPaletteLock@CBaseWindow@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?UnlockPaletteLock@CBaseWindow@@QEAAXXZ PROC		; CBaseWindow::UnlockPaletteLock, COMDAT
; Line 359
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 360
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	?Unlock@CCritSec@@QEAAXXZ		; CCritSec::Unlock
; Line 361
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?UnlockPaletteLock@CBaseWindow@@QEAAXXZ ENDP		; CBaseWindow::UnlockPaletteLock
_TEXT	ENDS
PUBLIC	?DoRealisePalette@CBaseWindow@@UEAAJH@Z		; CBaseWindow::DoRealisePalette
EXTRN	__imp_GdiFlush:PROC
EXTRN	__imp_RealizePalette:PROC
EXTRN	?CritCheckOut@@YAHPEAVCCritSec@@@Z:PROC		; CritCheckOut
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DoRealisePalette@CBaseWindow@@UEAAJH@Z DD imagerel $LN15
	DD	imagerel $LN15+538
	DD	imagerel $unwind$?DoRealisePalette@CBaseWindow@@UEAAJH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??DoRealisePalette@CBaseWindow@@UEAAJH@Z@4HA DD imagerel ?dtor$0@?0??DoRealisePalette@CBaseWindow@@UEAAJH@Z@4HA
	DD	imagerel ?dtor$0@?0??DoRealisePalette@CBaseWindow@@UEAAJH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??DoRealisePalette@CBaseWindow@@UEAAJH@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DoRealisePalette@CBaseWindow@@UEAAJH@Z DD imagerel ?DoRealisePalette@CBaseWindow@@UEAAJH@Z
	DD	0ffffffffH
	DD	imagerel ?DoRealisePalette@CBaseWindow@@UEAAJH@Z+68
	DD	00H
	DD	imagerel ?DoRealisePalette@CBaseWindow@@UEAAJH@Z+88
	DD	0ffffffffH
	DD	imagerel ?DoRealisePalette@CBaseWindow@@UEAAJH@Z+107
	DD	00H
	DD	imagerel ?DoRealisePalette@CBaseWindow@@UEAAJH@Z+285
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??DoRealisePalette@CBaseWindow@@UEAAJH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DoRealisePalette@CBaseWindow@@UEAAJH@Z DD 022b11H
	DD	0700a920eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?DoRealisePalette@CBaseWindow@@UEAAJH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DoRealisePalette@CBaseWindow@@UEAAJH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??DoRealisePalette@CBaseWindow@@UEAAJH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DoRealisePalette@CBaseWindow@@UEAAJH@Z$rtcName$0 DB 063H ; CBaseWindow::DoRealisePalette
	DB	050H
	DB	061H
	DB	06cH
	DB	065H
	DB	074H
	DB	074H
	DB	065H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+3
?DoRealisePalette@CBaseWindow@@UEAAJH@Z$rtcVarDesc DD 028H ; CBaseWindow::DoRealisePalette
	DD	08H
	DQ	FLAT:?DoRealisePalette@CBaseWindow@@UEAAJH@Z$rtcName$0
	ORG $+48
?DoRealisePalette@CBaseWindow@@UEAAJH@Z$rtcFrameData DD 01H ; CBaseWindow::DoRealisePalette
	DD	00H
	DQ	FLAT:?DoRealisePalette@CBaseWindow@@UEAAJH@Z$rtcVarDesc
$cppxdata$?DoRealisePalette@CBaseWindow@@UEAAJH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?DoRealisePalette@CBaseWindow@@UEAAJH@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?DoRealisePalette@CBaseWindow@@UEAAJH@Z
	DD	038H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?DoRealisePalette@CBaseWindow@@UEAAJH@Z
_TEXT	SEGMENT
cPaletteLock$82755 = 40
$T85113 = 52
$T85123 = 56
tv86 = 64
tv160 = 68
this$ = 96
bForceBackground$ = 104
?DoRealisePalette@CBaseWindow@@UEAAJH@Z PROC		; CBaseWindow::DoRealisePalette, COMDAT
; Line 367
$LN15:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
	mov	QWORD PTR $T85123[rsp], -2
; Line 369
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rdx, rax
	lea	rcx, QWORD PTR cPaletteLock$82755[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 371
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+88], 0
	jne	SHORT $LN7@DoRealiseP
; Line 372
	mov	DWORD PTR $T85113[rsp], 0
	lea	rcx, QWORD PTR cPaletteLock$82755[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T85113[rsp]
	jmp	$LN8@DoRealiseP
$LN7@DoRealiseP:
; Line 376
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	jne	SHORT $LN6@DoRealiseP
	mov	r8d, 376				; 00000178H
	lea	rdx, OFFSET FLAT:$SG82759
	lea	rcx, OFFSET FLAT:$SG82760
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@DoRealiseP:
; Line 377
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN5@DoRealiseP
	mov	r8d, 377				; 00000179H
	lea	rdx, OFFSET FLAT:$SG82762
	lea	rcx, OFFSET FLAT:$SG82763
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@DoRealiseP:
; Line 379
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+97]
	test	eax, eax
	jne	SHORT $LN10@DoRealiseP
	cmp	DWORD PTR bForceBackground$[rsp], 0
	jne	SHORT $LN10@DoRealiseP
	mov	DWORD PTR tv86[rsp], 0
	jmp	SHORT $LN11@DoRealiseP
$LN10@DoRealiseP:
	mov	DWORD PTR tv86[rsp], 1
$LN11@DoRealiseP:
	mov	r8d, DWORD PTR tv86[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+88]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_SelectPalette
; Line 380
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+97]
	mov	r8d, eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+88]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_SelectPalette
	npad	1
; Line 381
	lea	rcx, QWORD PTR cPaletteLock$82755[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
; Line 394
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	rcx, rax
	call	?CritCheckOut@@YAHPEAVCCritSec@@@Z	; CritCheckOut
	test	eax, eax
	jne	SHORT $LN4@DoRealiseP
	mov	r8d, 394				; 0000018aH
	lea	rdx, OFFSET FLAT:$SG82765
	lea	rcx, OFFSET FLAT:$SG82766
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@DoRealiseP:
; Line 395
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	?CritCheckOut@@YAHPEAVCCritSec@@@Z	; CritCheckOut
	test	eax, eax
	jne	SHORT $LN3@DoRealiseP
	mov	r8d, 395				; 0000018bH
	lea	rdx, OFFSET FLAT:$SG82768
	lea	rcx, OFFSET FLAT:$SG82769
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@DoRealiseP:
; Line 397
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_RealizePalette
	cmp	eax, -1					; ffffffffH
	jne	SHORT $LN2@DoRealiseP
	mov	r8d, 397				; 0000018dH
	lea	rdx, OFFSET FLAT:$SG82771
	lea	rcx, OFFSET FLAT:$SG82772
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@DoRealiseP:
; Line 398
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_RealizePalette
	cmp	eax, -1					; ffffffffH
	jne	SHORT $LN1@DoRealiseP
	mov	r8d, 398				; 0000018eH
	lea	rdx, OFFSET FLAT:$SG82774
	lea	rcx, OFFSET FLAT:$SG82775
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@DoRealiseP:
; Line 400
	call	QWORD PTR __imp_GdiFlush
	test	eax, eax
	jne	SHORT $LN12@DoRealiseP
	mov	DWORD PTR tv160[rsp], 1
	jmp	SHORT $LN13@DoRealiseP
$LN12@DoRealiseP:
	mov	DWORD PTR tv160[rsp], 0
$LN13@DoRealiseP:
	mov	eax, DWORD PTR tv160[rsp]
$LN8@DoRealiseP:
; Line 401
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?DoRealisePalette@CBaseWindow@@UEAAJH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?DoRealisePalette@CBaseWindow@@UEAAJH@Z ENDP		; CBaseWindow::DoRealisePalette
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cPaletteLock$82755 = 40
$T85113 = 52
$T85123 = 56
tv86 = 64
tv160 = 68
this$ = 96
bForceBackground$ = 104
?dtor$0@?0??DoRealisePalette@CBaseWindow@@UEAAJH@Z@4HA PROC ; `CBaseWindow::DoRealisePalette'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cPaletteLock$82755[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??DoRealisePalette@CBaseWindow@@UEAAJH@Z@4HA ENDP ; `CBaseWindow::DoRealisePalette'::`1'::dtor$0
text$x	ENDS
PUBLIC	?WndProc@@YA_JPEAUHWND__@@I_K_J@Z		; WndProc
EXTRN	__imp_SetEvent:PROC
EXTRN	__imp_SetWindowLongPtrW:PROC
EXTRN	__imp_SetLastError:PROC
EXTRN	__imp_DefWindowProcW:PROC
EXTRN	__imp_GetWindowLongPtrW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WndProc@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN12
	DD	imagerel $LN12+410
	DD	imagerel $unwind$?WndProc@@YA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WndProc@@YA_JPEAUHWND__@@I_K_J@Z DD 022c01H
	DD	070149218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?WndProc@@YA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
pBaseWindow$ = 48
rc$82792 = 56
lasterror$82796 = 64
hwnd$ = 96
uMsg$ = 104
wParam$ = 112
lParam$ = 120
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z PROC			; WndProc, COMDAT
; Line 410
$LN12:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
; Line 418
	xor	edx, edx
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_GetWindowLongPtrW
	mov	QWORD PTR pBaseWindow$[rsp], rax
; Line 419
	cmp	QWORD PTR pBaseWindow$[rsp], 0
	jne	$LN9@WndProc
; Line 430
	cmp	DWORD PTR uMsg$[rsp], 129		; 00000081H
	jne	SHORT $LN8@WndProc
; Line 431
	mov	edx, -20
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_GetWindowLongW
	btr	eax, 22
	mov	r8d, eax
	mov	edx, -20
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_SetWindowLongW
$LN8@WndProc:
; Line 435
	cmp	DWORD PTR uMsg$[rsp], 129		; 00000081H
	jne	SHORT $LN6@WndProc
	mov	rax, QWORD PTR lParam$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pBaseWindow$[rsp], rax
	cmp	QWORD PTR pBaseWindow$[rsp], 0
	jne	SHORT $LN7@WndProc
$LN6@WndProc:
; Line 437
	mov	r9, QWORD PTR lParam$[rsp]
	mov	r8, QWORD PTR wParam$[rsp]
	mov	edx, DWORD PTR uMsg$[rsp]
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_DefWindowProcW
	jmp	$LN10@WndProc
$LN7@WndProc:
; Line 442
	xor	ecx, ecx
	call	QWORD PTR __imp_SetLastError
; Line 444
	mov	r8, QWORD PTR pBaseWindow$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_SetWindowLongPtrW
	mov	QWORD PTR rc$82792[rsp], rax
; Line 446
	cmp	QWORD PTR rc$82792[rsp], 0
	jne	SHORT $LN5@WndProc
; Line 449
	call	QWORD PTR __imp_GetLastError
	mov	DWORD PTR lasterror$82796[rsp], eax
; Line 450
	cmp	DWORD PTR lasterror$82796[rsp], 0
	je	SHORT $LN4@WndProc
	mov	r8d, 450				; 000001c2H
	lea	rdx, OFFSET FLAT:$SG82798
	lea	rcx, OFFSET FLAT:$SG82799
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@WndProc:
$LN5@WndProc:
$LN9@WndProc:
; Line 458
	mov	eax, DWORD PTR MsgDestroy
	cmp	DWORD PTR uMsg$[rsp], eax
	jne	SHORT $LN3@WndProc
	cmp	DWORD PTR uMsg$[rsp], 0
	je	SHORT $LN3@WndProc
; Line 459
	mov	rax, QWORD PTR pBaseWindow$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pBaseWindow$[rsp]
	call	QWORD PTR [rax+16]
; Line 460
	mov	rax, QWORD PTR pBaseWindow$[rsp]
	movzx	eax, BYTE PTR [rax+164]
	test	eax, eax
	je	SHORT $LN2@WndProc
; Line 461
	mov	rcx, QWORD PTR wParam$[rsp]
	call	QWORD PTR __imp_SetEvent
	test	eax, eax
	jne	SHORT $LN1@WndProc
	mov	r8d, 461				; 000001cdH
	lea	rdx, OFFSET FLAT:$SG82804
	lea	rcx, OFFSET FLAT:$SG82805
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@WndProc:
$LN2@WndProc:
; Line 463
	xor	eax, eax
	jmp	SHORT $LN10@WndProc
$LN3@WndProc:
; Line 465
	mov	rax, QWORD PTR pBaseWindow$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR lParam$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR wParam$[rsp]
	mov	r8d, DWORD PTR uMsg$[rsp]
	mov	rdx, QWORD PTR hwnd$[rsp]
	mov	rcx, QWORD PTR pBaseWindow$[rsp]
	call	QWORD PTR [rax+112]
$LN10@WndProc:
; Line 466
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z ENDP			; WndProc
_TEXT	ENDS
PUBLIC	?OnSize@CBaseWindow@@UEAAHJJ@Z			; CBaseWindow::OnSize
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OnSize@CBaseWindow@@UEAAHJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?OnSize@CBaseWindow@@UEAAHJJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OnSize@CBaseWindow@@UEAAHJJ@Z DD 010f01H
	DD	0700fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?OnSize@CBaseWindow@@UEAAHJJ@Z
_TEXT	SEGMENT
this$ = 16
Width$ = 24
Height$ = 32
?OnSize@CBaseWindow@@UEAAHJJ@Z PROC			; CBaseWindow::OnSize, COMDAT
; Line 474
$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 475
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR Width$[rsp]
	mov	DWORD PTR [rax+32], ecx
; Line 476
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR Height$[rsp]
	mov	DWORD PTR [rax+36], ecx
; Line 477
	mov	eax, 1
; Line 478
	pop	rdi
	ret	0
?OnSize@CBaseWindow@@UEAAHJJ@Z ENDP			; CBaseWindow::OnSize
_TEXT	ENDS
PUBLIC	?OnClose@CBaseWindow@@UEAAHXZ			; CBaseWindow::OnClose
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OnClose@CBaseWindow@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?OnClose@CBaseWindow@@UEAAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OnClose@CBaseWindow@@UEAAHXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?OnClose@CBaseWindow@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?OnClose@CBaseWindow@@UEAAHXZ PROC			; CBaseWindow::OnClose, COMDAT
; Line 484
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 485
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_ShowWindow
; Line 486
	mov	eax, 1
; Line 487
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?OnClose@CBaseWindow@@UEAAHXZ ENDP			; CBaseWindow::OnClose
_TEXT	ENDS
PUBLIC	?UninitialiseWindow@CBaseWindow@@UEAAJXZ	; CBaseWindow::UninitialiseWindow
EXTRN	__imp_ReleaseDC:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UninitialiseWindow@CBaseWindow@@UEAAJXZ DD imagerel $LN11
	DD	imagerel $LN11+326
	DD	imagerel $unwind$?UninitialiseWindow@CBaseWindow@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UninitialiseWindow@CBaseWindow@@UEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?UninitialiseWindow@CBaseWindow@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?UninitialiseWindow@CBaseWindow@@UEAAJXZ PROC		; CBaseWindow::UninitialiseWindow, COMDAT
; Line 497
$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 500
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN8@Uninitiali
; Line 501
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN7@Uninitiali
	mov	r8d, 501				; 000001f5H
	lea	rdx, OFFSET FLAT:$SG82819
	lea	rcx, OFFSET FLAT:$SG82820
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN7@Uninitiali:
; Line 502
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	je	SHORT $LN6@Uninitiali
	mov	r8d, 502				; 000001f6H
	lea	rdx, OFFSET FLAT:$SG82822
	lea	rcx, OFFSET FLAT:$SG82823
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@Uninitiali:
; Line 503
	xor	eax, eax
	jmp	$LN9@Uninitiali
$LN8@Uninitiali:
; Line 508
	call	QWORD PTR __imp_GdiFlush
	test	eax, eax
	jne	SHORT $LN5@Uninitiali
	mov	r8d, 508				; 000001fcH
	lea	rdx, OFFSET FLAT:$SG82825
	lea	rcx, OFFSET FLAT:$SG82826
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@Uninitiali:
; Line 510
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN4@Uninitiali
; Line 512
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+24]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_ReleaseDC
	test	eax, eax
	jne	SHORT $LN3@Uninitiali
	mov	r8d, 512				; 00000200H
	lea	rdx, OFFSET FLAT:$SG82829
	lea	rcx, OFFSET FLAT:$SG82830
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@Uninitiali:
; Line 513
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
$LN4@Uninitiali:
; Line 516
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	je	SHORT $LN2@Uninitiali
; Line 518
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_DeleteDC
	test	eax, eax
	jne	SHORT $LN1@Uninitiali
	mov	r8d, 518				; 00000206H
	lea	rdx, OFFSET FLAT:$SG82833
	lea	rcx, OFFSET FLAT:$SG82834
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Uninitiali:
; Line 519
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+80], 0
$LN2@Uninitiali:
; Line 523
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
; Line 525
	xor	eax, eax
$LN9@Uninitiali:
; Line 526
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?UninitialiseWindow@CBaseWindow@@UEAAJXZ ENDP		; CBaseWindow::UninitialiseWindow
_TEXT	ENDS
PUBLIC	?InitialiseWindow@CBaseWindow@@UEAAJPEAUHWND__@@@Z ; CBaseWindow::InitialiseWindow
EXTRN	__imp_SetStretchBltMode:PROC
EXTRN	__imp_CreateCompatibleDC:PROC
EXTRN	__imp_GetDC:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InitialiseWindow@CBaseWindow@@UEAAJPEAUHWND__@@@Z DD imagerel $LN9
	DD	imagerel $LN9+343
	DD	imagerel $unwind$?InitialiseWindow@CBaseWindow@@UEAAJPEAUHWND__@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitialiseWindow@CBaseWindow@@UEAAJPEAUHWND__@@@Z DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?InitialiseWindow@CBaseWindow@@UEAAJPEAUHWND__@@@Z
_TEXT	SEGMENT
tv74 = 32
tv81 = 40
this$ = 64
hwnd$ = 72
?InitialiseWindow@CBaseWindow@@UEAAJPEAUHWND__@@@Z PROC	; CBaseWindow::InitialiseWindow, COMDAT
; Line 537
$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 540
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_IsWindow
	test	eax, eax
	jne	SHORT $LN6@Initialise
	mov	r8d, 540				; 0000021cH
	lea	rdx, OFFSET FLAT:$SG82840
	lea	rcx, OFFSET FLAT:$SG82841
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@Initialise:
; Line 541
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR hwnd$[rsp]
	mov	QWORD PTR [rax+16], rcx
; Line 543
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+160], 0
	je	$LN5@Initialise
; Line 545
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_GetDC
	mov	QWORD PTR tv74[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR tv74[rsp]
	mov	QWORD PTR [rax+24], rcx
	cmp	QWORD PTR tv74[rsp], 0
	jne	SHORT $LN4@Initialise
	mov	r8d, 545				; 00000221H
	lea	rdx, OFFSET FLAT:$SG82844
	lea	rcx, OFFSET FLAT:$SG82845
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@Initialise:
; Line 546
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_CreateCompatibleDC
	mov	QWORD PTR tv81[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR tv81[rsp]
	mov	QWORD PTR [rax+80], rcx
	cmp	QWORD PTR tv81[rsp], 0
	jne	SHORT $LN3@Initialise
	mov	r8d, 546				; 00000222H
	lea	rdx, OFFSET FLAT:$SG82847
	lea	rcx, OFFSET FLAT:$SG82848
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@Initialise:
; Line 548
	mov	edx, 3
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_SetStretchBltMode
	test	eax, eax
	jne	SHORT $LN2@Initialise
	mov	r8d, 548				; 00000224H
	lea	rdx, OFFSET FLAT:$SG82850
	lea	rcx, OFFSET FLAT:$SG82851
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@Initialise:
; Line 549
	mov	edx, 3
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_SetStretchBltMode
	test	eax, eax
	jne	SHORT $LN1@Initialise
	mov	r8d, 549				; 00000225H
	lea	rdx, OFFSET FLAT:$SG82853
	lea	rcx, OFFSET FLAT:$SG82854
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Initialise:
$LN5@Initialise:
; Line 552
	xor	eax, eax
; Line 553
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?InitialiseWindow@CBaseWindow@@UEAAJPEAUHWND__@@@Z ENDP	; CBaseWindow::InitialiseWindow
_TEXT	ENDS
EXTRN	__imp_CreateWindowExW:PROC
EXTRN	__imp_RegisterClassW:PROC
EXTRN	__imp_LoadCursorW:PROC
EXTRN	__imp_GetClassInfoW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DoCreateWindow@CBaseWindow@@QEAAJXZ DD imagerel $LN7
	DD	imagerel $LN7+644
	DD	imagerel $unwind$?DoCreateWindow@CBaseWindow@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DoCreateWindow@CBaseWindow@@QEAAJXZ DD 032401H
	DD	01e010dH
	DD	07006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DoCreateWindow@CBaseWindow@@QEAAJXZ$rtcName$0 DB 077H	; CBaseWindow::DoCreateWindow
	DB	06eH
	DB	064H
	DB	063H
	DB	06cH
	DB	061H
	DB	073H
	DB	073H
	DB	00H
	ORG $+7
?DoCreateWindow@CBaseWindow@@QEAAJXZ$rtcName$1 DB 070H	; CBaseWindow::DoCreateWindow
	DB	042H
	DB	061H
	DB	073H
	DB	065H
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	00H
	ORG $+4
?DoCreateWindow@CBaseWindow@@QEAAJXZ$rtcVarDesc DD 0d8H	; CBaseWindow::DoCreateWindow
	DD	08H
	DQ	FLAT:?DoCreateWindow@CBaseWindow@@QEAAJXZ$rtcName$1
	DD	070H
	DD	048H
	DQ	FLAT:?DoCreateWindow@CBaseWindow@@QEAAJXZ$rtcName$0
	ORG $+96
?DoCreateWindow@CBaseWindow@@QEAAJXZ$rtcFrameData DD 02H ; CBaseWindow::DoCreateWindow
	DD	00H
	DQ	FLAT:?DoCreateWindow@CBaseWindow@@QEAAJXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?DoCreateWindow@CBaseWindow@@QEAAJXZ
_TEXT	SEGMENT
wndclass$ = 112
bRegistered$ = 196
hwnd$ = 200
pBaseWindow$ = 216
Error$82873 = 228
this$ = 256
?DoCreateWindow@CBaseWindow@@QEAAJXZ PROC		; CBaseWindow::DoCreateWindow, COMDAT
; Line 556
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	mov	rdi, rsp
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]
; Line 563
	lea	r8, QWORD PTR wndclass$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+48]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_GetClassInfoW
	mov	DWORD PTR bRegistered$[rsp], eax
; Line 569
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+160], 0
	je	SHORT $LN4@DoCreateWi
; Line 571
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+56]
	or	eax, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+56], eax
$LN4@DoCreateWi:
; Line 574
	cmp	DWORD PTR bRegistered$[rsp], 0
	jne	$LN3@DoCreateWi
; Line 578
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+48]
	mov	QWORD PTR wndclass$[rsp+64], rax
; Line 579
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+56]
	mov	DWORD PTR wndclass$[rsp], eax
; Line 580
	lea	rax, OFFSET FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z ; WndProc
	mov	QWORD PTR wndclass$[rsp+8], rax
; Line 581
	mov	DWORD PTR wndclass$[rsp+16], 0
; Line 582
	mov	DWORD PTR wndclass$[rsp+20], 8
; Line 583
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR wndclass$[rsp+24], rax
; Line 584
	mov	QWORD PTR wndclass$[rsp+32], 0
; Line 585
	mov	edx, 32512				; 00007f00H
	xor	ecx, ecx
	call	QWORD PTR __imp_LoadCursorW
	mov	QWORD PTR wndclass$[rsp+40], rax
; Line 586
	mov	QWORD PTR wndclass$[rsp+48], 0
; Line 587
	mov	QWORD PTR wndclass$[rsp+56], 0
; Line 589
	lea	rcx, QWORD PTR wndclass$[rsp]
	call	QWORD PTR __imp_RegisterClassW
$LN3@DoCreateWi:
; Line 596
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR pBaseWindow$[rsp], rax
; Line 608
	lea	rax, QWORD PTR pBaseWindow$[rsp]
	mov	QWORD PTR [rsp+88], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rsp+80], rax
	mov	QWORD PTR [rsp+72], 0
	mov	QWORD PTR [rsp+64], 0
	mov	DWORD PTR [rsp+56], 240			; 000000f0H
	mov	DWORD PTR [rsp+48], 320			; 00000140H
	mov	DWORD PTR [rsp+40], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+32], -2147483648		; ffffffff80000000H
	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+60]
	lea	r8, OFFSET FLAT:$SG82871
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+48]
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rax+64]
	call	QWORD PTR __imp_CreateWindowExW
	mov	QWORD PTR hwnd$[rsp], rax
; Line 614
	cmp	QWORD PTR hwnd$[rsp], 0
	jne	SHORT $LN2@DoCreateWi
; Line 615
	call	QWORD PTR __imp_GetLastError
	mov	DWORD PTR Error$82873[rsp], eax
; Line 616
	mov	eax, DWORD PTR Error$82873[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN5@DoCreateWi
$LN2@DoCreateWi:
; Line 620
	xor	edx, edx
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_GetWindowLongPtrW
	cmp	rax, QWORD PTR this$[rsp]
	je	SHORT $LN1@DoCreateWi
	mov	r8d, 620				; 0000026cH
	lea	rdx, OFFSET FLAT:$SG82880
	lea	rcx, OFFSET FLAT:$SG82881
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@DoCreateWi:
; Line 628
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR hwnd$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+80]
; Line 631
	mov	rax, QWORD PTR hwnd$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [rax+48]
	lea	r8, OFFSET FLAT:$SG82882
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 633
	xor	eax, eax
$LN5@DoCreateWi:
; Line 634
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?DoCreateWindow@CBaseWindow@@QEAAJXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
?DoCreateWindow@CBaseWindow@@QEAAJXZ ENDP		; CBaseWindow::DoCreateWindow
_TEXT	ENDS
PUBLIC	?OnReceiveMessage@CBaseWindow@@UEAA_JPEAUHWND__@@I_K_J@Z ; CBaseWindow::OnReceiveMessage
EXTRN	__imp_InvalidateRect:PROC
EXTRN	__imp_SetForegroundWindow:PROC
EXTRN	__imp_IsWindowVisible:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OnReceiveMessage@CBaseWindow@@UEAA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN29
	DD	imagerel $LN29+1070
	DD	imagerel $unwind$?OnReceiveMessage@CBaseWindow@@UEAA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OnReceiveMessage@CBaseWindow@@UEAA_JPEAUHWND__@@I_K_J@Z DD 023301H
	DD	07015f21cH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?OnReceiveMessage@CBaseWindow@@UEAA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
bVisible$82896 = 64
HwndTop$82901 = 72
bVisible$82904 = 80
tv84 = 84
tv129 = 88
tv134 = 96
tv137 = 100
tv159 = 104
tv217 = 112
this$ = 144
hwnd$ = 152
uMsg$ = 160
wParam$ = 168
lParam$ = 176
?OnReceiveMessage@CBaseWindow@@UEAA_JPEAUHWND__@@I_K_J@Z PROC ; CBaseWindow::OnReceiveMessage, COMDAT
; Line 643
$LN29:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rdi, rsp
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
; Line 644
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_IsWindow
	test	eax, eax
	jne	SHORT $LN17@OnReceiveM
	mov	r8d, 644				; 00000284H
	lea	rdx, OFFSET FLAT:$SG82892
	lea	rcx, OFFSET FLAT:$SG82893
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN17@OnReceiveM:
; Line 646
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR lParam$[rsp]
	mov	r8, QWORD PTR wParam$[rsp]
	mov	edx, DWORD PTR uMsg$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+104]
	test	eax, eax
	je	SHORT $LN16@OnReceiveM
; Line 647
	xor	eax, eax
	jmp	$LN18@OnReceiveM
$LN16@OnReceiveM:
; Line 655
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+68]
	cmp	DWORD PTR uMsg$[rsp], eax
	jne	SHORT $LN15@OnReceiveM
; Line 657
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_IsWindowVisible
	mov	DWORD PTR bVisible$82896[rsp], eax
; Line 660
	cmp	DWORD PTR bVisible$82896[rsp], 0
	je	SHORT $LN20@OnReceiveM
	mov	DWORD PTR tv84[rsp], 16
	jmp	SHORT $LN21@OnReceiveM
$LN20@OnReceiveM:
	mov	DWORD PTR tv84[rsp], 0
$LN21@OnReceiveM:
	mov	eax, DWORD PTR tv84[rsp]
	or	eax, 67					; 00000043H
	mov	DWORD PTR [rsp+48], eax
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_SetWindowPos
; Line 663
	cmp	QWORD PTR wParam$[rsp], 1
	jne	SHORT $LN14@OnReceiveM
; Line 664
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_SetForegroundWindow
$LN14@OnReceiveM:
; Line 666
	mov	eax, 1
	jmp	$LN18@OnReceiveM
$LN15@OnReceiveM:
; Line 675
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+72]
	cmp	DWORD PTR uMsg$[rsp], eax
	jne	$LN13@OnReceiveM
; Line 676
	cmp	QWORD PTR wParam$[rsp], 1
	jne	SHORT $LN22@OnReceiveM
	mov	QWORD PTR tv129[rsp], -1
	jmp	SHORT $LN23@OnReceiveM
$LN22@OnReceiveM:
	mov	QWORD PTR tv129[rsp], -2
$LN23@OnReceiveM:
	mov	rax, QWORD PTR tv129[rsp]
	mov	QWORD PTR HwndTop$82901[rsp], rax
; Line 677
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_IsWindowVisible
	mov	DWORD PTR bVisible$82904[rsp], eax
; Line 681
	cmp	QWORD PTR wParam$[rsp], 1
	jne	SHORT $LN24@OnReceiveM
	mov	DWORD PTR tv134[rsp], 64		; 00000040H
	jmp	SHORT $LN25@OnReceiveM
$LN24@OnReceiveM:
	mov	DWORD PTR tv134[rsp], 0
$LN25@OnReceiveM:
	cmp	DWORD PTR bVisible$82904[rsp], 0
	je	SHORT $LN26@OnReceiveM
	mov	DWORD PTR tv137[rsp], 16
	jmp	SHORT $LN27@OnReceiveM
$LN26@OnReceiveM:
	mov	DWORD PTR tv137[rsp], 0
$LN27@OnReceiveM:
	mov	eax, DWORD PTR tv134[rsp]
	or	eax, 3
	or	eax, DWORD PTR tv137[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, QWORD PTR HwndTop$82901[rsp]
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_SetWindowPos
; Line 682
	mov	eax, 1
	jmp	$LN18@OnReceiveM
$LN13@OnReceiveM:
; Line 686
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+76]
	cmp	DWORD PTR uMsg$[rsp], eax
	jne	SHORT $LN12@OnReceiveM
; Line 687
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR hwnd$[rsp]
	cmp	QWORD PTR [rax+16], rcx
	je	SHORT $LN11@OnReceiveM
	mov	r8d, 687				; 000002afH
	lea	rdx, OFFSET FLAT:$SG82908
	lea	rcx, OFFSET FLAT:$SG82909
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN11@OnReceiveM:
; Line 688
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8d, 783				; 0000030fH
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+16]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax]
	jmp	$LN18@OnReceiveM
$LN12@OnReceiveM:
; Line 691
	mov	eax, DWORD PTR uMsg$[rsp]
	mov	DWORD PTR tv159[rsp], eax
	cmp	DWORD PTR tv159[rsp], 21
	ja	SHORT $LN28@OnReceiveM
	cmp	DWORD PTR tv159[rsp], 21
	je	SHORT $LN8@OnReceiveM
	cmp	DWORD PTR tv159[rsp], 3
	je	$LN4@OnReceiveM
	cmp	DWORD PTR tv159[rsp], 5
	je	$LN2@OnReceiveM
	cmp	DWORD PTR tv159[rsp], 16
	je	$LN1@OnReceiveM
	jmp	$LN9@OnReceiveM
$LN28@OnReceiveM:
	cmp	DWORD PTR tv159[rsp], 783		; 0000030fH
	je	SHORT $LN6@OnReceiveM
	cmp	DWORD PTR tv159[rsp], 785		; 00000311H
	je	SHORT $LN7@OnReceiveM
	jmp	$LN9@OnReceiveM
$LN8@OnReceiveM:
; Line 697
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_InvalidateRect
; Line 698
	mov	eax, 1
	jmp	$LN18@OnReceiveM
$LN7@OnReceiveM:
; Line 703
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR uMsg$[rsp]
	mov	rdx, QWORD PTR wParam$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax]
; Line 704
	xor	eax, eax
	jmp	$LN18@OnReceiveM
$LN6@OnReceiveM:
; Line 711
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR hwnd$[rsp]
	cmp	QWORD PTR [rax+16], rcx
	je	SHORT $LN5@OnReceiveM
	mov	r8d, 711				; 000002c7H
	lea	rdx, OFFSET FLAT:$SG82921
	lea	rcx, OFFSET FLAT:$SG82922
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@OnReceiveM:
; Line 712
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR uMsg$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+16]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax]
	jmp	$LN18@OnReceiveM
$LN4@OnReceiveM:
; Line 719
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_IsWindowVisible
	test	eax, eax
	je	SHORT $LN3@OnReceiveM
; Line 720
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 15
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_PostMessageW
$LN3@OnReceiveM:
; Line 722
	jmp	SHORT $LN9@OnReceiveM
$LN2@OnReceiveM:
; Line 728
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	rcx, QWORD PTR lParam$[rsp]
	and	rcx, 65535				; 0000ffffH
	movzx	ecx, cx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv217[rsp], rdx
	mov	r8d, eax
	mov	edx, ecx
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv217[rsp]
	call	QWORD PTR [rax+48]
; Line 729
	xor	eax, eax
	jmp	SHORT $LN18@OnReceiveM
$LN1@OnReceiveM:
; Line 735
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+56]
; Line 736
	xor	eax, eax
	jmp	SHORT $LN18@OnReceiveM
$LN9@OnReceiveM:
; Line 738
	mov	r9, QWORD PTR lParam$[rsp]
	mov	r8, QWORD PTR wParam$[rsp]
	mov	edx, DWORD PTR uMsg$[rsp]
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_DefWindowProcW
$LN18@OnReceiveM:
; Line 739
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
?OnReceiveMessage@CBaseWindow@@UEAA_JPEAUHWND__@@I_K_J@Z ENDP ; CBaseWindow::OnReceiveMessage
_TEXT	ENDS
PUBLIC	?OnPaletteChange@CBaseWindow@@MEAA_JPEAUHWND__@@I@Z ; CBaseWindow::OnPaletteChange
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OnPaletteChange@CBaseWindow@@MEAA_JPEAUHWND__@@I@Z DD imagerel $LN12
	DD	imagerel $LN12+287
	DD	imagerel $unwind$?OnPaletteChange@CBaseWindow@@MEAA_JPEAUHWND__@@I@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OnPaletteChange@CBaseWindow@@MEAA_JPEAUHWND__@@I@Z DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?OnPaletteChange@CBaseWindow@@MEAA_JPEAUHWND__@@I@Z
_TEXT	SEGMENT
tv89 = 32
this$ = 64
hwnd$ = 72
Message$ = 80
?OnPaletteChange@CBaseWindow@@MEAA_JPEAUHWND__@@I@Z PROC ; CBaseWindow::OnPaletteChange, COMDAT
; Line 750
$LN12:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 753
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN6@OnPaletteC
	cmp	QWORD PTR hwnd$[rsp], 0
	jne	SHORT $LN7@OnPaletteC
$LN6@OnPaletteC:
; Line 754
	xor	eax, eax
	jmp	$LN8@OnPaletteC
$LN7@OnPaletteC:
; Line 756
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+98]
	test	eax, eax
	je	SHORT $LN5@OnPaletteC
	mov	r8d, 756				; 000002f4H
	lea	rdx, OFFSET FLAT:$SG82942
	lea	rcx, OFFSET FLAT:$SG82943
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@OnPaletteC:
; Line 760
	cmp	DWORD PTR Message$[rsp], 783		; 0000030fH
	je	SHORT $LN3@OnPaletteC
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	cmp	QWORD PTR hwnd$[rsp], rax
	je	$LN4@OnPaletteC
$LN3@OnPaletteC:
; Line 765
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_IsWindowVisible
	test	eax, eax
	jne	SHORT $LN2@OnPaletteC
; Line 766
	lea	r8, OFFSET FLAT:$SG82947
	mov	edx, 1
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 767
	xor	eax, eax
	jmp	SHORT $LN8@OnPaletteC
$LN2@OnPaletteC:
; Line 772
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+98], 1
; Line 774
	cmp	DWORD PTR Message$[rsp], 783		; 0000030fH
	je	SHORT $LN10@OnPaletteC
	mov	DWORD PTR tv89[rsp], 1
	jmp	SHORT $LN11@OnPaletteC
$LN10@OnPaletteC:
	mov	DWORD PTR tv89[rsp], 0
$LN11@OnPaletteC:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR tv89[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+96]
; Line 776
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+98], 0
; Line 780
	cmp	DWORD PTR Message$[rsp], 785		; 00000311H
	jne	SHORT $LN1@OnPaletteC
; Line 781
	xor	r8d, r8d
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_InvalidateRect
$LN1@OnPaletteC:
$LN4@OnPaletteC:
; Line 785
	mov	eax, 1
$LN8@OnPaletteC:
; Line 786
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?OnPaletteChange@CBaseWindow@@MEAA_JPEAUHWND__@@I@Z ENDP ; CBaseWindow::OnPaletteChange
_TEXT	ENDS
PUBLIC	?WindowExists@CBaseWindow@@QEAA_NXZ		; CBaseWindow::WindowExists
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WindowExists@CBaseWindow@@QEAA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?WindowExists@CBaseWindow@@QEAA_NXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WindowExists@CBaseWindow@@QEAA_NXZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?WindowExists@CBaseWindow@@QEAA_NXZ
_TEXT	SEGMENT
tv68 = 32
this$ = 64
?WindowExists@CBaseWindow@@QEAA_NXZ PROC		; CBaseWindow::WindowExists, COMDAT
; Line 792
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 793
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_IsWindow
	test	eax, eax
	je	SHORT $LN3@WindowExis
	mov	DWORD PTR tv68[rsp], 1
	jmp	SHORT $LN4@WindowExis
$LN3@WindowExis:
	mov	DWORD PTR tv68[rsp], 0
$LN4@WindowExis:
	movzx	eax, BYTE PTR tv68[rsp]
; Line 794
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?WindowExists@CBaseWindow@@QEAA_NXZ ENDP		; CBaseWindow::WindowExists
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ	; CBaseWindow::GetDefaultRect
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ DD 033619H
	DD	0700cc210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ$rtcName$0 DB 044H ; CBaseWindow::GetDefaultRect
	DB	065H
	DB	066H
	DB	061H
	DB	075H
	DB	06cH
	DB	074H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+4
?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ$rtcVarDesc DD 028H ; CBaseWindow::GetDefaultRect
	DD	010H
	DQ	FLAT:?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ$rtcName$0
	ORG $+48
?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ$rtcFrameData DD 01H ; CBaseWindow::GetDefaultRect
	DD	00H
	DQ	FLAT:?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ
_TEXT	SEGMENT
DefaultRect$ = 40
__$ArrayPad$ = 80
this$ = 128
__$ReturnUdt$ = 136
?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ PROC	; CBaseWindow::GetDefaultRect, COMDAT
; Line 800
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rdi, rsp
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 801
	mov	DWORD PTR DefaultRect$[rsp], 0
	mov	DWORD PTR DefaultRect$[rsp+4], 0
	mov	DWORD PTR DefaultRect$[rsp+8], 320	; 00000140H
	mov	DWORD PTR DefaultRect$[rsp+12], 240	; 000000f0H
; Line 802
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN1@GetDefault
	mov	r8d, 802				; 00000322H
	lea	rdx, OFFSET FLAT:$SG82960
	lea	rcx, OFFSET FLAT:$SG82961
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetDefault:
; Line 804
	lea	rax, QWORD PTR DefaultRect$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 805
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?GetDefaultRect@CBaseWindow@@UEAA?AUtagRECT@@XZ ENDP	; CBaseWindow::GetDefaultRect
_TEXT	ENDS
PUBLIC	?GetWindowWidth@CBaseWindow@@QEAAJXZ		; CBaseWindow::GetWindowWidth
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowWidth@CBaseWindow@@QEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$?GetWindowWidth@CBaseWindow@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowWidth@CBaseWindow@@QEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetWindowWidth@CBaseWindow@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?GetWindowWidth@CBaseWindow@@QEAAJXZ PROC		; CBaseWindow::GetWindowWidth, COMDAT
; Line 811
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 812
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN1@GetWindowW
	mov	r8d, 812				; 0000032cH
	lea	rdx, OFFSET FLAT:$SG82966
	lea	rcx, OFFSET FLAT:$SG82967
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetWindowW:
; Line 814
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+32]
; Line 815
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetWindowWidth@CBaseWindow@@QEAAJXZ ENDP		; CBaseWindow::GetWindowWidth
_TEXT	ENDS
PUBLIC	?GetWindowHeight@CBaseWindow@@QEAAJXZ		; CBaseWindow::GetWindowHeight
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowHeight@CBaseWindow@@QEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$?GetWindowHeight@CBaseWindow@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowHeight@CBaseWindow@@QEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetWindowHeight@CBaseWindow@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?GetWindowHeight@CBaseWindow@@QEAAJXZ PROC		; CBaseWindow::GetWindowHeight, COMDAT
; Line 821
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 822
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN1@GetWindowH
	mov	r8d, 822				; 00000336H
	lea	rdx, OFFSET FLAT:$SG82972
	lea	rcx, OFFSET FLAT:$SG82973
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetWindowH:
; Line 824
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+36]
; Line 825
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetWindowHeight@CBaseWindow@@QEAAJXZ ENDP		; CBaseWindow::GetWindowHeight
_TEXT	ENDS
PUBLIC	?GetWindowHWND@CBaseWindow@@QEAAPEAUHWND__@@XZ	; CBaseWindow::GetWindowHWND
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowHWND@CBaseWindow@@QEAAPEAUHWND__@@XZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?GetWindowHWND@CBaseWindow@@QEAAPEAUHWND__@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowHWND@CBaseWindow@@QEAAPEAUHWND__@@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetWindowHWND@CBaseWindow@@QEAAPEAUHWND__@@XZ
_TEXT	SEGMENT
this$ = 48
?GetWindowHWND@CBaseWindow@@QEAAPEAUHWND__@@XZ PROC	; CBaseWindow::GetWindowHWND, COMDAT
; Line 831
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 832
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN1@GetWindowH@2
	mov	r8d, 832				; 00000340H
	lea	rdx, OFFSET FLAT:$SG82978
	lea	rcx, OFFSET FLAT:$SG82979
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetWindowH@2:
; Line 834
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
; Line 835
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetWindowHWND@CBaseWindow@@QEAAPEAUHWND__@@XZ ENDP	; CBaseWindow::GetWindowHWND
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ
_TEXT	SEGMENT
this$ = 48
?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ PROC	; CBaseWindow::GetWindowHDC, COMDAT
; Line 841
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 842
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN2@GetWindowH@3
	mov	r8d, 842				; 0000034aH
	lea	rdx, OFFSET FLAT:$SG82984
	lea	rcx, OFFSET FLAT:$SG82985
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@GetWindowH@3:
; Line 843
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	jne	SHORT $LN1@GetWindowH@3
	mov	r8d, 843				; 0000034bH
	lea	rdx, OFFSET FLAT:$SG82987
	lea	rcx, OFFSET FLAT:$SG82988
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetWindowH@3:
; Line 844
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+24]
; Line 845
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ ENDP	; CBaseWindow::GetWindowHDC
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ
_TEXT	SEGMENT
this$ = 48
?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ PROC	; CBaseWindow::GetMemoryHDC, COMDAT
; Line 851
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 852
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN2@GetMemoryH
	mov	r8d, 852				; 00000354H
	lea	rdx, OFFSET FLAT:$SG82993
	lea	rcx, OFFSET FLAT:$SG82994
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@GetMemoryH:
; Line 853
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+80], 0
	jne	SHORT $LN1@GetMemoryH
	mov	r8d, 853				; 00000355H
	lea	rdx, OFFSET FLAT:$SG82996
	lea	rcx, OFFSET FLAT:$SG82997
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetMemoryH:
; Line 854
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+80]
; Line 855
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ ENDP	; CBaseWindow::GetMemoryHDC
_TEXT	ENDS
PUBLIC	?GetPalette@CBaseWindow@@QEAAPEAUHPALETTE__@@XZ	; CBaseWindow::GetPalette
EXTRN	?CritCheckIn@@YAHPEAVCCritSec@@@Z:PROC		; CritCheckIn
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPalette@CBaseWindow@@QEAAPEAUHPALETTE__@@XZ DD imagerel $LN4
	DD	imagerel $LN4+93
	DD	imagerel $unwind$?GetPalette@CBaseWindow@@QEAAPEAUHPALETTE__@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPalette@CBaseWindow@@QEAAPEAUHPALETTE__@@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetPalette@CBaseWindow@@QEAAPEAUHPALETTE__@@XZ
_TEXT	SEGMENT
this$ = 48
?GetPalette@CBaseWindow@@QEAAPEAUHPALETTE__@@XZ PROC	; CBaseWindow::GetPalette, COMDAT
; Line 860
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 863
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	?CritCheckIn@@YAHPEAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN1@GetPalette
	mov	r8d, 863				; 0000035fH
	lea	rdx, OFFSET FLAT:$SG83002
	lea	rcx, OFFSET FLAT:$SG83003
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetPalette:
; Line 864
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+88]
; Line 865
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetPalette@CBaseWindow@@QEAAPEAUHPALETTE__@@XZ ENDP	; CBaseWindow::GetPalette
_TEXT	ENDS
PUBLIC	?DoShowWindow@CBaseWindow@@QEAAJJ@Z		; CBaseWindow::DoShowWindow
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DoShowWindow@CBaseWindow@@QEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?DoShowWindow@CBaseWindow@@QEAAJJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DoShowWindow@CBaseWindow@@QEAAJJ@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?DoShowWindow@CBaseWindow@@QEAAJJ@Z
_TEXT	SEGMENT
this$ = 48
ShowCmd$ = 56
?DoShowWindow@CBaseWindow@@QEAAJJ@Z PROC		; CBaseWindow::DoShowWindow, COMDAT
; Line 874
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 875
	mov	edx, DWORD PTR ShowCmd$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_ShowWindow
; Line 876
	xor	eax, eax
; Line 877
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?DoShowWindow@CBaseWindow@@QEAAJJ@Z ENDP		; CBaseWindow::DoShowWindow
_TEXT	ENDS
PUBLIC	?PaintWindow@CBaseWindow@@QEAAXH@Z		; CBaseWindow::PaintWindow
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PaintWindow@CBaseWindow@@QEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?PaintWindow@CBaseWindow@@QEAAXH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PaintWindow@CBaseWindow@@QEAAXH@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?PaintWindow@CBaseWindow@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
bErase$ = 56
?PaintWindow@CBaseWindow@@QEAAXH@Z PROC			; CBaseWindow::PaintWindow, COMDAT
; Line 883
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 884
	mov	r8d, DWORD PTR bErase$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_InvalidateRect
; Line 885
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?PaintWindow@CBaseWindow@@QEAAXH@Z ENDP			; CBaseWindow::PaintWindow
_TEXT	ENDS
PUBLIC	?DoSetWindowForeground@CBaseWindow@@QEAAXH@Z	; CBaseWindow::DoSetWindowForeground
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DoSetWindowForeground@CBaseWindow@@QEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?DoSetWindowForeground@CBaseWindow@@QEAAXH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DoSetWindowForeground@CBaseWindow@@QEAAXH@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?DoSetWindowForeground@CBaseWindow@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
bFocus$ = 56
?DoSetWindowForeground@CBaseWindow@@QEAAXH@Z PROC	; CBaseWindow::DoSetWindowForeground, COMDAT
; Line 895
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 896
	movsxd	rax, DWORD PTR bFocus$[rsp]
	xor	r9d, r9d
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+68]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_SendMessageW
; Line 897
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?DoSetWindowForeground@CBaseWindow@@QEAAXH@Z ENDP	; CBaseWindow::DoSetWindowForeground
_TEXT	ENDS
PUBLIC	?ResetPaletteVersion@CDrawImage@@QEAAXXZ	; CDrawImage::ResetPaletteVersion
PUBLIC	??0CRefTime@@QEAA@XZ				; CRefTime::CRefTime
PUBLIC	??_7CDrawImage@@6B@				; CDrawImage::`vftable'
PUBLIC	??0CDrawImage@@QEAA@PEAVCBaseWindow@@@Z		; CDrawImage::CDrawImage
PUBLIC	??_R4CDrawImage@@6B@				; CDrawImage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDrawImage@@@8				; CDrawImage `RTTI Type Descriptor'
PUBLIC	??_R3CDrawImage@@8				; CDrawImage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDrawImage@@8				; CDrawImage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDrawImage@@8			; CDrawImage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ScaleSourceRect@CDrawImage@@UEAA?AUtagRECT@@PEBU2@@Z ; CDrawImage::ScaleSourceRect
EXTRN	__imp_SetRectEmpty:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CDrawImage@@QEAA@PEAVCBaseWindow@@@Z DD imagerel $LN4
	DD	imagerel $LN4+263
	DD	imagerel $unwind$??0CDrawImage@@QEAA@PEAVCBaseWindow@@@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@CDrawImage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDrawImage@@8 DD imagerel ??_R0?AVCDrawImage@@@8 ; CDrawImage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CDrawImage@@8
rdata$r	ENDS
;	COMDAT ??_R2CDrawImage@@8
rdata$r	SEGMENT
??_R2CDrawImage@@8 DD imagerel ??_R1A@?0A@EA@CDrawImage@@8 ; CDrawImage::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CDrawImage@@8
rdata$r	SEGMENT
??_R3CDrawImage@@8 DD 00H				; CDrawImage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CDrawImage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDrawImage@@@8
_DATA	SEGMENT
??_R0?AVCDrawImage@@@8 DQ FLAT:??_7type_info@@6B@	; CDrawImage `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCDrawImage@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDrawImage@@6B@
rdata$r	SEGMENT
??_R4CDrawImage@@6B@ DD 01H				; CDrawImage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCDrawImage@@@8
	DD	imagerel ??_R3CDrawImage@@8
	DD	imagerel ??_R4CDrawImage@@6B@
rdata$r	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CDrawImage@@QEAA@PEAVCBaseWindow@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_7CDrawImage@@6B@
CONST	SEGMENT
??_7CDrawImage@@6B@ DQ FLAT:??_R4CDrawImage@@6B@	; CDrawImage::`vftable'
	DQ	FLAT:?ScaleSourceRect@CDrawImage@@UEAA?AUtagRECT@@PEBU2@@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CDrawImage@@QEAA@PEAVCBaseWindow@@@Z
_TEXT	SEGMENT
this$ = 48
pBaseWindow$ = 56
??0CDrawImage@@QEAA@PEAVCBaseWindow@@@Z PROC		; CDrawImage::CDrawImage, COMDAT
; Line 912
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CDrawImage@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pBaseWindow$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 16
	mov	rcx, rax
	call	??0CRefTime@@QEAA@XZ			; CRefTime::CRefTime
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	rcx, rax
	call	??0CRefTime@@QEAA@XZ			; CRefTime::CRefTime
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+40], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+80], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+84], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+88], 0
; Line 913
	cmp	QWORD PTR pBaseWindow$[rsp], 0
	jne	SHORT $LN1@CDrawImage
	mov	r8d, 913				; 00000391H
	lea	rdx, OFFSET FLAT:$SG83023
	lea	rcx, OFFSET FLAT:$SG83024
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CDrawImage:
; Line 914
	mov	rcx, QWORD PTR this$[rsp]
	call	?ResetPaletteVersion@CDrawImage@@QEAAXXZ ; CDrawImage::ResetPaletteVersion
; Line 915
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	QWORD PTR __imp_SetRectEmpty
; Line 916
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 64					; 00000040H
	mov	rcx, rax
	call	QWORD PTR __imp_SetRectEmpty
; Line 918
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+96], 0
; Line 919
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CDrawImage@@QEAA@PEAVCBaseWindow@@@Z ENDP		; CDrawImage::CDrawImage
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\reftime.h
pdata	SEGMENT
$pdata$??0CRefTime@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0CRefTime@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CRefTime@@QEAA@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CRefTime@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0CRefTime@@QEAA@XZ PROC				; CRefTime::CRefTime, COMDAT
; Line 59
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 62
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
; Line 63
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0CRefTime@@QEAA@XZ ENDP				; CRefTime::CRefTime
_TEXT	ENDS
PUBLIC	?Millisecs@CRefTime@@QEAAJXZ			; CRefTime::Millisecs
PUBLIC	__$ArrayPad$
PUBLIC	?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ; CDrawImage::DisplaySampleTimes
EXTRN	__imp_TextOutW:PROC
EXTRN	__imp_GetTextExtentPoint32W:PROC
EXTRN	__imp_lstrlenW:PROC
EXTRN	__imp_wsprintfW:PROC
EXTRN	?DbgCheckModuleLevel@@YAHKK@Z:PROC		; DbgCheckModuleLevel
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z DD imagerel $LN8
	DD	imagerel $LN8+624
	DD	imagerel $unwind$?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z DD 033b19H
	DD	02a0112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$0 DB 073H ; CDrawImage::DisplaySampleTimes
	DB	07aH
	DB	054H
	DB	069H
	DB	06dH
	DB	065H
	DB	073H
	DB	00H
?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$1 DB 043H ; CDrawImage::DisplaySampleTimes
	DB	06cH
	DB	069H
	DB	065H
	DB	06eH
	DB	074H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+1
?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$2 DB 053H ; CDrawImage::DisplaySampleTimes
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+7
?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcVarDesc DD 0108H ; CDrawImage::DisplaySampleTimes
	DD	08H
	DQ	FLAT:?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$2
	DD	0d8H
	DD	010H
	DQ	FLAT:?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$1
	DD	050H
	DD	064H
	DQ	FLAT:?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$0
	ORG $+144
?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcFrameData DD 03H ; CDrawImage::DisplaySampleTimes
	DD	00H
	DQ	FLAT:?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z
_TEXT	SEGMENT
bAccept$ = 48
szTimes$ = 80
ClientRect$ = 216
Size$ = 264
hwnd$ = 280
XPos$ = 288
YPos$ = 292
tv153 = 304
tv92 = 312
__$ArrayPad$ = 320
this$ = 352
pSample$ = 360
?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z PROC ; CDrawImage::DisplaySampleTimes, COMDAT
; Line 928
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 336				; 00000150H
	mov	rdi, rsp
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+352]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 934
	mov	edx, 5
	mov	ecx, 2
	call	?DbgCheckModuleLevel@@YAHKK@Z		; DbgCheckModuleLevel
	mov	DWORD PTR bAccept$[rsp], eax
; Line 935
	cmp	DWORD PTR bAccept$[rsp], 0
	jne	SHORT $LN5@DisplaySam
; Line 936
	jmp	$LN6@DisplaySam
$LN5@DisplaySam:
; Line 941
	cmp	QWORD PTR pSample$[rsp], 0
	jne	SHORT $LN4@DisplaySam
	mov	r8d, 941				; 000003adH
	lea	rdx, OFFSET FLAT:$SG83033
	lea	rcx, OFFSET FLAT:$SG83034
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@DisplaySam:
; Line 947
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 16
	mov	rdx, QWORD PTR pSample$[rsp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv153[rsp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR pSample$[rsp]
	mov	rax, QWORD PTR tv153[rsp]
	call	QWORD PTR [rax+40]
; Line 948
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?GetWindowHWND@CBaseWindow@@QEAAPEAUHWND__@@XZ ; CBaseWindow::GetWindowHWND
	mov	QWORD PTR hwnd$[rsp], rax
; Line 949
	lea	rdx, QWORD PTR ClientRect$[rsp]
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_GetClientRect
	test	eax, eax
	jne	SHORT $LN3@DisplaySam
	mov	r8d, 949				; 000003b5H
	lea	rdx, OFFSET FLAT:$SG83041
	lea	rcx, OFFSET FLAT:$SG83042
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@DisplaySam:
; Line 955
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	rcx, rax
	call	?Millisecs@CRefTime@@QEAAJXZ		; CRefTime::Millisecs
	mov	DWORD PTR tv92[rsp], eax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 16
	call	?Millisecs@CRefTime@@QEAAJXZ		; CRefTime::Millisecs
	mov	ecx, DWORD PTR tv92[rsp]
	mov	r9d, ecx
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG83043
	lea	rcx, QWORD PTR szTimes$[rsp]
	call	QWORD PTR __imp_wsprintfW
; Line 957
	lea	rcx, QWORD PTR szTimes$[rsp]
	call	QWORD PTR __imp_lstrlenW
	cmp	eax, 50					; 00000032H
	jl	SHORT $LN2@DisplaySam
	mov	r8d, 957				; 000003bdH
	lea	rdx, OFFSET FLAT:$SG83045
	lea	rcx, OFFSET FLAT:$SG83046
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@DisplaySam:
; Line 961
	lea	rcx, QWORD PTR szTimes$[rsp]
	call	QWORD PTR __imp_lstrlenW
	lea	r9, QWORD PTR Size$[rsp]
	mov	r8d, eax
	lea	rdx, QWORD PTR szTimes$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_GetTextExtentPoint32W
; Line 962
	mov	eax, DWORD PTR ClientRect$[rsp]
	mov	ecx, DWORD PTR ClientRect$[rsp+8]
	sub	ecx, eax
	mov	eax, ecx
	sub	eax, DWORD PTR Size$[rsp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR XPos$[rsp], eax
; Line 963
	mov	eax, DWORD PTR ClientRect$[rsp+4]
	mov	ecx, DWORD PTR ClientRect$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	sub	eax, DWORD PTR Size$[rsp+4]
	shl	eax, 2
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	DWORD PTR YPos$[rsp], eax
; Line 967
	cmp	DWORD PTR XPos$[rsp], 0
	jle	SHORT $LN1@DisplaySam
	cmp	DWORD PTR YPos$[rsp], 0
	jle	SHORT $LN1@DisplaySam
; Line 968
	lea	rcx, QWORD PTR szTimes$[rsp]
	call	QWORD PTR __imp_lstrlenW
	mov	DWORD PTR [rsp+32], eax
	lea	r9, QWORD PTR szTimes$[rsp]
	mov	r8d, DWORD PTR YPos$[rsp]
	mov	edx, DWORD PTR XPos$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_TextOutW
$LN1@DisplaySam:
$LN6@DisplaySam:
; Line 970
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 336				; 00000150H
	pop	rdi
	ret	0
?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ENDP ; CDrawImage::DisplaySampleTimes
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\reftime.h
pdata	SEGMENT
$pdata$?Millisecs@CRefTime@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?Millisecs@CRefTime@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Millisecs@CRefTime@@QEAAJXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Millisecs@CRefTime@@QEAAJXZ
_TEXT	SEGMENT
this$ = 16
?Millisecs@CRefTime@@QEAAJXZ PROC			; CRefTime::Millisecs, COMDAT
; Line 103
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 104
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	cdq
	mov	ecx, 10000				; 00002710H
	idiv	rcx
; Line 105
	pop	rdi
	ret	0
?Millisecs@CRefTime@@QEAAJXZ ENDP			; CRefTime::Millisecs
_TEXT	ENDS
PUBLIC	?UpdateColourTable@CDrawImage@@IEAAXPEAUHDC__@@PEAUtagBITMAPINFOHEADER@@@Z ; CDrawImage::UpdateColourTable
EXTRN	__imp_SetDIBColorTable:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?UpdateColourTable@CDrawImage@@IEAAXPEAUHDC__@@PEAUtagBITMAPINFOHEADER@@@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?UpdateColourTable@CDrawImage@@IEAAXPEAUHDC__@@PEAUtagBITMAPINFOHEADER@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateColourTable@CDrawImage@@IEAAXPEAUHDC__@@PEAUtagBITMAPINFOHEADER@@@Z DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?UpdateColourTable@CDrawImage@@IEAAXPEAUHDC__@@PEAUtagBITMAPINFOHEADER@@@Z
_TEXT	SEGMENT
pColourTable$ = 32
uiReturn$ = 40
this$ = 64
hdc$ = 72
pbmi$ = 80
?UpdateColourTable@CDrawImage@@IEAAXPEAUHDC__@@PEAUtagBITMAPINFOHEADER@@@Z PROC ; CDrawImage::UpdateColourTable, COMDAT
; Line 978
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 979
	mov	rax, QWORD PTR pbmi$[rsp]
	cmp	DWORD PTR [rax+32], 0
	jne	SHORT $LN2@UpdateColo
	mov	r8d, 979				; 000003d3H
	lea	rdx, OFFSET FLAT:$SG83056
	lea	rcx, OFFSET FLAT:$SG83057
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@UpdateColo:
; Line 980
	mov	rax, QWORD PTR pbmi$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR pColourTable$[rsp], rax
; Line 986
	mov	r9, QWORD PTR pColourTable$[rsp]
	mov	rax, QWORD PTR pbmi$[rsp]
	mov	r8d, DWORD PTR [rax+32]
	xor	edx, edx
	mov	rcx, QWORD PTR hdc$[rsp]
	call	QWORD PTR __imp_SetDIBColorTable
	mov	DWORD PTR uiReturn$[rsp], eax
; Line 989
	mov	rax, QWORD PTR pbmi$[rsp]
	mov	eax, DWORD PTR [rax+32]
	cmp	DWORD PTR uiReturn$[rsp], eax
	je	SHORT $LN1@UpdateColo
	mov	r8d, 989				; 000003ddH
	lea	rdx, OFFSET FLAT:$SG83063
	lea	rcx, OFFSET FLAT:$SG83064
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@UpdateColo:
; Line 990
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?UpdateColourTable@CDrawImage@@IEAAXPEAUHDC__@@PEAUtagBITMAPINFOHEADER@@@Z ENDP ; CDrawImage::UpdateColourTable
_TEXT	ENDS
PUBLIC	$T85342
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ScaleSourceRect@CDrawImage@@UEAA?AUtagRECT@@PEBU2@@Z DD imagerel $LN4
	DD	imagerel $LN4+126
	DD	imagerel $unwind$?ScaleSourceRect@CDrawImage@@UEAA?AUtagRECT@@PEBU2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ScaleSourceRect@CDrawImage@@UEAA?AUtagRECT@@PEBU2@@Z DD 032901H
	DD	070116215H
	DD	06010H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ScaleSourceRect@CDrawImage@@UEAA?AUtagRECT@@PEBU2@@Z
_TEXT	SEGMENT
$T85342 = 32
this$ = 80
__$ReturnUdt$ = 88
pSource$ = 96
?ScaleSourceRect@CDrawImage@@UEAA?AUtagRECT@@PEBU2@@Z PROC ; CDrawImage::ScaleSourceRect, COMDAT
; Line 996
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rdi, rsp
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 997
	cmp	QWORD PTR pSource$[rsp], 0
	jne	SHORT $LN1@ScaleSourc
	mov	r8d, 997				; 000003e5H
	lea	rdx, OFFSET FLAT:$SG83071
	lea	rcx, OFFSET FLAT:$SG83072
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@ScaleSourc:
; Line 998
	lea	rax, QWORD PTR $T85342[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR pSource$[rsp]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T85342[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 999
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
?ScaleSourceRect@CDrawImage@@UEAA?AUtagRECT@@PEBU2@@Z ENDP ; CDrawImage::ScaleSourceRect
_TEXT	ENDS
PUBLIC	?GetPaletteVersion@CDrawImage@@QEAAJXZ		; CDrawImage::GetPaletteVersion
PUBLIC	?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ ; CImageSample::GetDIBData
PUBLIC	?Format@CMediaType@@QEBAPEAEXZ			; CMediaType::Format
PUBLIC	__$ArrayPad$
PUBLIC	?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ; CDrawImage::FastRender
EXTRN	__imp_StretchBlt:PROC
EXTRN	__imp_BitBlt:PROC
EXTRN	__imp_SelectObject:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z DD imagerel $LN9
	DD	imagerel $LN9+859
	DD	imagerel $unwind$?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z DD 033b19H
	DD	01c0112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	0d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$0 DB 070H ; CDrawImage::FastRender
	DB	049H
	DB	06dH
	DB	061H
	DB	067H
	DB	065H
	DB	00H
	ORG $+1
?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$1 DB 053H ; CDrawImage::FastRender
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+13
?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcVarDesc DD 0a8H ; CDrawImage::FastRender
	DD	010H
	DQ	FLAT:?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$1
	DD	078H
	DD	08H
	DQ	FLAT:?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$0
	ORG $+96
?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcFrameData DD 02H ; CDrawImage::FastRender
	DD	00H
	DQ	FLAT:?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z
_TEXT	SEGMENT
pbmi$ = 96
pDibData$ = 104
pImage$ = 120
hOldBitmap$ = 136
pSample$ = 144
hr$ = 152
SourceRect$ = 168
tv138 = 208
__$ArrayPad$ = 216
this$ = 240
pMediaSample$ = 248
?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z PROC	; CDrawImage::FastRender, COMDAT
; Line 1010
$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	mov	rdi, rsp
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1017
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+88], 0
	jne	SHORT $LN6@FastRender
	mov	r8d, 1017				; 000003f9H
	lea	rdx, OFFSET FLAT:$SG83083
	lea	rcx, OFFSET FLAT:$SG83084
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@FastRender:
; Line 1023
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+88]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	add	rax, 48					; 00000030H
	mov	QWORD PTR pbmi$[rsp], rax
; Line 1024
	mov	rax, QWORD PTR pMediaSample$[rsp]
	mov	QWORD PTR pSample$[rsp], rax
; Line 1025
	mov	rcx, QWORD PTR pSample$[rsp]
	call	?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ ; CImageSample::GetDIBData
	mov	QWORD PTR pDibData$[rsp], rax
; Line 1026
	mov	rax, QWORD PTR pDibData$[rsp]
	mov	rdx, QWORD PTR [rax+112]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+40]
	call	QWORD PTR __imp_SelectObject
	mov	QWORD PTR hOldBitmap$[rsp], rax
; Line 1030
	mov	rax, QWORD PTR pMediaSample$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR pImage$[rsp]
	mov	rcx, QWORD PTR pMediaSample$[rsp]
	call	QWORD PTR [rax+24]
	mov	DWORD PTR hr$[rsp], eax
; Line 1031
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN5@FastRender
; Line 1032
	jmp	$LN7@FastRender
$LN5@FastRender:
; Line 1041
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetPaletteVersion@CDrawImage@@QEAAJXZ	; CDrawImage::GetPaletteVersion
	mov	rcx, QWORD PTR pDibData$[rsp]
	cmp	DWORD PTR [rcx], eax
	jge	SHORT $LN4@FastRender
; Line 1042
	mov	rax, QWORD PTR pbmi$[rsp]
	movzx	eax, WORD PTR [rax+14]
	cmp	eax, 8
	jle	SHORT $LN3@FastRender
	mov	r8d, 1042				; 00000412H
	lea	rdx, OFFSET FLAT:$SG83093
	lea	rcx, OFFSET FLAT:$SG83094
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@FastRender:
; Line 1043
	mov	r8, QWORD PTR pbmi$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	call	?UpdateColourTable@CDrawImage@@IEAAXPEAUHDC__@@PEAUtagBITMAPINFOHEADER@@@Z ; CDrawImage::UpdateColourTable
; Line 1044
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetPaletteVersion@CDrawImage@@QEAAJXZ	; CDrawImage::GetPaletteVersion
	mov	rcx, QWORD PTR pDibData$[rsp]
	mov	DWORD PTR [rcx], eax
$LN4@FastRender:
; Line 1054
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 64					; 00000040H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv138[rsp], rcx
	mov	r8, rax
	lea	rdx, QWORD PTR SourceRect$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv138[rsp]
	call	QWORD PTR [rax]
; Line 1058
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+80], 0
	jne	$LN2@FastRender
; Line 1071
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+52]
	mov	eax, DWORD PTR [rax+60]
	sub	eax, ecx
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rdx+48]
	mov	ecx, DWORD PTR [rcx+56]
	sub	ecx, edx
	mov	DWORD PTR [rsp+64], 13369376		; 00cc0020H
	mov	edx, DWORD PTR SourceRect$[rsp+4]
	mov	DWORD PTR [rsp+56], edx
	mov	edx, DWORD PTR SourceRect$[rsp]
	mov	DWORD PTR [rsp+48], edx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+40]
	mov	QWORD PTR [rsp+40], rdx
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rax+52]
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+48]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_BitBlt
; Line 1073
	jmp	$LN1@FastRender
$LN2@FastRender:
; Line 1088
	mov	eax, DWORD PTR SourceRect$[rsp+4]
	mov	ecx, DWORD PTR SourceRect$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR SourceRect$[rsp]
	mov	edx, DWORD PTR SourceRect$[rsp+8]
	sub	edx, ecx
	mov	ecx, edx
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [r8+52]
	mov	edx, DWORD PTR [rdx+60]
	sub	edx, r8d
	mov	r8, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [r9+48]
	mov	r8d, DWORD PTR [r8+56]
	sub	r8d, r9d
	mov	DWORD PTR [rsp+80], 13369376		; 00cc0020H
	mov	DWORD PTR [rsp+72], eax
	mov	DWORD PTR [rsp+64], ecx
	mov	eax, DWORD PTR SourceRect$[rsp+4]
	mov	DWORD PTR [rsp+56], eax
	mov	eax, DWORD PTR SourceRect$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], edx
	mov	r9d, r8d
	mov	rax, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rax+52]
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+48]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_StretchBlt
$LN1@FastRender:
; Line 1096
	mov	rdx, QWORD PTR pMediaSample$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ; CDrawImage::DisplaySampleTimes
; Line 1100
	mov	rdx, QWORD PTR hOldBitmap$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+40]
	call	QWORD PTR __imp_SelectObject
$LN7@FastRender:
; Line 1101
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ENDP	; CDrawImage::FastRender
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.h
pdata	SEGMENT
$pdata$?Format@CMediaType@@QEBAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?Format@CMediaType@@QEBAPEAEXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Format@CMediaType@@QEBAPEAEXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Format@CMediaType@@QEBAPEAEXZ
_TEXT	SEGMENT
this$ = 16
?Format@CMediaType@@QEBAPEAEXZ PROC			; CMediaType::Format, COMDAT
; Line 55
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+80]
	pop	rdi
	ret	0
?Format@CMediaType@@QEBAPEAEXZ ENDP			; CMediaType::Format
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ; CDrawImage::SlowRender
EXTRN	__imp_StretchDIBits:PROC
EXTRN	__imp_SetDIBitsToDevice:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z DD imagerel $LN8
	DD	imagerel $LN8+745
	DD	imagerel $unwind$?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z DD 033b19H
	DD	01c0112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	0d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$0 DB 070H ; CDrawImage::SlowRender
	DB	049H
	DB	06dH
	DB	061H
	DB	067H
	DB	065H
	DB	00H
	ORG $+1
?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$1 DB 053H ; CDrawImage::SlowRender
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+13
?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcVarDesc DD 0a8H ; CDrawImage::SlowRender
	DD	010H
	DQ	FLAT:?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$1
	DD	088H
	DD	08H
	DQ	FLAT:?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcName$0
	ORG $+96
?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcFrameData DD 02H ; CDrawImage::SlowRender
	DD	00H
	DQ	FLAT:?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z
_TEXT	SEGMENT
pbmi$ = 112
pImage$ = 136
hr$ = 148
SourceRect$ = 168
lAdjustedSourceTop$ = 196
tv80 = 208
__$ArrayPad$ = 216
this$ = 240
pMediaSample$ = 248
?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z PROC	; CDrawImage::SlowRender, COMDAT
; Line 1113
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 224				; 000000e0H
	mov	rdi, rsp
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1116
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+88], 0
	jne	SHORT $LN5@SlowRender
	mov	r8d, 1116				; 0000045cH
	lea	rdx, OFFSET FLAT:$SG83108
	lea	rcx, OFFSET FLAT:$SG83109
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@SlowRender:
; Line 1117
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+88]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	add	rax, 48					; 00000030H
	mov	QWORD PTR pbmi$[rsp], rax
; Line 1122
	mov	rax, QWORD PTR pMediaSample$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR pImage$[rsp]
	mov	rcx, QWORD PTR pMediaSample$[rsp]
	call	QWORD PTR [rax+24]
	mov	DWORD PTR hr$[rsp], eax
; Line 1123
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN4@SlowRender
; Line 1124
	jmp	$LN6@SlowRender
$LN4@SlowRender:
; Line 1134
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 64					; 00000040H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv80[rsp], rcx
	mov	r8, rax
	lea	rdx, QWORD PTR SourceRect$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv80[rsp]
	call	QWORD PTR [rax]
; Line 1136
	mov	eax, DWORD PTR SourceRect$[rsp+4]
	mov	DWORD PTR lAdjustedSourceTop$[rsp], eax
; Line 1139
	mov	rax, QWORD PTR pbmi$[rsp]
	cmp	DWORD PTR [rax+8], 0
	jle	SHORT $LN3@SlowRender
; Line 1140
	mov	rax, QWORD PTR pbmi$[rsp]
	mov	ecx, DWORD PTR SourceRect$[rsp+12]
	mov	eax, DWORD PTR [rax+8]
	sub	eax, ecx
	mov	DWORD PTR lAdjustedSourceTop$[rsp], eax
$LN3@SlowRender:
; Line 1144
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+80], 0
	jne	$LN2@SlowRender
; Line 1160
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+52]
	mov	eax, DWORD PTR [rax+60]
	sub	eax, ecx
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rdx+48]
	mov	ecx, DWORD PTR [rcx+56]
	sub	ecx, edx
	mov	DWORD PTR [rsp+88], 0
	mov	rdx, QWORD PTR pbmi$[rsp]
	mov	QWORD PTR [rsp+80], rdx
	mov	rdx, QWORD PTR pImage$[rsp]
	mov	QWORD PTR [rsp+72], rdx
	mov	rdx, QWORD PTR pbmi$[rsp]
	mov	edx, DWORD PTR [rdx+8]
	mov	DWORD PTR [rsp+64], edx
	mov	DWORD PTR [rsp+56], 0
	mov	edx, DWORD PTR lAdjustedSourceTop$[rsp]
	mov	DWORD PTR [rsp+48], edx
	mov	edx, DWORD PTR SourceRect$[rsp]
	mov	DWORD PTR [rsp+40], edx
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rax+52]
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+48]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_SetDIBitsToDevice
; Line 1162
	jmp	$LN1@SlowRender
$LN2@SlowRender:
; Line 1179
	mov	eax, DWORD PTR SourceRect$[rsp+4]
	mov	ecx, DWORD PTR SourceRect$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR SourceRect$[rsp]
	mov	edx, DWORD PTR SourceRect$[rsp+8]
	sub	edx, ecx
	mov	ecx, edx
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [r8+52]
	mov	edx, DWORD PTR [rdx+60]
	sub	edx, r8d
	mov	r8, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [r9+48]
	mov	r8d, DWORD PTR [r8+56]
	sub	r8d, r9d
	mov	DWORD PTR [rsp+96], 13369376		; 00cc0020H
	mov	DWORD PTR [rsp+88], 0
	mov	r9, QWORD PTR pbmi$[rsp]
	mov	QWORD PTR [rsp+80], r9
	mov	r9, QWORD PTR pImage$[rsp]
	mov	QWORD PTR [rsp+72], r9
	mov	DWORD PTR [rsp+64], eax
	mov	DWORD PTR [rsp+56], ecx
	mov	eax, DWORD PTR lAdjustedSourceTop$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	eax, DWORD PTR SourceRect$[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], edx
	mov	r9d, r8d
	mov	rax, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rax+52]
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+48]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_StretchDIBits
$LN1@SlowRender:
; Line 1191
	mov	rdx, QWORD PTR pMediaSample$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?DisplaySampleTimes@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ; CDrawImage::DisplaySampleTimes
$LN6@SlowRender:
; Line 1193
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 224				; 000000e0H
	pop	rdi
	ret	0
?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ENDP	; CDrawImage::SlowRender
_TEXT	ENDS
PUBLIC	?NotifyEndDraw@CDrawImage@@QEAAXXZ		; CDrawImage::NotifyEndDraw
PUBLIC	?NotifyStartDraw@CDrawImage@@QEAAXXZ		; CDrawImage::NotifyStartDraw
PUBLIC	?DrawImage@CDrawImage@@QEAAHPEAUIMediaSample@@@Z ; CDrawImage::DrawImage
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawImage@CDrawImage@@QEAAHPEAUIMediaSample@@@Z DD imagerel $LN8
	DD	imagerel $LN8+268
	DD	imagerel $unwind$?DrawImage@CDrawImage@@QEAAHPEAUIMediaSample@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawImage@CDrawImage@@QEAAHPEAUIMediaSample@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?DrawImage@CDrawImage@@QEAAHPEAUIMediaSample@@@Z
_TEXT	SEGMENT
this$ = 48
pMediaSample$ = 56
?DrawImage@CDrawImage@@QEAAHPEAUIMediaSample@@@Z PROC	; CDrawImage::DrawImage, COMDAT
; Line 1204
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1205
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 0
	jne	SHORT $LN5@DrawImage
	mov	r8d, 1205				; 000004b5H
	lea	rdx, OFFSET FLAT:$SG83133
	lea	rcx, OFFSET FLAT:$SG83134
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@DrawImage:
; Line 1206
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN4@DrawImage
	mov	r8d, 1206				; 000004b6H
	lea	rdx, OFFSET FLAT:$SG83136
	lea	rcx, OFFSET FLAT:$SG83137
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@DrawImage:
; Line 1207
	mov	rcx, QWORD PTR this$[rsp]
	call	?NotifyStartDraw@CDrawImage@@QEAAXXZ	; CDrawImage::NotifyStartDraw
; Line 1214
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+84], 0
	jne	SHORT $LN3@DrawImage
; Line 1215
	mov	rdx, QWORD PTR pMediaSample$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?SlowRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ; CDrawImage::SlowRender
; Line 1216
	call	QWORD PTR __imp_GdiFlush
	test	eax, eax
	jne	SHORT $LN2@DrawImage
	mov	r8d, 1216				; 000004c0H
	lea	rdx, OFFSET FLAT:$SG83140
	lea	rcx, OFFSET FLAT:$SG83141
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@DrawImage:
; Line 1217
	mov	rcx, QWORD PTR this$[rsp]
	call	?NotifyEndDraw@CDrawImage@@QEAAXXZ	; CDrawImage::NotifyEndDraw
; Line 1218
	mov	eax, 1
	jmp	SHORT $LN6@DrawImage
$LN3@DrawImage:
; Line 1223
	mov	rdx, QWORD PTR pMediaSample$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?FastRender@CDrawImage@@IEAAXPEAUIMediaSample@@@Z ; CDrawImage::FastRender
; Line 1224
	call	QWORD PTR __imp_GdiFlush
	test	eax, eax
	jne	SHORT $LN1@DrawImage
	mov	r8d, 1224				; 000004c8H
	lea	rdx, OFFSET FLAT:$SG83143
	lea	rcx, OFFSET FLAT:$SG83144
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@DrawImage:
; Line 1225
	mov	rcx, QWORD PTR this$[rsp]
	call	?NotifyEndDraw@CDrawImage@@QEAAXXZ	; CDrawImage::NotifyEndDraw
; Line 1226
	mov	eax, 1
$LN6@DrawImage:
; Line 1227
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?DrawImage@CDrawImage@@QEAAHPEAUIMediaSample@@@Z ENDP	; CDrawImage::DrawImage
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.h
pdata	SEGMENT
$pdata$?NotifyStartDraw@CDrawImage@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?NotifyStartDraw@CDrawImage@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyStartDraw@CDrawImage@@QEAAXXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NotifyStartDraw@CDrawImage@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?NotifyStartDraw@CDrawImage@@QEAAXXZ PROC		; CDrawImage::NotifyStartDraw, COMDAT
; Line 215
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 217
	pop	rdi
	ret	0
?NotifyStartDraw@CDrawImage@@QEAAXXZ ENDP		; CDrawImage::NotifyStartDraw
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyEndDraw@CDrawImage@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?NotifyEndDraw@CDrawImage@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyEndDraw@CDrawImage@@QEAAXXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NotifyEndDraw@CDrawImage@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?NotifyEndDraw@CDrawImage@@QEAAXXZ PROC			; CDrawImage::NotifyEndDraw, COMDAT
; Line 221
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 223
	pop	rdi
	ret	0
?NotifyEndDraw@CDrawImage@@QEAAXXZ ENDP			; CDrawImage::NotifyEndDraw
_TEXT	ENDS
PUBLIC	$T85407
PUBLIC	$T85408
PUBLIC	$T85409
PUBLIC	$T85410
PUBLIC	__$ArrayPad$
PUBLIC	?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z ; CDrawImage::DrawVideoImageHere
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z DD imagerel $LN12
	DD	imagerel $LN12+817
	DD	imagerel $unwind$?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z DD 044619H
	DD	02f011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0168H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcName$0 DB 070H ; CDrawImage::DrawVideoImageHere
	DB	049H
	DB	06dH
	DB	061H
	DB	067H
	DB	065H
	DB	00H
	ORG $+1
?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcName$1 DB 053H ; CDrawImage::DrawVideoImageHere
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcName$2 DB 054H ; CDrawImage::DrawVideoImageHere
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+13
?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcVarDesc DD 0d8H ; CDrawImage::DrawVideoImageHere
	DD	010H
	DQ	FLAT:?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcName$2
	DD	0a8H
	DD	010H
	DQ	FLAT:?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcName$1
	DD	088H
	DD	08H
	DQ	FLAT:?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcName$0
	ORG $+144
?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcFrameData DD 03H ; CDrawImage::DrawVideoImageHere
	DD	00H
	DQ	FLAT:?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z
_TEXT	SEGMENT
pbmi$ = 112
pImage$ = 136
hr$ = 148
SourceRect$ = 168
TargetRect$ = 216
$T83165 = 248
lAdjustedSourceTop$ = 264
bRet$ = 268
$T85407 = 280
$T85408 = 296
$T85409 = 312
$T85410 = 328
tv82 = 344
tv148 = 352
__$ArrayPad$ = 360
this$ = 400
hdc$ = 408
pMediaSample$ = 416
lprcSrc$ = 424
lprcDst$ = 432
?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z PROC ; CDrawImage::DrawVideoImageHere, COMDAT
; Line 1236
$LN12:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 376				; 00000178H
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+400]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1237
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+88], 0
	jne	SHORT $LN7@DrawVideoI
	mov	r8d, 1237				; 000004d5H
	lea	rdx, OFFSET FLAT:$SG83153
	lea	rcx, OFFSET FLAT:$SG83154
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN7@DrawVideoI:
; Line 1238
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+88]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	add	rax, 48					; 00000030H
	mov	QWORD PTR pbmi$[rsp], rax
; Line 1243
	mov	rax, QWORD PTR pMediaSample$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR pImage$[rsp]
	mov	rcx, QWORD PTR pMediaSample$[rsp]
	call	QWORD PTR [rax+24]
	mov	DWORD PTR hr$[rsp], eax
; Line 1244
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN6@DrawVideoI
; Line 1245
	xor	eax, eax
	jmp	$LN8@DrawVideoI
$LN6@DrawVideoI:
; Line 1251
	cmp	QWORD PTR lprcSrc$[rsp], 0
	je	SHORT $LN5@DrawVideoI
; Line 1252
	lea	rax, QWORD PTR $T85410[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR lprcSrc$[rsp]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR SourceRect$[rsp]
	lea	rcx, QWORD PTR $T85410[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN4@DrawVideoI
$LN5@DrawVideoI:
; Line 1254
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 64					; 00000040H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv82[rsp], rcx
	mov	r8, rax
	lea	rdx, QWORD PTR $T83165[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv82[rsp]
	call	QWORD PTR [rax]
	lea	rcx, QWORD PTR $T85409[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR SourceRect$[rsp]
	lea	rcx, QWORD PTR $T85409[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
$LN4@DrawVideoI:
; Line 1256
	cmp	QWORD PTR lprcDst$[rsp], 0
	je	SHORT $LN3@DrawVideoI
; Line 1257
	lea	rax, QWORD PTR $T85408[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR lprcDst$[rsp]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR TargetRect$[rsp]
	lea	rcx, QWORD PTR $T85408[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN2@DrawVideoI
$LN3@DrawVideoI:
; Line 1259
	lea	rax, QWORD PTR $T85407[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+48]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR TargetRect$[rsp]
	lea	rcx, QWORD PTR $T85407[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
$LN2@DrawVideoI:
; Line 1261
	mov	eax, DWORD PTR SourceRect$[rsp+4]
	mov	DWORD PTR lAdjustedSourceTop$[rsp], eax
; Line 1264
	mov	rax, QWORD PTR pbmi$[rsp]
	cmp	DWORD PTR [rax+8], 0
	jle	SHORT $LN1@DrawVideoI
; Line 1265
	mov	rax, QWORD PTR pbmi$[rsp]
	mov	ecx, DWORD PTR SourceRect$[rsp+12]
	mov	eax, DWORD PTR [rax+8]
	sub	eax, ecx
	mov	DWORD PTR lAdjustedSourceTop$[rsp], eax
$LN1@DrawVideoI:
; Line 1283
	mov	eax, DWORD PTR SourceRect$[rsp+4]
	mov	ecx, DWORD PTR SourceRect$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR SourceRect$[rsp]
	mov	edx, DWORD PTR SourceRect$[rsp+8]
	sub	edx, ecx
	mov	ecx, edx
	mov	edx, DWORD PTR TargetRect$[rsp+4]
	mov	edi, DWORD PTR TargetRect$[rsp+12]
	sub	edi, edx
	mov	edx, edi
	mov	edi, DWORD PTR TargetRect$[rsp]
	mov	esi, DWORD PTR TargetRect$[rsp+8]
	sub	esi, edi
	mov	edi, esi
	mov	DWORD PTR [rsp+96], 13369376		; 00cc0020H
	mov	DWORD PTR [rsp+88], 0
	mov	rsi, QWORD PTR pbmi$[rsp]
	mov	QWORD PTR [rsp+80], rsi
	mov	rsi, QWORD PTR pImage$[rsp]
	mov	QWORD PTR [rsp+72], rsi
	mov	DWORD PTR [rsp+64], eax
	mov	DWORD PTR [rsp+56], ecx
	mov	eax, DWORD PTR lAdjustedSourceTop$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	eax, DWORD PTR SourceRect$[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], edx
	mov	r9d, edi
	mov	r8d, DWORD PTR TargetRect$[rsp+4]
	mov	edx, DWORD PTR TargetRect$[rsp]
	mov	rcx, QWORD PTR hdc$[rsp]
	call	QWORD PTR __imp_StretchDIBits
	test	eax, eax
	je	SHORT $LN10@DrawVideoI
	mov	DWORD PTR tv148[rsp], 1
	jmp	SHORT $LN11@DrawVideoI
$LN10@DrawVideoI:
	mov	DWORD PTR tv148[rsp], 0
$LN11@DrawVideoI:
	mov	eax, DWORD PTR tv148[rsp]
	mov	DWORD PTR bRet$[rsp], eax
; Line 1284
	mov	eax, DWORD PTR bRet$[rsp]
$LN8@DrawVideoI:
; Line 1285
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 376				; 00000178H
	pop	rdi
	pop	rsi
	ret	0
?DrawVideoImageHere@CDrawImage@@QEAAHPEAUHDC__@@PEAUIMediaSample@@PEAUtagRECT@@2@Z ENDP ; CDrawImage::DrawVideoImageHere
_TEXT	ENDS
PUBLIC	?SetDrawContext@CDrawImage@@QEAAXXZ		; CDrawImage::SetDrawContext
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetDrawContext@CDrawImage@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?SetDrawContext@CDrawImage@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetDrawContext@CDrawImage@@QEAAXXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetDrawContext@CDrawImage@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?SetDrawContext@CDrawImage@@QEAAXXZ PROC		; CDrawImage::SetDrawContext, COMDAT
; Line 1294
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1295
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?GetMemoryHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ ; CBaseWindow::GetMemoryHDC
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+40], rax
; Line 1296
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?GetWindowHDC@CBaseWindow@@QEAAPEAUHDC__@@XZ ; CBaseWindow::GetWindowHDC
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+32], rax
; Line 1297
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetDrawContext@CDrawImage@@QEAAXXZ ENDP		; CDrawImage::SetDrawContext
_TEXT	ENDS
PUBLIC	?SetStretchMode@CDrawImage@@IEAAXXZ		; CDrawImage::SetStretchMode
PUBLIC	$T85431
PUBLIC	?SetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z	; CDrawImage::SetTargetRect
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$?SetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z DD 032401H
	DD	0700c6210H
	DD	0600bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z
_TEXT	SEGMENT
$T85431 = 32
this$ = 80
pTargetRect$ = 88
?SetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z PROC	; CDrawImage::SetTargetRect, COMDAT
; Line 1305
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rdi, rsp
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 1306
	cmp	QWORD PTR pTargetRect$[rsp], 0
	jne	SHORT $LN1@SetTargetR
	mov	r8d, 1306				; 0000051aH
	lea	rdx, OFFSET FLAT:$SG83181
	lea	rcx, OFFSET FLAT:$SG83182
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetTargetR:
; Line 1307
	lea	rax, QWORD PTR $T85431[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR pTargetRect$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T85431[rsp]
	lea	rdi, QWORD PTR [rax+48]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 1308
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetStretchMode@CDrawImage@@IEAAXXZ	; CDrawImage::SetStretchMode
; Line 1309
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
?SetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z ENDP	; CDrawImage::SetTargetRect
_TEXT	ENDS
PUBLIC	$T85439
PUBLIC	?GetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z	; CDrawImage::GetTargetRect
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$?GetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z DD 032401H
	DD	0700c6210H
	DD	0600bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z
_TEXT	SEGMENT
$T85439 = 32
this$ = 80
pTargetRect$ = 88
?GetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z PROC	; CDrawImage::GetTargetRect, COMDAT
; Line 1315
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rdi, rsp
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 1316
	cmp	QWORD PTR pTargetRect$[rsp], 0
	jne	SHORT $LN1@GetTargetR
	mov	r8d, 1316				; 00000524H
	lea	rdx, OFFSET FLAT:$SG83188
	lea	rcx, OFFSET FLAT:$SG83189
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetTargetR:
; Line 1317
	lea	rax, QWORD PTR $T85439[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+48]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T85439[rsp]
	mov	rdi, QWORD PTR pTargetRect$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 1318
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
?GetTargetRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z ENDP	; CDrawImage::GetTargetRect
_TEXT	ENDS
PUBLIC	$T85447
PUBLIC	?SetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z	; CDrawImage::SetSourceRect
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$?SetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z DD 032401H
	DD	0700c6210H
	DD	0600bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z
_TEXT	SEGMENT
$T85447 = 32
this$ = 80
pSourceRect$ = 88
?SetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z PROC	; CDrawImage::SetSourceRect, COMDAT
; Line 1327
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rdi, rsp
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 1328
	cmp	QWORD PTR pSourceRect$[rsp], 0
	jne	SHORT $LN1@SetSourceR
	mov	r8d, 1328				; 00000530H
	lea	rdx, OFFSET FLAT:$SG83195
	lea	rcx, OFFSET FLAT:$SG83196
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetSourceR:
; Line 1329
	lea	rax, QWORD PTR $T85447[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR pSourceRect$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T85447[rsp]
	lea	rdi, QWORD PTR [rax+64]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 1330
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetStretchMode@CDrawImage@@IEAAXXZ	; CDrawImage::SetStretchMode
; Line 1331
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
?SetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z ENDP	; CDrawImage::SetSourceRect
_TEXT	ENDS
PUBLIC	$T85455
PUBLIC	?GetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z	; CDrawImage::GetSourceRect
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$?GetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z DD 032401H
	DD	0700c6210H
	DD	0600bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z
_TEXT	SEGMENT
$T85455 = 32
this$ = 80
pSourceRect$ = 88
?GetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z PROC	; CDrawImage::GetSourceRect, COMDAT
; Line 1337
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rdi, rsp
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 1338
	cmp	QWORD PTR pSourceRect$[rsp], 0
	jne	SHORT $LN1@GetSourceR
	mov	r8d, 1338				; 0000053aH
	lea	rdx, OFFSET FLAT:$SG83202
	lea	rcx, OFFSET FLAT:$SG83203
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetSourceR:
; Line 1339
	lea	rax, QWORD PTR $T85455[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+64]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T85455[rsp]
	mov	rdi, QWORD PTR pSourceRect$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 1340
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
?GetSourceRect@CDrawImage@@QEAAXPEAUtagRECT@@@Z ENDP	; CDrawImage::GetSourceRect
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetStretchMode@CDrawImage@@IEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?SetStretchMode@CDrawImage@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetStretchMode@CDrawImage@@IEAAXXZ DD 021e01H
	DD	07006120aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetStretchMode@CDrawImage@@IEAAXXZ
_TEXT	SEGMENT
SourceWidth$ = 0
SinkWidth$ = 4
SourceHeight$ = 8
SinkHeight$ = 12
this$ = 32
?SetStretchMode@CDrawImage@@IEAAXXZ PROC		; CDrawImage::SetStretchMode, COMDAT
; Line 1349
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+32]
; Line 1352
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+64]
	mov	eax, DWORD PTR [rax+72]
	sub	eax, ecx
	mov	DWORD PTR SourceWidth$[rsp], eax
; Line 1353
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+48]
	mov	eax, DWORD PTR [rax+56]
	sub	eax, ecx
	mov	DWORD PTR SinkWidth$[rsp], eax
; Line 1354
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+68]
	mov	eax, DWORD PTR [rax+76]
	sub	eax, ecx
	mov	DWORD PTR SourceHeight$[rsp], eax
; Line 1355
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+52]
	mov	eax, DWORD PTR [rax+60]
	sub	eax, ecx
	mov	DWORD PTR SinkHeight$[rsp], eax
; Line 1357
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+80], 1
; Line 1358
	mov	eax, DWORD PTR SinkWidth$[rsp]
	cmp	DWORD PTR SourceWidth$[rsp], eax
	jne	SHORT $LN2@SetStretch
; Line 1359
	mov	eax, DWORD PTR SinkHeight$[rsp]
	cmp	DWORD PTR SourceHeight$[rsp], eax
	jne	SHORT $LN1@SetStretch
; Line 1360
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+80], 0
$LN1@SetStretch:
$LN2@SetStretch:
; Line 1363
	add	rsp, 16
	pop	rdi
	ret	0
?SetStretchMode@CDrawImage@@IEAAXXZ ENDP		; CDrawImage::SetStretchMode
_TEXT	ENDS
PUBLIC	?NotifyAllocator@CDrawImage@@QEAAXH@Z		; CDrawImage::NotifyAllocator
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyAllocator@CDrawImage@@QEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?NotifyAllocator@CDrawImage@@QEAAXH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyAllocator@CDrawImage@@QEAAXH@Z DD 010a01H
	DD	0700aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NotifyAllocator@CDrawImage@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 16
bUsingImageAllocator$ = 24
?NotifyAllocator@CDrawImage@@QEAAXH@Z PROC		; CDrawImage::NotifyAllocator, COMDAT
; Line 1374
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1375
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR bUsingImageAllocator$[rsp]
	mov	DWORD PTR [rax+84], ecx
; Line 1376
	pop	rdi
	ret	0
?NotifyAllocator@CDrawImage@@QEAAXH@Z ENDP		; CDrawImage::NotifyAllocator
_TEXT	ENDS
PUBLIC	?UsingImageAllocator@CDrawImage@@QEAAHXZ	; CDrawImage::UsingImageAllocator
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UsingImageAllocator@CDrawImage@@QEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?UsingImageAllocator@CDrawImage@@QEAAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UsingImageAllocator@CDrawImage@@QEAAHXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?UsingImageAllocator@CDrawImage@@QEAAHXZ
_TEXT	SEGMENT
this$ = 16
?UsingImageAllocator@CDrawImage@@QEAAHXZ PROC		; CDrawImage::UsingImageAllocator, COMDAT
; Line 1382
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1383
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+84]
; Line 1384
	pop	rdi
	ret	0
?UsingImageAllocator@CDrawImage@@QEAAHXZ ENDP		; CDrawImage::UsingImageAllocator
_TEXT	ENDS
PUBLIC	?NotifyMediaType@CDrawImage@@QEAAXPEAVCMediaType@@@Z ; CDrawImage::NotifyMediaType
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyMediaType@CDrawImage@@QEAAXPEAVCMediaType@@@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?NotifyMediaType@CDrawImage@@QEAAXPEAVCMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyMediaType@CDrawImage@@QEAAXPEAVCMediaType@@@Z DD 010b01H
	DD	0700bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NotifyMediaType@CDrawImage@@QEAAXPEAVCMediaType@@@Z
_TEXT	SEGMENT
this$ = 16
pMediaType$ = 24
?NotifyMediaType@CDrawImage@@QEAAXPEAVCMediaType@@@Z PROC ; CDrawImage::NotifyMediaType, COMDAT
; Line 1392
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1393
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pMediaType$[rsp]
	mov	QWORD PTR [rax+88], rcx
; Line 1394
	pop	rdi
	ret	0
?NotifyMediaType@CDrawImage@@QEAAXPEAVCMediaType@@@Z ENDP ; CDrawImage::NotifyMediaType
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPaletteVersion@CDrawImage@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?GetPaletteVersion@CDrawImage@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPaletteVersion@CDrawImage@@QEAAJXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetPaletteVersion@CDrawImage@@QEAAJXZ
_TEXT	SEGMENT
this$ = 16
?GetPaletteVersion@CDrawImage@@QEAAJXZ PROC		; CDrawImage::GetPaletteVersion, COMDAT
; Line 1404
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1405
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+100]
; Line 1406
	pop	rdi
	ret	0
?GetPaletteVersion@CDrawImage@@QEAAJXZ ENDP		; CDrawImage::GetPaletteVersion
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ResetPaletteVersion@CDrawImage@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?ResetPaletteVersion@CDrawImage@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ResetPaletteVersion@CDrawImage@@QEAAXXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ResetPaletteVersion@CDrawImage@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?ResetPaletteVersion@CDrawImage@@QEAAXXZ PROC		; CDrawImage::ResetPaletteVersion, COMDAT
; Line 1412
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1413
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+100], 1
; Line 1414
	pop	rdi
	ret	0
?ResetPaletteVersion@CDrawImage@@QEAAXXZ ENDP		; CDrawImage::ResetPaletteVersion
_TEXT	ENDS
PUBLIC	?IncrementPaletteVersion@CDrawImage@@QEAAXXZ	; CDrawImage::IncrementPaletteVersion
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IncrementPaletteVersion@CDrawImage@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?IncrementPaletteVersion@CDrawImage@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IncrementPaletteVersion@CDrawImage@@QEAAXXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?IncrementPaletteVersion@CDrawImage@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?IncrementPaletteVersion@CDrawImage@@QEAAXXZ PROC	; CDrawImage::IncrementPaletteVersion, COMDAT
; Line 1420
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1421
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+100]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+100], eax
; Line 1422
	pop	rdi
	ret	0
?IncrementPaletteVersion@CDrawImage@@QEAAXXZ ENDP	; CDrawImage::IncrementPaletteVersion
_TEXT	ENDS
PUBLIC	??_7CImageAllocator@@6BIMemAllocatorCallbackTemp@@@ ; CImageAllocator::`vftable'
PUBLIC	??_7CImageAllocator@@6BCUnknown@@@		; CImageAllocator::`vftable'
PUBLIC	??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z ; CImageAllocator::CImageAllocator
PUBLIC	??_R4CImageAllocator@@6BCUnknown@@@		; CImageAllocator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImageAllocator@@@8			; CImageAllocator `RTTI Type Descriptor'
PUBLIC	??_R3CImageAllocator@@8				; CImageAllocator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImageAllocator@@8				; CImageAllocator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImageAllocator@@8		; CImageAllocator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CBaseAllocator@@8			; CBaseAllocator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBaseAllocator@@@8			; CBaseAllocator `RTTI Type Descriptor'
PUBLIC	??_R3CBaseAllocator@@8				; CBaseAllocator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseAllocator@@8				; CBaseAllocator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CUnknown@@8			; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCUnknown@@@8				; CUnknown `RTTI Type Descriptor'
PUBLIC	??_R3CUnknown@@8				; CUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CUnknown@@8				; CUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@INonDelegatingUnknown@@8		; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUINonDelegatingUnknown@@@8		; INonDelegatingUnknown `RTTI Type Descriptor'
PUBLIC	??_R3INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AVCBaseObject@@@8				; CBaseObject `RTTI Type Descriptor'
PUBLIC	??_R3CBaseObject@@8				; CBaseObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseObject@@8				; CBaseObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1CA@?0A@EA@IMemAllocatorCallbackTemp@@8	; IMemAllocatorCallbackTemp::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R0?AUIMemAllocatorCallbackTemp@@@8		; IMemAllocatorCallbackTemp `RTTI Type Descriptor'
PUBLIC	??_R3IMemAllocatorCallbackTemp@@8		; IMemAllocatorCallbackTemp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMemAllocatorCallbackTemp@@8		; IMemAllocatorCallbackTemp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IMemAllocatorCallbackTemp@@8	; IMemAllocatorCallbackTemp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IMemAllocator@@8			; IMemAllocator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIMemAllocator@@@8			; IMemAllocator `RTTI Type Descriptor'
PUBLIC	??_R3IMemAllocator@@8				; IMemAllocator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMemAllocator@@8				; IMemAllocator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1CA@?0A@EA@IMemAllocator@@8			; IMemAllocator::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R1CA@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R1CI@?0A@EA@CCritSec@@8			; CCritSec::`RTTI Base Class Descriptor at (40,-1,0,64)'
PUBLIC	??_R0?AVCCritSec@@@8				; CCritSec `RTTI Type Descriptor'
PUBLIC	??_R3CCritSec@@8				; CCritSec::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCritSec@@8				; CCritSec::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCritSec@@8			; CCritSec::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?NonDelegatingAddRef@CImageAllocator@@UEAAKXZ	; CImageAllocator::NonDelegatingAddRef
PUBLIC	?NonDelegatingRelease@CImageAllocator@@UEAAKXZ	; CImageAllocator::NonDelegatingRelease
PUBLIC	?Free@CImageAllocator@@MEAAXXZ			; CImageAllocator::Free
PUBLIC	?Alloc@CImageAllocator@@MEAAJXZ			; CImageAllocator::Alloc
PUBLIC	?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z ; CImageAllocator::CreateImageSample
PUBLIC	??_R4CImageAllocator@@6BIMemAllocatorCallbackTemp@@@ ; CImageAllocator::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CBaseAllocator::QueryInterface
PUBLIC	?AddRef@CBaseAllocator@@UEAAKXZ			; CBaseAllocator::AddRef
PUBLIC	?Release@CBaseAllocator@@UEAAKXZ		; CBaseAllocator::Release
PUBLIC	?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z ; CImageAllocator::SetProperties
EXTRN	??1CBaseAllocator@@UEAA@XZ:PROC			; CBaseAllocator::~CBaseAllocator
EXTRN	??0CBaseAllocator@@QEAA@PEA_WPEAUIUnknown@@PEAJHH@Z:PROC ; CBaseAllocator::CBaseAllocator
EXTRN	?NonDelegatingQueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z:PROC ; CBaseAllocator::NonDelegatingQueryInterface
EXTRN	??_ECImageAllocator@@UEAAPEAXI@Z:PROC		; CImageAllocator::`vector deleting destructor'
EXTRN	?GetProperties@CBaseAllocator@@UEAAJPEAU_AllocatorProperties@@@Z:PROC ; CBaseAllocator::GetProperties
EXTRN	?Commit@CBaseAllocator@@UEAAJXZ:PROC		; CBaseAllocator::Commit
EXTRN	?Decommit@CBaseAllocator@@UEAAJXZ:PROC		; CBaseAllocator::Decommit
EXTRN	?GetBuffer@CBaseAllocator@@UEAAJPEAPEAUIMediaSample@@PEA_J1K@Z:PROC ; CBaseAllocator::GetBuffer
EXTRN	?ReleaseBuffer@CBaseAllocator@@UEAAJPEAUIMediaSample@@@Z:PROC ; CBaseAllocator::ReleaseBuffer
EXTRN	?SetNotify@CBaseAllocator@@UEAAJPEAUIMemAllocatorNotifyCallbackTemp@@@Z:PROC ; CBaseAllocator::SetNotify
EXTRN	?GetFreeCount@CBaseAllocator@@UEAAJPEAJ@Z:PROC	; CBaseAllocator::GetFreeCount
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z DD imagerel $LN6
	DD	imagerel $LN6+220
	DD	imagerel $unwind$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z@4HA DD imagerel ?dtor$0@?0???0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z@4HA
	DD	imagerel ?dtor$0@?0???0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z DD imagerel ??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z
	DD	0ffffffffH
	DD	imagerel ??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z+94
	DD	00H
	DD	imagerel ??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z+209
	DD	0ffffffffH
xdata	ENDS
;	COMDAT ??_R4CImageAllocator@@6BIMemAllocatorCallbackTemp@@@
rdata$r	SEGMENT
??_R4CImageAllocator@@6BIMemAllocatorCallbackTemp@@@ DD 01H ; CImageAllocator::`RTTI Complete Object Locator'
	DD	020H
	DD	00H
	DD	imagerel ??_R0?AVCImageAllocator@@@8
	DD	imagerel ??_R3CImageAllocator@@8
	DD	imagerel ??_R4CImageAllocator@@6BIMemAllocatorCallbackTemp@@@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCritSec@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCritSec@@8 DD imagerel ??_R0?AVCCritSec@@@8 ; CCritSec::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CCritSec@@8
rdata$r	ENDS
;	COMDAT ??_R2CCritSec@@8
rdata$r	SEGMENT
??_R2CCritSec@@8 DD imagerel ??_R1A@?0A@EA@CCritSec@@8	; CCritSec::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CCritSec@@8
rdata$r	SEGMENT
??_R3CCritSec@@8 DD 00H					; CCritSec::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CCritSec@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCritSec@@@8
_DATA	SEGMENT
??_R0?AVCCritSec@@@8 DQ FLAT:??_7type_info@@6B@		; CCritSec `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCCritSec@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CI@?0A@EA@CCritSec@@8
rdata$r	SEGMENT
??_R1CI@?0A@EA@CCritSec@@8 DD imagerel ??_R0?AVCCritSec@@@8 ; CCritSec::`RTTI Base Class Descriptor at (40,-1,0,64)'
	DD	00H
	DD	028H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CCritSec@@8
rdata$r	ENDS
;	COMDAT ??_R1CA@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@IUnknown@@8 DD imagerel ??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	00H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1CA@?0A@EA@IMemAllocator@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@IMemAllocator@@8 DD imagerel ??_R0?AUIMemAllocator@@@8 ; IMemAllocator::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	01H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMemAllocator@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD imagerel ??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DQ FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD imagerel ??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IMemAllocator@@8
rdata$r	SEGMENT
??_R2IMemAllocator@@8 DD imagerel ??_R1A@?0A@EA@IMemAllocator@@8 ; IMemAllocator::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3IMemAllocator@@8
rdata$r	SEGMENT
??_R3IMemAllocator@@8 DD 00H				; IMemAllocator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IMemAllocator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMemAllocator@@@8
_DATA	SEGMENT
??_R0?AUIMemAllocator@@@8 DQ FLAT:??_7type_info@@6B@	; IMemAllocator `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIMemAllocator@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IMemAllocator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMemAllocator@@8 DD imagerel ??_R0?AUIMemAllocator@@@8 ; IMemAllocator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMemAllocator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IMemAllocatorCallbackTemp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMemAllocatorCallbackTemp@@8 DD imagerel ??_R0?AUIMemAllocatorCallbackTemp@@@8 ; IMemAllocatorCallbackTemp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMemAllocatorCallbackTemp@@8
rdata$r	ENDS
;	COMDAT ??_R2IMemAllocatorCallbackTemp@@8
rdata$r	SEGMENT
??_R2IMemAllocatorCallbackTemp@@8 DD imagerel ??_R1A@?0A@EA@IMemAllocatorCallbackTemp@@8 ; IMemAllocatorCallbackTemp::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IMemAllocator@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3IMemAllocatorCallbackTemp@@8
rdata$r	SEGMENT
??_R3IMemAllocatorCallbackTemp@@8 DD 00H		; IMemAllocatorCallbackTemp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2IMemAllocatorCallbackTemp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMemAllocatorCallbackTemp@@@8
_DATA	SEGMENT
??_R0?AUIMemAllocatorCallbackTemp@@@8 DQ FLAT:??_7type_info@@6B@ ; IMemAllocatorCallbackTemp `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIMemAllocatorCallbackTemp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CA@?0A@EA@IMemAllocatorCallbackTemp@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@IMemAllocatorCallbackTemp@@8 DD imagerel ??_R0?AUIMemAllocatorCallbackTemp@@@8 ; IMemAllocatorCallbackTemp::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	02H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMemAllocatorCallbackTemp@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseObject@@8 DD imagerel ??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseObject@@8
rdata$r	SEGMENT
??_R2CBaseObject@@8 DD imagerel ??_R1A@?0A@EA@CBaseObject@@8 ; CBaseObject::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CBaseObject@@8
rdata$r	SEGMENT
??_R3CBaseObject@@8 DD 00H				; CBaseObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseObject@@@8
_DATA	SEGMENT
??_R0?AVCBaseObject@@@8 DQ FLAT:??_7type_info@@6B@	; CBaseObject `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBaseObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R17?0A@EA@CBaseObject@@8 DD imagerel ??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R2INonDelegatingUnknown@@8 DD imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8 ; INonDelegatingUnknown::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R3INonDelegatingUnknown@@8 DD 00H			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUINonDelegatingUnknown@@@8
_DATA	SEGMENT
??_R0?AUINonDelegatingUnknown@@@8 DQ FLAT:??_7type_info@@6B@ ; INonDelegatingUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUINonDelegatingUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@INonDelegatingUnknown@@8 DD imagerel ??_R0?AUINonDelegatingUnknown@@@8 ; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CUnknown@@8
rdata$r	SEGMENT
??_R2CUnknown@@8 DD imagerel ??_R1A@?0A@EA@CUnknown@@8	; CUnknown::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	imagerel ??_R17?0A@EA@CBaseObject@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CUnknown@@8
rdata$r	SEGMENT
??_R3CUnknown@@8 DD 00H					; CUnknown::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCUnknown@@@8
_DATA	SEGMENT
??_R0?AVCUnknown@@@8 DQ FLAT:??_7type_info@@6B@		; CUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CUnknown@@8 DD imagerel ??_R0?AVCUnknown@@@8 ; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseAllocator@@8
rdata$r	SEGMENT
??_R2CBaseAllocator@@8 DD imagerel ??_R1A@?0A@EA@CBaseAllocator@@8 ; CBaseAllocator::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CUnknown@@8
	DD	imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	imagerel ??_R17?0A@EA@CBaseObject@@8
	DD	imagerel ??_R1CA@?0A@EA@IMemAllocatorCallbackTemp@@8
	DD	imagerel ??_R1CA@?0A@EA@IMemAllocator@@8
	DD	imagerel ??_R1CA@?0A@EA@IUnknown@@8
	DD	imagerel ??_R1CI@?0A@EA@CCritSec@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CBaseAllocator@@8
rdata$r	SEGMENT
??_R3CBaseAllocator@@8 DD 00H				; CBaseAllocator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	imagerel ??_R2CBaseAllocator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseAllocator@@@8
_DATA	SEGMENT
??_R0?AVCBaseAllocator@@@8 DQ FLAT:??_7type_info@@6B@	; CBaseAllocator `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBaseAllocator@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseAllocator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseAllocator@@8 DD imagerel ??_R0?AVCBaseAllocator@@@8 ; CBaseAllocator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBaseAllocator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CImageAllocator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CImageAllocator@@8 DD imagerel ??_R0?AVCImageAllocator@@@8 ; CImageAllocator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CImageAllocator@@8
rdata$r	ENDS
;	COMDAT ??_R2CImageAllocator@@8
rdata$r	SEGMENT
??_R2CImageAllocator@@8 DD imagerel ??_R1A@?0A@EA@CImageAllocator@@8 ; CImageAllocator::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CBaseAllocator@@8
	DD	imagerel ??_R1A@?0A@EA@CUnknown@@8
	DD	imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	imagerel ??_R17?0A@EA@CBaseObject@@8
	DD	imagerel ??_R1CA@?0A@EA@IMemAllocatorCallbackTemp@@8
	DD	imagerel ??_R1CA@?0A@EA@IMemAllocator@@8
	DD	imagerel ??_R1CA@?0A@EA@IUnknown@@8
	DD	imagerel ??_R1CI@?0A@EA@CCritSec@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CImageAllocator@@8
rdata$r	SEGMENT
??_R3CImageAllocator@@8 DD 00H				; CImageAllocator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	imagerel ??_R2CImageAllocator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImageAllocator@@@8
_DATA	SEGMENT
??_R0?AVCImageAllocator@@@8 DQ FLAT:??_7type_info@@6B@	; CImageAllocator `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCImageAllocator@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImageAllocator@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CImageAllocator@@6BCUnknown@@@ DD 01H		; CImageAllocator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCImageAllocator@@@8
	DD	imagerel ??_R3CImageAllocator@@8
	DD	imagerel ??_R4CImageAllocator@@6BCUnknown@@@
rdata$r	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z DD 023611H
	DD	070157219H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z@4HA
xdata	ENDS
;	COMDAT ??_7CImageAllocator@@6BIMemAllocatorCallbackTemp@@@
CONST	SEGMENT
??_7CImageAllocator@@6BIMemAllocatorCallbackTemp@@@ DQ FLAT:??_R4CImageAllocator@@6BIMemAllocatorCallbackTemp@@@ ; CImageAllocator::`vftable'
	DQ	FLAT:?QueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CBaseAllocator@@UEAAKXZ
	DQ	FLAT:?Release@CBaseAllocator@@UEAAKXZ
	DQ	FLAT:?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z
	DQ	FLAT:?GetProperties@CBaseAllocator@@UEAAJPEAU_AllocatorProperties@@@Z
	DQ	FLAT:?Commit@CBaseAllocator@@UEAAJXZ
	DQ	FLAT:?Decommit@CBaseAllocator@@UEAAJXZ
	DQ	FLAT:?GetBuffer@CBaseAllocator@@UEAAJPEAPEAUIMediaSample@@PEA_J1K@Z
	DQ	FLAT:?ReleaseBuffer@CBaseAllocator@@UEAAJPEAUIMediaSample@@@Z
	DQ	FLAT:?SetNotify@CBaseAllocator@@UEAAJPEAUIMemAllocatorNotifyCallbackTemp@@@Z
	DQ	FLAT:?GetFreeCount@CBaseAllocator@@UEAAJPEAJ@Z
CONST	ENDS
;	COMDAT ??_7CImageAllocator@@6BCUnknown@@@
CONST	SEGMENT
??_7CImageAllocator@@6BCUnknown@@@ DQ FLAT:??_R4CImageAllocator@@6BCUnknown@@@ ; CImageAllocator::`vftable'
	DQ	FLAT:?NonDelegatingQueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?NonDelegatingAddRef@CImageAllocator@@UEAAKXZ
	DQ	FLAT:?NonDelegatingRelease@CImageAllocator@@UEAAKXZ
	DQ	FLAT:??_ECImageAllocator@@UEAAPEAXI@Z
	DQ	FLAT:?Free@CImageAllocator@@MEAAXXZ
	DQ	FLAT:?Alloc@CImageAllocator@@MEAAJXZ
	DQ	FLAT:?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z
_TEXT	SEGMENT
$T85517 = 48
this$ = 80
pFilter$ = 88
pName$ = 96
phr$ = 104
??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z PROC ; CImageAllocator::CImageAllocator, COMDAT
; Line 1441
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
	mov	QWORD PTR $T85517[rsp], -2
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], 1
	mov	r9, QWORD PTR phr$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR pName$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0CBaseAllocator@@QEAA@PEA_WPEAUIUnknown@@PEAJHH@Z ; CBaseAllocator::CBaseAllocator
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CImageAllocator@@6BCUnknown@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CImageAllocator@@6BIMemAllocatorCallbackTemp@@@
	mov	QWORD PTR [rax+32], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pFilter$[rsp]
	mov	QWORD PTR [rax+176], rcx
; Line 1442
	cmp	QWORD PTR phr$[rsp], 0
	jne	SHORT $LN2@CImageAllo
	mov	r8d, 1442				; 000005a2H
	lea	rdx, OFFSET FLAT:$SG83240
	lea	rcx, OFFSET FLAT:$SG83241
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@CImageAllo:
; Line 1443
	cmp	QWORD PTR pFilter$[rsp], 0
	jne	SHORT $LN1@CImageAllo
	mov	r8d, 1443				; 000005a3H
	lea	rdx, OFFSET FLAT:$SG83243
	lea	rcx, OFFSET FLAT:$SG83244
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
	npad	1
$LN1@CImageAllo:
; Line 1444
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z ENDP ; CImageAllocator::CImageAllocator
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T85517 = 48
this$ = 80
pFilter$ = 88
pName$ = 96
phr$ = 104
?dtor$0@?0???0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z@4HA PROC ; `CImageAllocator::CImageAllocator'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1CBaseAllocator@@UEAA@XZ		; CBaseAllocator::~CBaseAllocator
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0CImageAllocator@@QEAA@PEAVCBaseFilter@@PEA_WPEAJ@Z@4HA ENDP ; `CImageAllocator::CImageAllocator'::`1'::dtor$0
text$x	ENDS
PUBLIC	?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ	; CUnknown::GetOwner
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\amfilter.h
pdata	SEGMENT
$pdata$?QueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?QueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?QueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
tv72 = 32
this$ = 64
riid$ = 72
ppv$ = 80
?QueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CBaseAllocator::QueryInterface, COMDAT
; Line 1467
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 32					; 00000020H
	mov	rcx, rax
	call	?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ ; CUnknown::GetOwner
	mov	QWORD PTR tv72[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR ppv$[rsp]
	mov	rdx, QWORD PTR riid$[rsp]
	mov	rcx, QWORD PTR tv72[rsp]
	call	QWORD PTR [rax]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?QueryInterface@CBaseAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CBaseAllocator::QueryInterface
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\combase.h
pdata	SEGMENT
$pdata$?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ
_TEXT	SEGMENT
this$ = 16
?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ PROC		; CUnknown::GetOwner, COMDAT
; Line 224
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 225
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
; Line 226
	pop	rdi
	ret	0
?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ ENDP		; CUnknown::GetOwner
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\amfilter.h
pdata	SEGMENT
$pdata$?AddRef@CBaseAllocator@@UEAAKXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?AddRef@CBaseAllocator@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRef@CBaseAllocator@@UEAAKXZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?AddRef@CBaseAllocator@@UEAAKXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?AddRef@CBaseAllocator@@UEAAKXZ PROC			; CBaseAllocator::AddRef, COMDAT
; Line 1467
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 32					; 00000020H
	mov	rcx, rax
	call	?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ ; CUnknown::GetOwner
	mov	QWORD PTR tv72[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv72[rsp]
	call	QWORD PTR [rax+8]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?AddRef@CBaseAllocator@@UEAAKXZ ENDP			; CBaseAllocator::AddRef
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@CBaseAllocator@@UEAAKXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?Release@CBaseAllocator@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@CBaseAllocator@@UEAAKXZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Release@CBaseAllocator@@UEAAKXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?Release@CBaseAllocator@@UEAAKXZ PROC			; CBaseAllocator::Release, COMDAT
; Line 1467
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 32					; 00000020H
	mov	rcx, rax
	call	?GetOwner@CUnknown@@QEBAPEAUIUnknown@@XZ ; CUnknown::GetOwner
	mov	QWORD PTR tv72[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv72[rsp]
	call	QWORD PTR [rax+16]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Release@CBaseAllocator@@UEAAKXZ ENDP			; CBaseAllocator::Release
_TEXT	ENDS
PUBLIC	??1CImageAllocator@@UEAA@XZ			; CImageAllocator::~CImageAllocator
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCImageAllocator@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??_GCImageAllocator@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCImageAllocator@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??_GCImageAllocator@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCImageAllocator@@UEAAPEAXI@Z PROC			; CImageAllocator::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??1CImageAllocator@@UEAA@XZ		; CImageAllocator::~CImageAllocator
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN1@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN1@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCImageAllocator@@UEAAPEAXI@Z ENDP			; CImageAllocator::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$??1CImageAllocator@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$??1CImageAllocator@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1CImageAllocator@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CImageAllocator@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CImageAllocator@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1CImageAllocator@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CImageAllocator@@UEAA@XZ DD imagerel ??1CImageAllocator@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1CImageAllocator@@UEAA@XZ+70
	DD	00H
	DD	imagerel ??1CImageAllocator@@UEAA@XZ+110
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1CImageAllocator@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CImageAllocator@@UEAA@XZ DD 022711H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1CImageAllocator@@UEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1CImageAllocator@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1CImageAllocator@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1CImageAllocator@@UEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1CImageAllocator@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1CImageAllocator@@UEAA@XZ@4HA
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CImageAllocator@@UEAA@XZ
_TEXT	SEGMENT
$T85575 = 32
this$ = 64
??1CImageAllocator@@UEAA@XZ PROC			; CImageAllocator::~CImageAllocator, COMDAT
; Line 1451
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	QWORD PTR $T85575[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CImageAllocator@@6BCUnknown@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CImageAllocator@@6BIMemAllocatorCallbackTemp@@@
	mov	QWORD PTR [rax+32], rcx
; Line 1452
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+148], 0
	je	SHORT $LN1@CImageAllo@2
	mov	r8d, 1452				; 000005acH
	lea	rdx, OFFSET FLAT:$SG83253
	lea	rcx, OFFSET FLAT:$SG83254
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
	npad	1
$LN1@CImageAllo@2:
; Line 1453
	mov	rcx, QWORD PTR this$[rsp]
	call	??1CBaseAllocator@@UEAA@XZ		; CBaseAllocator::~CBaseAllocator
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1CImageAllocator@@UEAA@XZ ENDP			; CImageAllocator::~CImageAllocator
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T85575 = 32
this$ = 64
?dtor$0@?0???1CImageAllocator@@UEAA@XZ@4HA PROC		; `CImageAllocator::~CImageAllocator'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1CBaseAllocator@@UEAA@XZ		; CBaseAllocator::~CBaseAllocator
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???1CImageAllocator@@UEAA@XZ@4HA ENDP		; `CImageAllocator::~CImageAllocator'::`1'::dtor$0
text$x	ENDS
PUBLIC	?RemoveHead@CSampleList@CBaseAllocator@@QEAAPEAVCMediaSample@@XZ ; CBaseAllocator::CSampleList::RemoveHead
PUBLIC	?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ	; CBaseAllocator::CSampleList::GetCount
EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp_DeleteObject:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@CImageAllocator@@MEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+364
	DD	imagerel $unwind$?Free@CImageAllocator@@MEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@CImageAllocator@@MEAAXXZ DD 021e01H
	DD	07006920aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Free@CImageAllocator@@MEAAXXZ
_TEXT	SEGMENT
pSample$ = 32
pDibData$ = 40
$T85593 = 48
$T85594 = 56
tv162 = 64
this$ = 96
?Free@CImageAllocator@@MEAAXXZ PROC			; CImageAllocator::Free, COMDAT
; Line 1463
$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
; Line 1464
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 96					; 00000060H
	mov	rcx, rax
	call	?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ ; CBaseAllocator::CSampleList::GetCount
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+128], eax
	je	SHORT $LN6@Free
	mov	r8d, 1464				; 000005b8H
	lea	rdx, OFFSET FLAT:$SG83259
	lea	rcx, OFFSET FLAT:$SG83260
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@Free:
; Line 1465
	call	QWORD PTR __imp_GdiFlush
	test	eax, eax
	jne	SHORT $LN5@Free
	mov	r8d, 1465				; 000005b9H
	lea	rdx, OFFSET FLAT:$SG83262
	lea	rcx, OFFSET FLAT:$SG83263
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@Free:
$LN4@Free:
; Line 1469
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 96					; 00000060H
	mov	rcx, rax
	call	?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ ; CBaseAllocator::CSampleList::GetCount
	test	eax, eax
	je	$LN3@Free
; Line 1470
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 96					; 00000060H
	mov	rcx, rax
	call	?RemoveHead@CSampleList@CBaseAllocator@@QEAAPEAVCMediaSample@@XZ ; CBaseAllocator::CSampleList::RemoveHead
	mov	QWORD PTR pSample$[rsp], rax
; Line 1471
	mov	rcx, QWORD PTR pSample$[rsp]
	call	?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ ; CImageSample::GetDIBData
	mov	QWORD PTR pDibData$[rsp], rax
; Line 1472
	mov	rax, QWORD PTR pDibData$[rsp]
	mov	rcx, QWORD PTR [rax+112]
	call	QWORD PTR __imp_DeleteObject
	test	eax, eax
	jne	SHORT $LN2@Free
	mov	r8d, 1472				; 000005c0H
	lea	rdx, OFFSET FLAT:$SG83271
	lea	rcx, OFFSET FLAT:$SG83272
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@Free:
; Line 1473
	mov	rax, QWORD PTR pDibData$[rsp]
	mov	rcx, QWORD PTR [rax+120]
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN1@Free
	mov	r8d, 1473				; 000005c1H
	lea	rdx, OFFSET FLAT:$SG83274
	lea	rcx, OFFSET FLAT:$SG83275
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Free:
; Line 1474
	mov	rax, QWORD PTR pSample$[rsp]
	mov	QWORD PTR $T85594[rsp], rax
	mov	rax, QWORD PTR $T85594[rsp]
	mov	QWORD PTR $T85593[rsp], rax
	cmp	QWORD PTR $T85593[rsp], 0
	je	SHORT $LN9@Free
	mov	rax, QWORD PTR $T85593[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T85593[rsp]
	call	QWORD PTR [rax+168]
	mov	QWORD PTR tv162[rsp], rax
	jmp	SHORT $LN10@Free
$LN9@Free:
	mov	QWORD PTR tv162[rsp], 0
$LN10@Free:
; Line 1475
	jmp	$LN4@Free
$LN3@Free:
; Line 1477
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+128], 0
; Line 1478
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?Free@CImageAllocator@@MEAAXXZ ENDP			; CImageAllocator::Free
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\amfilter.h
pdata	SEGMENT
$pdata$?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ
_TEXT	SEGMENT
this$ = 16
?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ PROC	; CBaseAllocator::CSampleList::GetCount, COMDAT
; Line 1365
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+8]
	pop	rdi
	ret	0
?GetCount@CSampleList@CBaseAllocator@@QEBAHXZ ENDP	; CBaseAllocator::CSampleList::GetCount
_TEXT	ENDS
PUBLIC	?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z ; CBaseAllocator::NextSample
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveHead@CSampleList@CBaseAllocator@@QEAAPEAVCMediaSample@@XZ DD imagerel $LN4
	DD	imagerel $LN4+104
	DD	imagerel $unwind$?RemoveHead@CSampleList@CBaseAllocator@@QEAAPEAVCMediaSample@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveHead@CSampleList@CBaseAllocator@@QEAAPEAVCMediaSample@@XZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?RemoveHead@CSampleList@CBaseAllocator@@QEAAPEAVCMediaSample@@XZ
_TEXT	SEGMENT
pSample$ = 32
this$ = 64
?RemoveHead@CSampleList@CBaseAllocator@@QEAAPEAVCMediaSample@@XZ PROC ; CBaseAllocator::CSampleList::RemoveHead, COMDAT
; Line 1374
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 1375
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pSample$[rsp], rax
; Line 1376
	cmp	QWORD PTR pSample$[rsp], 0
	je	SHORT $LN1@RemoveHead
; Line 1377
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z ; CBaseAllocator::NextSample
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
; Line 1378
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+8]
	dec	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+8], eax
$LN1@RemoveHead:
; Line 1380
	mov	rax, QWORD PTR pSample$[rsp]
; Line 1381
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?RemoveHead@CSampleList@CBaseAllocator@@QEAAPEAVCMediaSample@@XZ ENDP ; CBaseAllocator::CSampleList::RemoveHead
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z
_TEXT	SEGMENT
pSample$ = 16
?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z PROC ; CBaseAllocator::NextSample, COMDAT
; Line 1348
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1349
	mov	rax, QWORD PTR pSample$[rsp]
	add	rax, 40					; 00000028H
; Line 1350
	pop	rdi
	ret	0
?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z ENDP ; CBaseAllocator::NextSample
_TEXT	ENDS
PUBLIC	?CheckSizes@CImageAllocator@@IEAAJPEAU_AllocatorProperties@@@Z ; CImageAllocator::CheckSizes
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?CheckSizes@CImageAllocator@@IEAAJPEAU_AllocatorProperties@@@Z DD imagerel $LN6
	DD	imagerel $LN6+146
	DD	imagerel $unwind$?CheckSizes@CImageAllocator@@IEAAJPEAU_AllocatorProperties@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckSizes@CImageAllocator@@IEAAJPEAU_AllocatorProperties@@@Z DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CheckSizes@CImageAllocator@@IEAAJPEAU_AllocatorProperties@@@Z
_TEXT	SEGMENT
pVideoInfo$ = 32
this$ = 64
pRequest$ = 72
?CheckSizes@CImageAllocator@@IEAAJPEAU_AllocatorProperties@@@Z PROC ; CImageAllocator::CheckSizes, COMDAT
; Line 1484
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 1487
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+184], 0
	jne	SHORT $LN3@CheckSizes
; Line 1488
	mov	eax, -2147220983			; ffffffff80040209H
	jmp	SHORT $LN4@CheckSizes
$LN3@CheckSizes:
; Line 1496
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+184]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	mov	QWORD PTR pVideoInfo$[rsp], rax
; Line 1503
	mov	rax, QWORD PTR pRequest$[rsp]
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	mov	ecx, DWORD PTR [rcx+68]
	cmp	DWORD PTR [rax+4], ecx
	jae	SHORT $LN2@CheckSizes
; Line 1504
	mov	eax, -2147024809			; ffffffff80070057H
	jmp	SHORT $LN4@CheckSizes
$LN2@CheckSizes:
; Line 1509
	mov	rax, QWORD PTR pRequest$[rsp]
	cmp	DWORD PTR [rax+12], 0
	jle	SHORT $LN1@CheckSizes
; Line 1510
	mov	eax, -2147024809			; ffffffff80070057H
	jmp	SHORT $LN4@CheckSizes
$LN1@CheckSizes:
; Line 1513
	mov	rax, QWORD PTR pRequest$[rsp]
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	mov	ecx, DWORD PTR [rcx+68]
	mov	DWORD PTR [rax+4], ecx
; Line 1514
	xor	eax, eax
$LN4@CheckSizes:
; Line 1515
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CheckSizes@CImageAllocator@@IEAAJPEAU_AllocatorProperties@@@Z ENDP ; CImageAllocator::CheckSizes
_TEXT	ENDS
PUBLIC	$T85633
PUBLIC	__$ArrayPad$
EXTRN	?SetProperties@CBaseAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z:PROC ; CBaseAllocator::SetProperties
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+217
	DD	imagerel $unwind$?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z DD 033b19H
	DD	07011e215H
	DD	06010H
	DD	imagerel __GSHandlerCheck
	DD	060H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z$rtcName$0 DB 041H ; CImageAllocator::SetProperties
	DB	064H
	DB	06aH
	DB	075H
	DB	073H
	DB	074H
	DB	065H
	DB	064H
	DB	00H
	ORG $+7
?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z$rtcVarDesc DD 028H ; CImageAllocator::SetProperties
	DD	010H
	DQ	FLAT:?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z$rtcName$0
	ORG $+48
?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z$rtcFrameData DD 01H ; CImageAllocator::SetProperties
	DD	00H
	DQ	FLAT:?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z
_TEXT	SEGMENT
Adjusted$ = 40
hr$ = 68
$T85633 = 80
__$ArrayPad$ = 96
this$ = 144
pRequest$ = 152
pActual$ = 160
?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z PROC ; CImageAllocator::SetProperties, COMDAT
; Line 1525
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rdi, rsp
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1526
	lea	rax, QWORD PTR $T85633[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR pRequest$[rsp]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR Adjusted$[rsp]
	lea	rcx, QWORD PTR $T85633[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 1530
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 32					; 00000020H
	lea	rdx, QWORD PTR Adjusted$[rsp]
	mov	rcx, rax
	call	?CheckSizes@CImageAllocator@@IEAAJPEAU_AllocatorProperties@@@Z ; CImageAllocator::CheckSizes
	mov	DWORD PTR hr$[rsp], eax
; Line 1531
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@SetPropert
; Line 1532
	mov	eax, DWORD PTR hr$[rsp]
	jmp	SHORT $LN2@SetPropert
$LN1@SetPropert:
; Line 1534
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR pActual$[rsp]
	lea	rdx, QWORD PTR Adjusted$[rsp]
	mov	rcx, rax
	call	?SetProperties@CBaseAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z ; CBaseAllocator::SetProperties
$LN2@SetPropert:
; Line 1535
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
?SetProperties@CImageAllocator@@UEAAJPEAU_AllocatorProperties@@0@Z ENDP ; CImageAllocator::SetProperties
_TEXT	ENDS
PUBLIC	?Add@CSampleList@CBaseAllocator@@QEAAXPEAVCMediaSample@@@Z ; CBaseAllocator::CSampleList::Add
PUBLIC	?SetDIBData@CImageSample@@QEAAXPEAUtagDIBDATA@@@Z ; CImageSample::SetDIBData
PUBLIC	?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z ; CImageAllocator::CreateDIB
PUBLIC	__$ArrayPad$
EXTRN	?Alloc@CBaseAllocator@@MEAAJXZ:PROC		; CBaseAllocator::Alloc
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Alloc@CImageAllocator@@MEAAJXZ DD imagerel $LN12
	DD	imagerel $LN12+547
	DD	imagerel $unwind$?Alloc@CImageAllocator@@MEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Alloc@CImageAllocator@@MEAAJXZ DD 033619H
	DD	01e010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Alloc@CImageAllocator@@MEAAJXZ$rtcName$0 DB 044H	; CImageAllocator::Alloc
	DB	069H
	DB	062H
	DB	044H
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+8
?Alloc@CImageAllocator@@MEAAJXZ$rtcVarDesc DD 040H	; CImageAllocator::Alloc
	DD	088H
	DQ	FLAT:?Alloc@CImageAllocator@@MEAAJXZ$rtcName$0
	ORG $+48
?Alloc@CImageAllocator@@MEAAJXZ$rtcFrameData DD 01H	; CImageAllocator::Alloc
	DD	00H
	DQ	FLAT:?Alloc@CImageAllocator@@MEAAJXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?Alloc@CImageAllocator@@MEAAJXZ
_TEXT	SEGMENT
pSample$ = 32
DibData$ = 64
hr$ = 212
hr$83318 = 216
__$ArrayPad$ = 232
this$ = 256
?Alloc@CImageAllocator@@MEAAJXZ PROC			; CImageAllocator::Alloc, COMDAT
; Line 1547
$LN12:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 240				; 000000f0H
	mov	rdi, rsp
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+256]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1548
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+184], 0
	jne	SHORT $LN9@Alloc
	mov	r8d, 1548				; 0000060cH
	lea	rdx, OFFSET FLAT:$SG83305
	lea	rcx, OFFSET FLAT:$SG83306
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN9@Alloc:
; Line 1554
	mov	rcx, QWORD PTR this$[rsp]
	call	?Alloc@CBaseAllocator@@MEAAJXZ		; CBaseAllocator::Alloc
	mov	DWORD PTR hr$[rsp], eax
; Line 1555
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN8@Alloc
; Line 1556
	mov	eax, DWORD PTR hr$[rsp]
	jmp	$LN10@Alloc
$LN8@Alloc:
; Line 1564
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+128], 0
	je	SHORT $LN7@Alloc
	mov	r8d, 1564				; 0000061cH
	lea	rdx, OFFSET FLAT:$SG83313
	lea	rcx, OFFSET FLAT:$SG83314
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN7@Alloc:
$LN6@Alloc:
; Line 1565
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+124]
	cmp	DWORD PTR [rax+128], ecx
	jge	$LN5@Alloc
; Line 1569
	lea	r8, QWORD PTR DibData$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+132]
	mov	rcx, QWORD PTR this$[rsp]
	call	?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z ; CImageAllocator::CreateDIB
	mov	DWORD PTR hr$83318[rsp], eax
; Line 1570
	cmp	DWORD PTR hr$83318[rsp], 0
	jge	SHORT $LN4@Alloc
; Line 1571
	mov	eax, DWORD PTR hr$83318[rsp]
	jmp	$LN10@Alloc
$LN4@Alloc:
; Line 1576
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+132]
	mov	rdx, QWORD PTR DibData$[rsp+128]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+48]
	mov	QWORD PTR pSample$[rsp], rax
; Line 1577
	cmp	QWORD PTR pSample$[rsp], 0
	jne	SHORT $LN3@Alloc
; Line 1578
	mov	rcx, QWORD PTR DibData$[rsp+112]
	call	QWORD PTR __imp_DeleteObject
	test	eax, eax
	jne	SHORT $LN2@Alloc
	mov	r8d, 1578				; 0000062aH
	lea	rdx, OFFSET FLAT:$SG83323
	lea	rcx, OFFSET FLAT:$SG83324
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@Alloc:
; Line 1579
	mov	rcx, QWORD PTR DibData$[rsp+120]
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN1@Alloc
	mov	r8d, 1579				; 0000062bH
	lea	rdx, OFFSET FLAT:$SG83326
	lea	rcx, OFFSET FLAT:$SG83327
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Alloc:
; Line 1580
	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	SHORT $LN10@Alloc
$LN3@Alloc:
; Line 1585
	lea	rdx, QWORD PTR DibData$[rsp]
	mov	rcx, QWORD PTR pSample$[rsp]
	call	?SetDIBData@CImageSample@@QEAAXPEAUtagDIBDATA@@@Z ; CImageSample::SetDIBData
; Line 1586
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 96					; 00000060H
	mov	rdx, QWORD PTR pSample$[rsp]
	mov	rcx, rax
	call	?Add@CSampleList@CBaseAllocator@@QEAAXPEAVCMediaSample@@@Z ; CBaseAllocator::CSampleList::Add
; Line 1587
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+128]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+128], eax
; Line 1588
	jmp	$LN6@Alloc
$LN5@Alloc:
; Line 1589
	xor	eax, eax
$LN10@Alloc:
; Line 1590
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Alloc@CImageAllocator@@MEAAJXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
?Alloc@CImageAllocator@@MEAAJXZ ENDP			; CImageAllocator::Alloc
_TEXT	ENDS
PUBLIC	??_C@_1CA@MBBAJLBI@?$AAp?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ ; `string'
PUBLIC	??_C@_1II@PJBFDIOC@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@ ; `string'
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\amfilter.h
pdata	SEGMENT
$pdata$?Add@CSampleList@CBaseAllocator@@QEAAXPEAVCMediaSample@@@Z DD imagerel $LN4
	DD	imagerel $LN4+126
	DD	imagerel $unwind$?Add@CSampleList@CBaseAllocator@@QEAAXPEAVCMediaSample@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Add@CSampleList@CBaseAllocator@@QEAAXPEAVCMediaSample@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_1CA@MBBAJLBI@?$AAp?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@MBBAJLBI@?$AAp?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ DB 'p'
	DB	00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'L', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1II@PJBFDIOC@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@
CONST	SEGMENT
??_C@_1II@PJBFDIOC@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'W'
	DB	00H, 'P', 00H, 'F', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'K', 00H, 'i', 00H, 't', 00H, ' ', 00H, '-'
	DB	00H, ' ', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, '\', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '\', 00H, 'B', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'e', 00H, 's', 00H, '\', 00H, 'a', 00H, 'm', 00H
	DB	'f', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '.'
	DB	00H, 'h', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?Add@CSampleList@CBaseAllocator@@QEAAXPEAVCMediaSample@@@Z
_TEXT	SEGMENT
this$ = 48
pSample$ = 56
?Add@CSampleList@CBaseAllocator@@QEAAXPEAVCMediaSample@@@Z PROC ; CBaseAllocator::CSampleList::Add, COMDAT
; Line 1367
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1368
	cmp	QWORD PTR pSample$[rsp], 0
	jne	SHORT $LN1@Add
	mov	r8d, 1368				; 00000558H
	lea	rdx, OFFSET FLAT:??_C@_1II@PJBFDIOC@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@
	lea	rcx, OFFSET FLAT:??_C@_1CA@MBBAJLBI@?$AAp?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Add:
; Line 1369
	mov	rcx, QWORD PTR pSample$[rsp]
	call	?NextSample@CBaseAllocator@@CAAEAPEAVCMediaSample@@PEAV2@@Z ; CBaseAllocator::NextSample
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
; Line 1370
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pSample$[rsp]
	mov	QWORD PTR [rax], rcx
; Line 1371
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+8]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+8], eax
; Line 1372
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Add@CSampleList@CBaseAllocator@@QEAAXPEAVCMediaSample@@@Z ENDP ; CBaseAllocator::CSampleList::Add
_TEXT	ENDS
PUBLIC	??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z ; CImageSample::CImageSample
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z DD imagerel $LN10
	DD	imagerel $LN10+304
	DD	imagerel $unwind$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z@4HA DD imagerel ?dtor$0@?0??CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z DD imagerel ?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z
	DD	0ffffffffH
	DD	imagerel ?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z+78
	DD	00H
	DD	imagerel ?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z+166
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z DD 033711H
	DD	0120117H
	DD	07010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z$rtcName$0 DB 068H ; CImageAllocator::CreateImageSample
	DB	072H
	DB	00H
	ORG $+13
?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z$rtcVarDesc DD 034H ; CImageAllocator::CreateImageSample
	DD	04H
	DQ	FLAT:?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z$rtcName$0
	ORG $+48
?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z$rtcFrameData DD 01H ; CImageAllocator::CreateImageSample
	DD	00H
	DQ	FLAT:?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z$rtcVarDesc
$cppxdata$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z
	DD	070H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z
_TEXT	SEGMENT
hr$ = 52
pSample$ = 72
$T85664 = 80
$T85665 = 88
$T85668 = 96
$T85669 = 104
$T85677 = 112
tv80 = 120
tv92 = 128
this$ = 160
pData$ = 168
Length$ = 176
?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z PROC ; CImageAllocator::CreateImageSample, COMDAT
; Line 1598
$LN10:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H
	mov	rdi, rsp
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]
	mov	QWORD PTR $T85677[rsp], -2
; Line 1599
	mov	DWORD PTR hr$[rsp], 0
; Line 1608
	mov	ecx, 240				; 000000f0H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T85665[rsp], rax
	cmp	QWORD PTR $T85665[rsp], 0
	je	SHORT $LN5@CreateImag
	mov	eax, DWORD PTR Length$[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	rax, QWORD PTR pData$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR hr$[rsp]
	lea	r8, OFFSET FLAT:$SG83344
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T85665[rsp]
	call	??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z ; CImageSample::CImageSample
	mov	QWORD PTR tv80[rsp], rax
	jmp	SHORT $LN6@CreateImag
$LN5@CreateImag:
	mov	QWORD PTR tv80[rsp], 0
$LN6@CreateImag:
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR $T85664[rsp], rax
	mov	rax, QWORD PTR $T85664[rsp]
	mov	QWORD PTR pSample$[rsp], rax
; Line 1610
	cmp	QWORD PTR pSample$[rsp], 0
	je	SHORT $LN1@CreateImag
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN2@CreateImag
$LN1@CreateImag:
; Line 1611
	mov	rax, QWORD PTR pSample$[rsp]
	mov	QWORD PTR $T85669[rsp], rax
	mov	rax, QWORD PTR $T85669[rsp]
	mov	QWORD PTR $T85668[rsp], rax
	cmp	QWORD PTR $T85668[rsp], 0
	je	SHORT $LN7@CreateImag
	mov	rax, QWORD PTR $T85668[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T85668[rsp]
	call	QWORD PTR [rax+168]
	mov	QWORD PTR tv92[rsp], rax
	jmp	SHORT $LN8@CreateImag
$LN7@CreateImag:
	mov	QWORD PTR tv92[rsp], 0
$LN8@CreateImag:
; Line 1612
	xor	eax, eax
	jmp	SHORT $LN3@CreateImag
$LN2@CreateImag:
; Line 1614
	mov	rax, QWORD PTR pSample$[rsp]
$LN3@CreateImag:
; Line 1615
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
?CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z ENDP ; CImageAllocator::CreateImageSample
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
hr$ = 52
pSample$ = 72
$T85664 = 80
$T85665 = 88
$T85668 = 96
$T85669 = 104
$T85677 = 112
tv80 = 120
tv92 = 128
this$ = 160
pData$ = 168
Length$ = 176
?dtor$0@?0??CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z@4HA PROC ; `CImageAllocator::CreateImageSample'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T85665[rbp]
	call	??3@YAXPEAX@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??CreateImageSample@CImageAllocator@@MEAAPEAVCImageSample@@PEAEJ@Z@4HA ENDP ; `CImageAllocator::CreateImageSample'::`1'::dtor$0
text$x	ENDS
EXTRN	__imp_GetObjectW:PROC
EXTRN	__imp_CreateDIBSection:PROC
EXTRN	__imp_CreateFileMappingW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z DD imagerel $LN8
	DD	imagerel $LN8+444
	DD	imagerel $unwind$?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z DD 022a01H
	DD	0700fd213H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z$rtcName$0 DB 070H ; CImageAllocator::CreateDIB
	DB	042H
	DB	061H
	DB	073H
	DB	065H
	DB	00H
	ORG $+10
?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z$rtcVarDesc DD 048H ; CImageAllocator::CreateDIB
	DD	08H
	DQ	FLAT:?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z$rtcName$0
	ORG $+48
?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z$rtcFrameData DD 01H ; CImageAllocator::CreateDIB
	DD	00H
	DQ	FLAT:?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z
_TEXT	SEGMENT
pbmi$ = 48
pBase$ = 72
hMapping$ = 88
hBitmap$ = 96
Error$83361 = 104
Error$83379 = 108
this$ = 128
InSize$ = 136
DibData$ = 144
?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z PROC ; CImageAllocator::CreateDIB, COMDAT
; Line 1623
$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rdi, rsp
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
; Line 1636
	mov	QWORD PTR [rsp+40], 0
	mov	eax, DWORD PTR InSize$[rsp]
	mov	DWORD PTR [rsp+32], eax
	xor	r9d, r9d
	mov	r8d, 4
	xor	edx, edx
	mov	rcx, -1
	call	QWORD PTR __imp_CreateFileMappingW
	mov	QWORD PTR hMapping$[rsp], rax
; Line 1637
	cmp	QWORD PTR hMapping$[rsp], 0
	jne	SHORT $LN5@CreateDIB
; Line 1638
	call	QWORD PTR __imp_GetLastError
	mov	DWORD PTR Error$83361[rsp], eax
; Line 1639
	mov	eax, DWORD PTR Error$83361[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@CreateDIB
$LN5@CreateDIB:
; Line 1647
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+184]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	add	rax, 48					; 00000030H
	mov	QWORD PTR pbmi$[rsp], rax
; Line 1648
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+184], 0
	jne	SHORT $LN4@CreateDIB
; Line 1649
	mov	r8d, 1649				; 00000671H
	lea	rdx, OFFSET FLAT:$SG83369
	lea	rcx, OFFSET FLAT:$SG83370
	call	?DbgBreakPoint@@YAXPEB_W0H@Z		; DbgBreakPoint
$LN4@CreateDIB:
; Line 1657
	mov	DWORD PTR [rsp+40], 0
	mov	rax, QWORD PTR hMapping$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR pBase$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR pbmi$[rsp]
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateDIBSection
	mov	QWORD PTR hBitmap$[rsp], rax
; Line 1659
	cmp	QWORD PTR hBitmap$[rsp], 0
	je	SHORT $LN2@CreateDIB
	cmp	QWORD PTR pBase$[rsp], 0
	jne	SHORT $LN3@CreateDIB
$LN2@CreateDIB:
; Line 1660
	mov	rcx, QWORD PTR hMapping$[rsp]
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN1@CreateDIB
	mov	r8d, 1660				; 0000067cH
	lea	rdx, OFFSET FLAT:$SG83377
	lea	rcx, OFFSET FLAT:$SG83378
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CreateDIB:
; Line 1661
	call	QWORD PTR __imp_GetLastError
	mov	DWORD PTR Error$83379[rsp], eax
; Line 1662
	mov	eax, DWORD PTR Error$83379[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	SHORT $LN6@CreateDIB
$LN3@CreateDIB:
; Line 1667
	mov	rax, QWORD PTR DibData$[rsp]
	mov	rcx, QWORD PTR hBitmap$[rsp]
	mov	QWORD PTR [rax+112], rcx
; Line 1668
	mov	rax, QWORD PTR DibData$[rsp]
	mov	rcx, QWORD PTR hMapping$[rsp]
	mov	QWORD PTR [rax+120], rcx
; Line 1669
	mov	rax, QWORD PTR DibData$[rsp]
	mov	rcx, QWORD PTR pBase$[rsp]
	mov	QWORD PTR [rax+128], rcx
; Line 1670
	mov	rax, QWORD PTR DibData$[rsp]
	mov	DWORD PTR [rax], 1
; Line 1671
	mov	rax, QWORD PTR DibData$[rsp]
	add	rax, 8
	mov	r8, rax
	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR hBitmap$[rsp]
	call	QWORD PTR __imp_GetObjectW
; Line 1673
	xor	eax, eax
$LN6@CreateDIB:
; Line 1674
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?CreateDIB@CImageAllocator@@IEAAJJAEAUtagDIBDATA@@@Z ENDP ; CImageAllocator::CreateDIB
_TEXT	ENDS
PUBLIC	?NotifyMediaType@CImageAllocator@@QEAAXPEAVCMediaType@@@Z ; CImageAllocator::NotifyMediaType
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyMediaType@CImageAllocator@@QEAAXPEAVCMediaType@@@Z DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?NotifyMediaType@CImageAllocator@@QEAAXPEAVCMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyMediaType@CImageAllocator@@QEAAXPEAVCMediaType@@@Z DD 010b01H
	DD	0700bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NotifyMediaType@CImageAllocator@@QEAAXPEAVCMediaType@@@Z
_TEXT	SEGMENT
this$ = 16
pMediaType$ = 24
?NotifyMediaType@CImageAllocator@@QEAAXPEAVCMediaType@@@Z PROC ; CImageAllocator::NotifyMediaType, COMDAT
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1681
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pMediaType$[rsp]
	mov	QWORD PTR [rax+184], rcx
; Line 1682
	pop	rdi
	ret	0
?NotifyMediaType@CImageAllocator@@QEAAXPEAVCMediaType@@@Z ENDP ; CImageAllocator::NotifyMediaType
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NonDelegatingAddRef@CImageAllocator@@UEAAKXZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?NonDelegatingAddRef@CImageAllocator@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingAddRef@CImageAllocator@@UEAAKXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NonDelegatingAddRef@CImageAllocator@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?NonDelegatingAddRef@CImageAllocator@@UEAAKXZ PROC	; CImageAllocator::NonDelegatingAddRef, COMDAT
; Line 1688
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1689
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+176]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+176]
	add	rcx, 32					; 00000020H
	mov	rax, QWORD PTR [rax+32]
	call	QWORD PTR [rax+8]
; Line 1690
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?NonDelegatingAddRef@CImageAllocator@@UEAAKXZ ENDP	; CImageAllocator::NonDelegatingAddRef
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NonDelegatingRelease@CImageAllocator@@UEAAKXZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?NonDelegatingRelease@CImageAllocator@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingRelease@CImageAllocator@@UEAAKXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NonDelegatingRelease@CImageAllocator@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?NonDelegatingRelease@CImageAllocator@@UEAAKXZ PROC	; CImageAllocator::NonDelegatingRelease, COMDAT
; Line 1696
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1697
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+176]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+176]
	add	rcx, 32					; 00000020H
	mov	rax, QWORD PTR [rax+32]
	call	QWORD PTR [rax+16]
; Line 1698
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?NonDelegatingRelease@CImageAllocator@@UEAAKXZ ENDP	; CImageAllocator::NonDelegatingRelease
_TEXT	ENDS
PUBLIC	??_7CImageSample@@6B@				; CImageSample::`vftable'
PUBLIC	??_R4CImageSample@@6B@				; CImageSample::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImageSample@@@8			; CImageSample `RTTI Type Descriptor'
PUBLIC	??_R3CImageSample@@8				; CImageSample::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImageSample@@8				; CImageSample::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImageSample@@8			; CImageSample::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CMediaSample@@8			; CMediaSample::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCMediaSample@@@8			; CMediaSample `RTTI Type Descriptor'
PUBLIC	??_R3CMediaSample@@8				; CMediaSample::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMediaSample@@8				; CMediaSample::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IMediaSample2@@8			; IMediaSample2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIMediaSample2@@@8			; IMediaSample2 `RTTI Type Descriptor'
PUBLIC	??_R3IMediaSample2@@8				; IMediaSample2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMediaSample2@@8				; IMediaSample2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IMediaSample@@8			; IMediaSample::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIMediaSample@@@8			; IMediaSample `RTTI Type Descriptor'
PUBLIC	??_R3IMediaSample@@8				; IMediaSample::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMediaSample@@8				; IMediaSample::`RTTI Base Class Array'
EXTRN	??1CMediaSample@@UEAA@XZ:PROC			; CMediaSample::~CMediaSample
EXTRN	??0CMediaSample@@QEAA@PEA_WPEAVCBaseAllocator@@PEAJPEAEJ@Z:PROC ; CMediaSample::CMediaSample
EXTRN	?QueryInterface@CMediaSample@@UEAAJAEBU_GUID@@PEAPEAX@Z:PROC ; CMediaSample::QueryInterface
EXTRN	?AddRef@CMediaSample@@UEAAKXZ:PROC		; CMediaSample::AddRef
EXTRN	?Release@CMediaSample@@UEAAKXZ:PROC		; CMediaSample::Release
EXTRN	?GetPointer@CMediaSample@@UEAAJPEAPEAE@Z:PROC	; CMediaSample::GetPointer
EXTRN	?GetSize@CMediaSample@@UEAAJXZ:PROC		; CMediaSample::GetSize
EXTRN	?GetTime@CMediaSample@@UEAAJPEA_J0@Z:PROC	; CMediaSample::GetTime
EXTRN	?SetTime@CMediaSample@@UEAAJPEA_J0@Z:PROC	; CMediaSample::SetTime
EXTRN	?IsSyncPoint@CMediaSample@@UEAAJXZ:PROC		; CMediaSample::IsSyncPoint
EXTRN	?SetSyncPoint@CMediaSample@@UEAAJH@Z:PROC	; CMediaSample::SetSyncPoint
EXTRN	?IsPreroll@CMediaSample@@UEAAJXZ:PROC		; CMediaSample::IsPreroll
EXTRN	?SetPreroll@CMediaSample@@UEAAJH@Z:PROC		; CMediaSample::SetPreroll
EXTRN	?GetActualDataLength@CMediaSample@@UEAAJXZ:PROC	; CMediaSample::GetActualDataLength
EXTRN	?SetActualDataLength@CMediaSample@@UEAAJJ@Z:PROC ; CMediaSample::SetActualDataLength
EXTRN	?GetMediaType@CMediaSample@@UEAAJPEAPEAU_AMMediaType@@@Z:PROC ; CMediaSample::GetMediaType
EXTRN	?SetMediaType@CMediaSample@@UEAAJPEAU_AMMediaType@@@Z:PROC ; CMediaSample::SetMediaType
EXTRN	?IsDiscontinuity@CMediaSample@@UEAAJXZ:PROC	; CMediaSample::IsDiscontinuity
EXTRN	?SetDiscontinuity@CMediaSample@@UEAAJH@Z:PROC	; CMediaSample::SetDiscontinuity
EXTRN	?GetMediaTime@CMediaSample@@UEAAJPEA_J0@Z:PROC	; CMediaSample::GetMediaTime
EXTRN	?SetMediaTime@CMediaSample@@UEAAJPEA_J0@Z:PROC	; CMediaSample::SetMediaTime
EXTRN	?GetProperties@CMediaSample@@UEAAJKPEAE@Z:PROC	; CMediaSample::GetProperties
EXTRN	?SetProperties@CMediaSample@@UEAAJKPEBE@Z:PROC	; CMediaSample::SetProperties
EXTRN	??_ECImageSample@@UEAAPEAXI@Z:PROC		; CImageSample::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z DD imagerel $LN6
	DD	imagerel $LN6+206
	DD	imagerel $unwind$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z@4HA DD imagerel ?dtor$0@?0???0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z@4HA
	DD	imagerel ?dtor$0@?0???0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z DD imagerel ??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z
	DD	0ffffffffH
	DD	imagerel ??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z+98
	DD	00H
	DD	imagerel ??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z+195
	DD	0ffffffffH
xdata	ENDS
;	COMDAT ??_R2IMediaSample@@8
rdata$r	SEGMENT
??_R2IMediaSample@@8 DD imagerel ??_R1A@?0A@EA@IMediaSample@@8 ; IMediaSample::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3IMediaSample@@8
rdata$r	SEGMENT
??_R3IMediaSample@@8 DD 00H				; IMediaSample::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IMediaSample@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMediaSample@@@8
_DATA	SEGMENT
??_R0?AUIMediaSample@@@8 DQ FLAT:??_7type_info@@6B@	; IMediaSample `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIMediaSample@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IMediaSample@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMediaSample@@8 DD imagerel ??_R0?AUIMediaSample@@@8 ; IMediaSample::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMediaSample@@8
rdata$r	ENDS
;	COMDAT ??_R2IMediaSample2@@8
rdata$r	SEGMENT
??_R2IMediaSample2@@8 DD imagerel ??_R1A@?0A@EA@IMediaSample2@@8 ; IMediaSample2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IMediaSample@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3IMediaSample2@@8
rdata$r	SEGMENT
??_R3IMediaSample2@@8 DD 00H				; IMediaSample2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2IMediaSample2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMediaSample2@@@8
_DATA	SEGMENT
??_R0?AUIMediaSample2@@@8 DQ FLAT:??_7type_info@@6B@	; IMediaSample2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIMediaSample2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IMediaSample2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMediaSample2@@8 DD imagerel ??_R0?AUIMediaSample2@@@8 ; IMediaSample2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMediaSample2@@8
rdata$r	ENDS
;	COMDAT ??_R2CMediaSample@@8
rdata$r	SEGMENT
??_R2CMediaSample@@8 DD imagerel ??_R1A@?0A@EA@CMediaSample@@8 ; CMediaSample::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IMediaSample2@@8
	DD	imagerel ??_R1A@?0A@EA@IMediaSample@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CMediaSample@@8
rdata$r	SEGMENT
??_R3CMediaSample@@8 DD 00H				; CMediaSample::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2CMediaSample@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMediaSample@@@8
_DATA	SEGMENT
??_R0?AVCMediaSample@@@8 DQ FLAT:??_7type_info@@6B@	; CMediaSample `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCMediaSample@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CMediaSample@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMediaSample@@8 DD imagerel ??_R0?AVCMediaSample@@@8 ; CMediaSample::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CMediaSample@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CImageSample@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CImageSample@@8 DD imagerel ??_R0?AVCImageSample@@@8 ; CImageSample::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CImageSample@@8
rdata$r	ENDS
;	COMDAT ??_R2CImageSample@@8
rdata$r	SEGMENT
??_R2CImageSample@@8 DD imagerel ??_R1A@?0A@EA@CImageSample@@8 ; CImageSample::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CMediaSample@@8
	DD	imagerel ??_R1A@?0A@EA@IMediaSample2@@8
	DD	imagerel ??_R1A@?0A@EA@IMediaSample@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CImageSample@@8
rdata$r	SEGMENT
??_R3CImageSample@@8 DD 00H				; CImageSample::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2CImageSample@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImageSample@@@8
_DATA	SEGMENT
??_R0?AVCImageSample@@@8 DQ FLAT:??_7type_info@@6B@	; CImageSample `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCImageSample@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImageSample@@6B@
rdata$r	SEGMENT
??_R4CImageSample@@6B@ DD 01H				; CImageSample::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCImageSample@@@8
	DD	imagerel ??_R3CImageSample@@8
	DD	imagerel ??_R4CImageSample@@6B@
rdata$r	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z DD 023611H
	DD	070157219H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z@4HA
xdata	ENDS
;	COMDAT ??_7CImageSample@@6B@
CONST	SEGMENT
??_7CImageSample@@6B@ DQ FLAT:??_R4CImageSample@@6B@	; CImageSample::`vftable'
	DQ	FLAT:?QueryInterface@CMediaSample@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CMediaSample@@UEAAKXZ
	DQ	FLAT:?Release@CMediaSample@@UEAAKXZ
	DQ	FLAT:?GetPointer@CMediaSample@@UEAAJPEAPEAE@Z
	DQ	FLAT:?GetSize@CMediaSample@@UEAAJXZ
	DQ	FLAT:?GetTime@CMediaSample@@UEAAJPEA_J0@Z
	DQ	FLAT:?SetTime@CMediaSample@@UEAAJPEA_J0@Z
	DQ	FLAT:?IsSyncPoint@CMediaSample@@UEAAJXZ
	DQ	FLAT:?SetSyncPoint@CMediaSample@@UEAAJH@Z
	DQ	FLAT:?IsPreroll@CMediaSample@@UEAAJXZ
	DQ	FLAT:?SetPreroll@CMediaSample@@UEAAJH@Z
	DQ	FLAT:?GetActualDataLength@CMediaSample@@UEAAJXZ
	DQ	FLAT:?SetActualDataLength@CMediaSample@@UEAAJJ@Z
	DQ	FLAT:?GetMediaType@CMediaSample@@UEAAJPEAPEAU_AMMediaType@@@Z
	DQ	FLAT:?SetMediaType@CMediaSample@@UEAAJPEAU_AMMediaType@@@Z
	DQ	FLAT:?IsDiscontinuity@CMediaSample@@UEAAJXZ
	DQ	FLAT:?SetDiscontinuity@CMediaSample@@UEAAJH@Z
	DQ	FLAT:?GetMediaTime@CMediaSample@@UEAAJPEA_J0@Z
	DQ	FLAT:?SetMediaTime@CMediaSample@@UEAAJPEA_J0@Z
	DQ	FLAT:?GetProperties@CMediaSample@@UEAAJKPEAE@Z
	DQ	FLAT:?SetProperties@CMediaSample@@UEAAJKPEBE@Z
	DQ	FLAT:??_ECImageSample@@UEAAPEAXI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z
_TEXT	SEGMENT
$T85735 = 48
this$ = 80
pAllocator$ = 88
pName$ = 96
phr$ = 104
pBuffer$ = 112
length$ = 120
??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z PROC ; CImageSample::CImageSample, COMDAT
; Line 1724
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
	mov	QWORD PTR $T85735[rsp], -2
	mov	eax, DWORD PTR length$[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	rax, QWORD PTR pBuffer$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR phr$[rsp]
	mov	r8, QWORD PTR pAllocator$[rsp]
	mov	rdx, QWORD PTR pName$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0CMediaSample@@QEAA@PEA_WPEAVCBaseAllocator@@PEAJPEAEJ@Z ; CMediaSample::CMediaSample
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CImageSample@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+232], 0
; Line 1725
	cmp	QWORD PTR pAllocator$[rsp], 0
	jne	SHORT $LN2@CImageSamp
	mov	r8d, 1725				; 000006bdH
	lea	rdx, OFFSET FLAT:$SG83405
	lea	rcx, OFFSET FLAT:$SG83406
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@CImageSamp:
; Line 1726
	cmp	QWORD PTR pBuffer$[rsp], 0
	jne	SHORT $LN1@CImageSamp
	mov	r8d, 1726				; 000006beH
	lea	rdx, OFFSET FLAT:$SG83408
	lea	rcx, OFFSET FLAT:$SG83409
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
	npad	1
$LN1@CImageSamp:
; Line 1727
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z ENDP ; CImageSample::CImageSample
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T85735 = 48
this$ = 80
pAllocator$ = 88
pName$ = 96
phr$ = 104
pBuffer$ = 112
length$ = 120
?dtor$0@?0???0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z@4HA PROC ; `CImageSample::CImageSample'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1CMediaSample@@UEAA@XZ		; CMediaSample::~CMediaSample
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0CImageSample@@QEAA@PEAVCBaseAllocator@@PEA_WPEAJPEAEJ@Z@4HA ENDP ; `CImageSample::CImageSample'::`1'::dtor$0
text$x	ENDS
PUBLIC	??1CImageSample@@UEAA@XZ			; CImageSample::~CImageSample
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCImageSample@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??_GCImageSample@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCImageSample@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??_GCImageSample@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCImageSample@@UEAAPEAXI@Z PROC			; CImageSample::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??1CImageSample@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN1@scalar@2
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN1@scalar@2:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCImageSample@@UEAAPEAXI@Z ENDP			; CImageSample::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CImageSample@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+46
	DD	imagerel $unwind$??1CImageSample@@UEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CImageSample@@UEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CImageSample@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CImageSample@@UEAA@XZ PROC				; CImageSample::~CImageSample, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??1CMediaSample@@UEAA@XZ		; CMediaSample::~CMediaSample
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CImageSample@@UEAA@XZ ENDP				; CImageSample::~CImageSample
_TEXT	ENDS
PUBLIC	$T85771
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetDIBData@CImageSample@@QEAAXPEAUtagDIBDATA@@@Z DD imagerel $LN4
	DD	imagerel $LN4+156
	DD	imagerel $unwind$?SetDIBData@CImageSample@@QEAAXPEAUtagDIBDATA@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetDIBData@CImageSample@@QEAAXPEAUtagDIBDATA@@@Z DD 042a01H
	DD	0170113H
	DD	0600b700cH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetDIBData@CImageSample@@QEAAXPEAUtagDIBDATA@@@Z
_TEXT	SEGMENT
$T85771 = 32
this$ = 208
pDibData$ = 216
?SetDIBData@CImageSample@@QEAAXPEAUtagDIBDATA@@@Z PROC	; CImageSample::SetDIBData, COMDAT
; Line 1733
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 184				; 000000b8H
	mov	rdi, rsp
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
; Line 1734
	cmp	QWORD PTR pDibData$[rsp], 0
	jne	SHORT $LN1@SetDIBData
	mov	r8d, 1734				; 000006c6H
	lea	rdx, OFFSET FLAT:$SG83421
	lea	rcx, OFFSET FLAT:$SG83422
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetDIBData:
; Line 1735
	lea	rax, QWORD PTR $T85771[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR pDibData$[rsp]
	mov	ecx, 136				; 00000088H
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T85771[rsp]
	lea	rdi, QWORD PTR [rax+96]
	mov	rsi, rcx
	mov	ecx, 136				; 00000088H
	rep movsb
; Line 1736
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+232], 1
; Line 1737
	add	rsp, 184				; 000000b8H
	pop	rdi
	pop	rsi
	ret	0
?SetDIBData@CImageSample@@QEAAXPEAUtagDIBDATA@@@Z ENDP	; CImageSample::SetDIBData
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ
_TEXT	SEGMENT
this$ = 48
?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ PROC	; CImageSample::GetDIBData, COMDAT
; Line 1743
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1744
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+232], 1
	je	SHORT $LN1@GetDIBData
	mov	r8d, 1744				; 000006d0H
	lea	rdx, OFFSET FLAT:$SG83427
	lea	rcx, OFFSET FLAT:$SG83428
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetDIBData:
; Line 1745
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 96					; 00000060H
; Line 1746
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetDIBData@CImageSample@@QEAAPEAUtagDIBDATA@@XZ ENDP	; CImageSample::GetDIBData
_TEXT	ENDS
PUBLIC	??_7CImagePalette@@6B@				; CImagePalette::`vftable'
PUBLIC	??0CImagePalette@@QEAA@PEAVCBaseFilter@@PEAVCBaseWindow@@PEAVCDrawImage@@@Z ; CImagePalette::CImagePalette
PUBLIC	??_R4CImagePalette@@6B@				; CImagePalette::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImagePalette@@@8			; CImagePalette `RTTI Type Descriptor'
PUBLIC	??_R3CImagePalette@@8				; CImagePalette::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImagePalette@@8				; CImagePalette::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImagePalette@@8			; CImagePalette::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_ECImagePalette@@UEAAPEAXI@Z:PROC		; CImagePalette::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CImagePalette@@QEAA@PEAVCBaseFilter@@PEAVCBaseWindow@@PEAVCDrawImage@@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0CImagePalette@@QEAA@PEAVCBaseFilter@@PEAVCBaseWindow@@PEAVCDrawImage@@@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@CImagePalette@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CImagePalette@@8 DD imagerel ??_R0?AVCImagePalette@@@8 ; CImagePalette::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CImagePalette@@8
rdata$r	ENDS
;	COMDAT ??_R2CImagePalette@@8
rdata$r	SEGMENT
??_R2CImagePalette@@8 DD imagerel ??_R1A@?0A@EA@CImagePalette@@8 ; CImagePalette::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CImagePalette@@8
rdata$r	SEGMENT
??_R3CImagePalette@@8 DD 00H				; CImagePalette::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CImagePalette@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImagePalette@@@8
_DATA	SEGMENT
??_R0?AVCImagePalette@@@8 DQ FLAT:??_7type_info@@6B@	; CImagePalette `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCImagePalette@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImagePalette@@6B@
rdata$r	SEGMENT
??_R4CImagePalette@@6B@ DD 01H				; CImagePalette::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCImagePalette@@@8
	DD	imagerel ??_R3CImagePalette@@8
	DD	imagerel ??_R4CImagePalette@@6B@
rdata$r	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CImagePalette@@QEAA@PEAVCBaseFilter@@PEAVCBaseWindow@@PEAVCDrawImage@@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT ??_7CImagePalette@@6B@
CONST	SEGMENT
??_7CImagePalette@@6B@ DQ FLAT:??_R4CImagePalette@@6B@	; CImagePalette::`vftable'
	DQ	FLAT:??_ECImagePalette@@UEAAPEAXI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CImagePalette@@QEAA@PEAVCBaseFilter@@PEAVCBaseWindow@@PEAVCDrawImage@@@Z
_TEXT	SEGMENT
this$ = 48
pBaseFilter$ = 56
pBaseWindow$ = 64
pDrawImage$ = 72
??0CImagePalette@@QEAA@PEAVCBaseFilter@@PEAVCBaseWindow@@PEAVCDrawImage@@@Z PROC ; CImagePalette::CImagePalette, COMDAT
; Line 1765
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CImagePalette@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pBaseWindow$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pBaseFilter$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR pDrawImage$[rsp]
	mov	QWORD PTR [rax+24], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0
; Line 1766
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN1@CImagePale
	mov	r8d, 1766				; 000006e6H
	lea	rdx, OFFSET FLAT:$SG83436
	lea	rcx, OFFSET FLAT:$SG83437
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CImagePale:
; Line 1767
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CImagePalette@@QEAA@PEAVCBaseFilter@@PEAVCBaseWindow@@PEAVCDrawImage@@@Z ENDP ; CImagePalette::CImagePalette
_TEXT	ENDS
PUBLIC	??1CImagePalette@@UEAA@XZ			; CImagePalette::~CImagePalette
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCImagePalette@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??_GCImagePalette@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCImagePalette@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??_GCImagePalette@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCImagePalette@@UEAAPEAXI@Z PROC			; CImagePalette::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??1CImagePalette@@UEAA@XZ		; CImagePalette::~CImagePalette
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN1@scalar@3
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN1@scalar@3:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCImagePalette@@UEAAPEAXI@Z ENDP			; CImagePalette::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CImagePalette@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+88
	DD	imagerel $unwind$??1CImagePalette@@UEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CImagePalette@@UEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CImagePalette@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CImagePalette@@UEAA@XZ PROC				; CImagePalette::~CImagePalette, COMDAT
; Line 1774
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7CImagePalette@@6B@
	mov	QWORD PTR [rax], rcx
; Line 1775
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 0
	je	SHORT $LN1@CImagePale@2
	mov	r8d, 1775				; 000006efH
	lea	rdx, OFFSET FLAT:$SG83446
	lea	rcx, OFFSET FLAT:$SG83447
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CImagePale@2:
; Line 1776
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CImagePalette@@UEAA@XZ ENDP				; CImagePalette::~CImagePalette
_TEXT	ENDS
PUBLIC	?ShouldUpdate@CImagePalette@@QEAAHPEBUtagVIDEOINFOHEADER@@0@Z ; CImagePalette::ShouldUpdate
EXTRN	memcmp:PROC
EXTRN	GetBitmapPalette:PROC
EXTRN	ContainsPalette:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ShouldUpdate@CImagePalette@@QEAAHPEBUtagVIDEOINFOHEADER@@0@Z DD imagerel $LN11
	DD	imagerel $LN11+241
	DD	imagerel $unwind$?ShouldUpdate@CImagePalette@@QEAAHPEBUtagVIDEOINFOHEADER@@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ShouldUpdate@CImagePalette@@QEAAHPEBUtagVIDEOINFOHEADER@@0@Z DD 022801H
	DD	070107214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ShouldUpdate@CImagePalette@@QEAAHPEBUtagVIDEOINFOHEADER@@0@Z
_TEXT	SEGMENT
VideoEntries$ = 32
tv87 = 40
tv89 = 48
this$ = 80
pNewInfo$ = 88
pOldInfo$ = 96
?ShouldUpdate@CImagePalette@@QEAAHPEBUtagVIDEOINFOHEADER@@0@Z PROC ; CImagePalette::ShouldUpdate, COMDAT
; Line 1790
$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 1793
	cmp	QWORD PTR pOldInfo$[rsp], 0
	jne	SHORT $LN8@ShouldUpda
; Line 1794
	mov	eax, 1
	jmp	$LN9@ShouldUpda
$LN8@ShouldUpda:
; Line 1799
	mov	rcx, QWORD PTR pNewInfo$[rsp]
	call	ContainsPalette
	test	eax, eax
	jne	SHORT $LN7@ShouldUpda
; Line 1800
	mov	rcx, QWORD PTR pOldInfo$[rsp]
	call	ContainsPalette
	test	eax, eax
	jne	SHORT $LN6@ShouldUpda
; Line 1801
	xor	eax, eax
	jmp	$LN9@ShouldUpda
$LN6@ShouldUpda:
$LN7@ShouldUpda:
; Line 1807
	mov	rax, QWORD PTR pNewInfo$[rsp]
	mov	eax, DWORD PTR [rax+80]
	mov	DWORD PTR VideoEntries$[rsp], eax
; Line 1808
	mov	rcx, QWORD PTR pNewInfo$[rsp]
	call	ContainsPalette
	cmp	eax, 1
	jne	SHORT $LN5@ShouldUpda
; Line 1809
	mov	rcx, QWORD PTR pOldInfo$[rsp]
	call	ContainsPalette
	cmp	eax, 1
	jne	SHORT $LN4@ShouldUpda
; Line 1810
	mov	rax, QWORD PTR pOldInfo$[rsp]
	mov	ecx, DWORD PTR VideoEntries$[rsp]
	cmp	DWORD PTR [rax+80], ecx
	jne	SHORT $LN3@ShouldUpda
; Line 1811
	mov	rax, QWORD PTR pOldInfo$[rsp]
	cmp	DWORD PTR [rax+80], 0
	jbe	SHORT $LN2@ShouldUpda
; Line 1814
	mov	eax, DWORD PTR VideoEntries$[rsp]
	shl	rax, 2
	mov	QWORD PTR tv87[rsp], rax
	mov	rcx, QWORD PTR pOldInfo$[rsp]
	call	GetBitmapPalette
	mov	QWORD PTR tv89[rsp], rax
	mov	rcx, QWORD PTR pNewInfo$[rsp]
	call	GetBitmapPalette
	mov	rcx, QWORD PTR tv87[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv89[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	memcmp
	test	eax, eax
	jne	SHORT $LN1@ShouldUpda
; Line 1816
	xor	eax, eax
	jmp	SHORT $LN9@ShouldUpda
$LN1@ShouldUpda:
$LN2@ShouldUpda:
$LN3@ShouldUpda:
$LN4@ShouldUpda:
$LN5@ShouldUpda:
; Line 1818
	mov	eax, 1
$LN9@ShouldUpda:
; Line 1819
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?ShouldUpdate@CImagePalette@@QEAAHPEBUtagVIDEOINFOHEADER@@0@Z ENDP ; CImagePalette::ShouldUpdate
_TEXT	ENDS
PUBLIC	?MakePalette@CImagePalette@@SAPEAUHPALETTE__@@PEBUtagVIDEOINFOHEADER@@PEAD@Z ; CImagePalette::MakePalette
PUBLIC	?RemovePalette@CImagePalette@@QEAAJXZ		; CImagePalette::RemovePalette
PUBLIC	?PreparePalette@CImagePalette@@QEAAJPEBVCMediaType@@0PEAD@Z ; CImagePalette::PreparePalette
EXTRN	?NotifyEvent@CBaseFilter@@QEAAJJ_J0@Z:PROC	; CBaseFilter::NotifyEvent
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PreparePalette@CImagePalette@@QEAAJPEBVCMediaType@@0PEAD@Z DD imagerel $LN11
	DD	imagerel $LN11+459
	DD	imagerel $unwind$?PreparePalette@CImagePalette@@QEAAJPEBVCMediaType@@0PEAD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PreparePalette@CImagePalette@@QEAAJPEBVCMediaType@@0PEAD@Z DD 022d01H
	DD	070155219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?PreparePalette@CImagePalette@@QEAAJPEBVCMediaType@@0PEAD@Z
_TEXT	SEGMENT
pNewInfo$ = 32
pOldInfo$ = 40
this$ = 64
pmtNew$ = 72
pmtOld$ = 80
szDevice$ = 88
?PreparePalette@CImagePalette@@QEAAJPEBVCMediaType@@0PEAD@Z PROC ; CImagePalette::PreparePalette, COMDAT
; Line 1834
$LN11:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 1835
	mov	rcx, QWORD PTR pmtNew$[rsp]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	mov	QWORD PTR pNewInfo$[rsp], rax
; Line 1836
	mov	rcx, QWORD PTR pmtOld$[rsp]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	mov	QWORD PTR pOldInfo$[rsp], rax
; Line 1837
	cmp	QWORD PTR pNewInfo$[rsp], 0
	jne	SHORT $LN8@PreparePal
	mov	r8d, 1837				; 0000072dH
	lea	rdx, OFFSET FLAT:$SG83476
	lea	rcx, OFFSET FLAT:$SG83477
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN8@PreparePal:
; Line 1844
	mov	r8, QWORD PTR pOldInfo$[rsp]
	mov	rdx, QWORD PTR pNewInfo$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?ShouldUpdate@CImagePalette@@QEAAHPEBUtagVIDEOINFOHEADER@@0@Z ; CImagePalette::ShouldUpdate
	test	eax, eax
	jne	SHORT $LN7@PreparePal
; Line 1845
	lea	r8, OFFSET FLAT:$SG83479
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 1846
	mov	eax, 1
	jmp	$LN9@PreparePal
$LN7@PreparePal:
; Line 1854
	mov	rcx, QWORD PTR this$[rsp]
	call	?RemovePalette@CImagePalette@@QEAAJXZ	; CImagePalette::RemovePalette
; Line 1855
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 9
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	?NotifyEvent@CBaseFilter@@QEAAJJ_J0@Z	; CBaseFilter::NotifyEvent
; Line 1859
	mov	rcx, QWORD PTR pNewInfo$[rsp]
	call	ContainsPalette
	test	eax, eax
	jne	SHORT $LN6@PreparePal
; Line 1860
	lea	r8, OFFSET FLAT:$SG83482
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 1861
	mov	eax, 1
	jmp	$LN9@PreparePal
$LN6@PreparePal:
; Line 1864
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN5@PreparePal
; Line 1865
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?LockPaletteLock@CBaseWindow@@QEAAXXZ	; CBaseWindow::LockPaletteLock
$LN5@PreparePal:
; Line 1873
	lea	r8, OFFSET FLAT:$SG83485
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 1874
	mov	rdx, QWORD PTR szDevice$[rsp]
	mov	rcx, QWORD PTR pNewInfo$[rsp]
	call	?MakePalette@CImagePalette@@SAPEAUHPALETTE__@@PEBUtagVIDEOINFOHEADER@@PEAD@Z ; CImagePalette::MakePalette
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+32], rax
; Line 1875
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 0
	jne	SHORT $LN4@PreparePal
	mov	r8d, 1875				; 00000753H
	lea	rdx, OFFSET FLAT:$SG83487
	lea	rcx, OFFSET FLAT:$SG83488
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@PreparePal:
; Line 1877
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@PreparePal
; Line 1878
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?UnlockPaletteLock@CBaseWindow@@QEAAXXZ	; CBaseWindow::UnlockPaletteLock
$LN3@PreparePal:
; Line 1885
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@PreparePal
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+32]
	call	QWORD PTR [rax+88]
$LN2@PreparePal:
; Line 1891
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN1@PreparePal
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	?IncrementPaletteVersion@CDrawImage@@QEAAXXZ ; CDrawImage::IncrementPaletteVersion
$LN1@PreparePal:
; Line 1892
	xor	eax, eax
$LN9@PreparePal:
; Line 1893
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?PreparePalette@CImagePalette@@QEAAJPEBVCMediaType@@0PEAD@Z ENDP ; CImagePalette::PreparePalette
_TEXT	ENDS
PUBLIC	?FormatLength@CMediaType@@QEBAKXZ		; CMediaType::FormatLength
PUBLIC	?CopyPalette@CImagePalette@@QEAAJPEBVCMediaType@@PEAV2@@Z ; CImagePalette::CopyPalette
EXTRN	memcpy:PROC
EXTRN	?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z:PROC ; CMediaType::ReallocFormatBuffer
EXTRN	GetBitmapFormatSize:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CopyPalette@CImagePalette@@QEAAJPEBVCMediaType@@PEAV2@@Z DD imagerel $LN12
	DD	imagerel $LN12+617
	DD	imagerel $unwind$?CopyPalette@CImagePalette@@QEAAJPEBVCMediaType@@PEAV2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CopyPalette@CImagePalette@@QEAAJPEBVCMediaType@@PEAV2@@Z DD 022801H
	DD	07010b214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CopyPalette@CImagePalette@@QEAAJPEBVCMediaType@@PEAV2@@Z
_TEXT	SEGMENT
pDestInfo$ = 32
pSrcInfo$ = 40
PaletteEntries$ = 48
Maximum$83509 = 52
BitmapSize$ = 56
tv74 = 60
tv200 = 64
tv146 = 72
tv172 = 80
this$ = 112
pSrc$ = 120
pDest$ = 128
?CopyPalette@CImagePalette@@QEAAJPEBVCMediaType@@PEAV2@@Z PROC ; CImagePalette::CopyPalette, COMDAT
; Line 1903
$LN12:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
; Line 1906
	mov	rcx, QWORD PTR pDest$[rsp]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	mov	QWORD PTR pDestInfo$[rsp], rax
; Line 1907
	mov	rax, QWORD PTR pDestInfo$[rsp]
	mov	DWORD PTR [rax+80], 0
; Line 1908
	mov	rax, QWORD PTR pDestInfo$[rsp]
	mov	DWORD PTR [rax+84], 0
; Line 1912
	mov	rax, QWORD PTR pDestInfo$[rsp]
	movzx	eax, WORD PTR [rax+62]
	cmp	eax, 8
	jg	SHORT $LN10@CopyPalett
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN11@CopyPalett
$LN10@CopyPalett:
	mov	DWORD PTR tv74[rsp], 0
$LN11@CopyPalett:
	cmp	DWORD PTR tv74[rsp], 0
	jne	SHORT $LN7@CopyPalett
; Line 1913
	lea	r8, OFFSET FLAT:$SG83500
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 1914
	mov	eax, 1
	jmp	$LN8@CopyPalett
$LN7@CopyPalett:
; Line 1919
	mov	rcx, QWORD PTR pSrc$[rsp]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	mov	QWORD PTR pSrcInfo$[rsp], rax
; Line 1920
	mov	rcx, QWORD PTR pSrcInfo$[rsp]
	call	ContainsPalette
	test	eax, eax
	jne	SHORT $LN6@CopyPalett
; Line 1921
	lea	r8, OFFSET FLAT:$SG83505
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 1922
	mov	eax, 1
	jmp	$LN8@CopyPalett
$LN6@CopyPalett:
; Line 1927
	mov	rax, QWORD PTR pSrcInfo$[rsp]
	mov	eax, DWORD PTR [rax+80]
	mov	DWORD PTR PaletteEntries$[rsp], eax
; Line 1928
	cmp	DWORD PTR PaletteEntries$[rsp], 0
	jne	SHORT $LN5@CopyPalett
; Line 1929
	mov	rax, QWORD PTR pSrcInfo$[rsp]
	movzx	eax, WORD PTR [rax+62]
	mov	ecx, 1
	mov	DWORD PTR tv200[rsp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv200[rsp]
	shl	eax, cl
	mov	DWORD PTR Maximum$83509[rsp], eax
; Line 1930
	mov	r9d, DWORD PTR Maximum$83509[rsp]
	lea	r8, OFFSET FLAT:$SG83510
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 1931
	mov	eax, DWORD PTR Maximum$83509[rsp]
	mov	DWORD PTR PaletteEntries$[rsp], eax
$LN5@CopyPalett:
; Line 1936
	mov	rax, QWORD PTR pSrcInfo$[rsp]
	cmp	DWORD PTR [rax+80], 256			; 00000100H
	jbe	SHORT $LN4@CopyPalett
	mov	r8d, 1936				; 00000790H
	lea	rdx, OFFSET FLAT:$SG83512
	lea	rcx, OFFSET FLAT:$SG83513
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@CopyPalett:
; Line 1937
	mov	rax, QWORD PTR pSrcInfo$[rsp]
	mov	ecx, DWORD PTR PaletteEntries$[rsp]
	cmp	DWORD PTR [rax+84], ecx
	jbe	SHORT $LN3@CopyPalett
	mov	r8d, 1937				; 00000791H
	lea	rdx, OFFSET FLAT:$SG83515
	lea	rcx, OFFSET FLAT:$SG83516
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@CopyPalett:
; Line 1938
	mov	rax, QWORD PTR pDestInfo$[rsp]
	mov	eax, DWORD PTR [rax+48]
	mov	rcx, QWORD PTR pDestInfo$[rsp]
	lea	rax, QWORD PTR [rcx+rax+48]
	mov	QWORD PTR tv146[rsp], rax
	mov	rcx, QWORD PTR pDestInfo$[rsp]
	call	GetBitmapPalette
	mov	rcx, QWORD PTR tv146[rsp]
	cmp	rcx, rax
	je	SHORT $LN2@CopyPalett
	mov	r8d, 1938				; 00000792H
	lea	rdx, OFFSET FLAT:$SG83520
	lea	rcx, OFFSET FLAT:$SG83521
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@CopyPalett:
; Line 1939
	mov	rax, QWORD PTR pDestInfo$[rsp]
	mov	ecx, DWORD PTR PaletteEntries$[rsp]
	mov	DWORD PTR [rax+80], ecx
; Line 1940
	mov	rax, QWORD PTR pDestInfo$[rsp]
	mov	rcx, QWORD PTR pSrcInfo$[rsp]
	mov	ecx, DWORD PTR [rcx+84]
	mov	DWORD PTR [rax+84], ecx
; Line 1941
	mov	rax, QWORD PTR pSrcInfo$[rsp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	GetBitmapFormatSize
	mov	DWORD PTR BitmapSize$[rsp], eax
; Line 1943
	mov	rcx, QWORD PTR pDest$[rsp]
	call	?FormatLength@CMediaType@@QEBAKXZ	; CMediaType::FormatLength
	cmp	eax, DWORD PTR BitmapSize$[rsp]
	jae	SHORT $LN1@CopyPalett
; Line 1944
	lea	r8, OFFSET FLAT:$SG83525
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 1945
	mov	edx, DWORD PTR BitmapSize$[rsp]
	mov	rcx, QWORD PTR pDest$[rsp]
	call	?ReallocFormatBuffer@CMediaType@@QEAAPEAEK@Z ; CMediaType::ReallocFormatBuffer
$LN1@CopyPalett:
; Line 1952
	mov	eax, DWORD PTR PaletteEntries$[rsp]
	shl	rax, 2
	mov	QWORD PTR tv172[rsp], rax
	mov	rcx, QWORD PTR pSrcInfo$[rsp]
	call	GetBitmapPalette
	mov	rcx, QWORD PTR pDestInfo$[rsp]
	mov	ecx, DWORD PTR [rcx+48]
	mov	rdx, QWORD PTR pDestInfo$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+48]
	mov	rdx, QWORD PTR tv172[rsp]
	mov	r8, rdx
	mov	rdx, rax
	call	memcpy
; Line 1954
	xor	eax, eax
$LN8@CopyPalett:
; Line 1955
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?CopyPalette@CImagePalette@@QEAAJPEBVCMediaType@@PEAV2@@Z ENDP ; CImagePalette::CopyPalette
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.h
pdata	SEGMENT
$pdata$?FormatLength@CMediaType@@QEBAKXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?FormatLength@CMediaType@@QEBAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatLength@CMediaType@@QEBAKXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?FormatLength@CMediaType@@QEBAKXZ
_TEXT	SEGMENT
this$ = 16
?FormatLength@CMediaType@@QEBAKXZ PROC			; CMediaType::FormatLength, COMDAT
; Line 56
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+72]
	pop	rdi
	ret	0
?FormatLength@CMediaType@@QEBAKXZ ENDP			; CMediaType::FormatLength
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?RemovePalette@CImagePalette@@QEAAJXZ DD imagerel $LN9
	DD	imagerel $LN9+239
	DD	imagerel $unwind$?RemovePalette@CImagePalette@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemovePalette@CImagePalette@@QEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?RemovePalette@CImagePalette@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?RemovePalette@CImagePalette@@QEAAJXZ PROC		; CImagePalette::RemovePalette, COMDAT
; Line 1964
$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1965
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN6@RemovePale
; Line 1966
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?LockPaletteLock@CBaseWindow@@QEAAXXZ	; CBaseWindow::LockPaletteLock
$LN6@RemovePale:
; Line 1971
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 0
	je	$LN5@RemovePale
; Line 1973
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN4@RemovePale
; Line 1976
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?GetPalette@CBaseWindow@@QEAAPEAUHPALETTE__@@XZ ; CBaseWindow::GetPalette
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+32], rax
	je	SHORT $LN3@RemovePale
	mov	r8d, 1976				; 000007b8H
	lea	rdx, OFFSET FLAT:$SG83538
	lea	rcx, OFFSET FLAT:$SG83539
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@RemovePale:
; Line 1978
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?UnsetPalette@CBaseWindow@@QEAAXXZ	; CBaseWindow::UnsetPalette
$LN4@RemovePale:
; Line 1981
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_DeleteObject
	test	eax, eax
	jne	SHORT $LN2@RemovePale
	mov	r8d, 1981				; 000007bdH
	lea	rdx, OFFSET FLAT:$SG83541
	lea	rcx, OFFSET FLAT:$SG83542
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@RemovePale:
; Line 1982
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0
$LN5@RemovePale:
; Line 1985
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN1@RemovePale
; Line 1986
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?UnlockPaletteLock@CBaseWindow@@QEAAXXZ	; CBaseWindow::UnlockPaletteLock
$LN1@RemovePale:
; Line 1989
	xor	eax, eax
; Line 1990
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?RemovePalette@CImagePalette@@QEAAJXZ ENDP		; CImagePalette::RemovePalette
_TEXT	ENDS
PUBLIC	?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z ; CImagePalette::MakeIdentityPalette
EXTRN	__imp_CreatePalette:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MakePalette@CImagePalette@@SAPEAUHPALETTE__@@PEBUtagVIDEOINFOHEADER@@PEAD@Z DD imagerel $LN11
	DD	imagerel $LN11+507
	DD	imagerel $unwind$?MakePalette@CImagePalette@@SAPEAUHPALETTE__@@PEBUtagVIDEOINFOHEADER@@PEAD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MakePalette@CImagePalette@@SAPEAUHPALETTE__@@PEBUtagVIDEOINFOHEADER@@PEAD@Z DD 022301H
	DD	0700bb20fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?MakePalette@CImagePalette@@SAPEAUHPALETTE__@@PEBUtagVIDEOINFOHEADER@@PEAD@Z
_TEXT	SEGMENT
pHeader$ = 32
pColours$ = 40
lp$ = 48
hPalette$ = 56
dwCount$83567 = 64
$T85844 = 72
$T85845 = 80
tv189 = 88
pVideoInfo$ = 112
szDevice$ = 120
?MakePalette@CImagePalette@@SAPEAUHPALETTE__@@PEBUtagVIDEOINFOHEADER@@PEAD@Z PROC ; CImagePalette::MakePalette, COMDAT
; Line 2003
$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
; Line 2004
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	call	ContainsPalette
	cmp	eax, 1
	je	SHORT $LN8@MakePalett
	mov	r8d, 2004				; 000007d4H
	lea	rdx, OFFSET FLAT:$SG83549
	lea	rcx, OFFSET FLAT:$SG83550
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN8@MakePalett:
; Line 2005
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	cmp	DWORD PTR [rax+80], 256			; 00000100H
	jbe	SHORT $LN7@MakePalett
	mov	r8d, 2005				; 000007d5H
	lea	rdx, OFFSET FLAT:$SG83552
	lea	rcx, OFFSET FLAT:$SG83553
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN7@MakePalett:
; Line 2006
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	add	rax, 48					; 00000030H
	mov	QWORD PTR pHeader$[rsp], rax
; Line 2012
	mov	ecx, 1032				; 00000408H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T85844[rsp], rax
	mov	rax, QWORD PTR $T85844[rsp]
	mov	QWORD PTR lp$[rsp], rax
; Line 2013
	cmp	QWORD PTR lp$[rsp], 0
	jne	SHORT $LN6@MakePalett
; Line 2014
	xor	eax, eax
	jmp	$LN9@MakePalett
$LN6@MakePalett:
; Line 2023
	mov	eax, 768				; 00000300H
	mov	rcx, QWORD PTR lp$[rsp]
	mov	WORD PTR [rcx], ax
; Line 2024
	mov	rax, QWORD PTR lp$[rsp]
	mov	rcx, QWORD PTR pHeader$[rsp]
	movzx	ecx, WORD PTR [rcx+32]
	mov	WORD PTR [rax+2], cx
; Line 2025
	mov	rax, QWORD PTR lp$[rsp]
	movzx	eax, WORD PTR [rax+2]
	test	eax, eax
	jne	SHORT $LN5@MakePalett
	mov	rax, QWORD PTR pHeader$[rsp]
	movzx	eax, WORD PTR [rax+14]
	mov	ecx, 1
	mov	DWORD PTR tv189[rsp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv189[rsp]
	shl	eax, cl
	mov	rcx, QWORD PTR lp$[rsp]
	mov	WORD PTR [rcx+2], ax
$LN5@MakePalett:
; Line 2026
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	call	GetBitmapPalette
	mov	QWORD PTR pColours$[rsp], rax
; Line 2028
	mov	DWORD PTR dwCount$83567[rsp], 0
	jmp	SHORT $LN4@MakePalett
$LN3@MakePalett:
	mov	eax, DWORD PTR dwCount$83567[rsp]
	inc	eax
	mov	DWORD PTR dwCount$83567[rsp], eax
$LN4@MakePalett:
	mov	rax, QWORD PTR lp$[rsp]
	movzx	eax, WORD PTR [rax+2]
	cmp	DWORD PTR dwCount$83567[rsp], eax
	jae	SHORT $LN2@MakePalett
; Line 2029
	mov	eax, DWORD PTR dwCount$83567[rsp]
	mov	ecx, DWORD PTR dwCount$83567[rsp]
	mov	rdx, QWORD PTR lp$[rsp]
	mov	r8, QWORD PTR pColours$[rsp]
	movzx	eax, BYTE PTR [r8+rax*4+2]
	mov	BYTE PTR [rdx+rcx*4+4], al
; Line 2030
	mov	eax, DWORD PTR dwCount$83567[rsp]
	mov	ecx, DWORD PTR dwCount$83567[rsp]
	mov	rdx, QWORD PTR lp$[rsp]
	mov	r8, QWORD PTR pColours$[rsp]
	movzx	eax, BYTE PTR [r8+rax*4+1]
	mov	BYTE PTR [rdx+rcx*4+5], al
; Line 2031
	mov	eax, DWORD PTR dwCount$83567[rsp]
	mov	ecx, DWORD PTR dwCount$83567[rsp]
	mov	rdx, QWORD PTR lp$[rsp]
	mov	r8, QWORD PTR pColours$[rsp]
	movzx	eax, BYTE PTR [r8+rax*4]
	mov	BYTE PTR [rdx+rcx*4+6], al
; Line 2032
	mov	eax, DWORD PTR dwCount$83567[rsp]
	mov	rcx, QWORD PTR lp$[rsp]
	mov	BYTE PTR [rcx+rax*4+7], 0
; Line 2033
	jmp	SHORT $LN3@MakePalett
$LN2@MakePalett:
; Line 2035
	mov	rax, QWORD PTR lp$[rsp]
	movzx	eax, WORD PTR [rax+2]
	mov	rcx, QWORD PTR lp$[rsp]
	add	rcx, 4
	mov	r8, QWORD PTR szDevice$[rsp]
	mov	edx, eax
	call	?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z ; CImagePalette::MakeIdentityPalette
; Line 2039
	mov	rcx, QWORD PTR lp$[rsp]
	call	QWORD PTR __imp_CreatePalette
	mov	QWORD PTR hPalette$[rsp], rax
; Line 2040
	cmp	QWORD PTR hPalette$[rsp], 0
	jne	SHORT $LN1@MakePalett
	mov	r8d, 2040				; 000007f8H
	lea	rdx, OFFSET FLAT:$SG83572
	lea	rcx, OFFSET FLAT:$SG83573
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@MakePalett:
; Line 2041
	mov	rax, QWORD PTR lp$[rsp]
	mov	QWORD PTR $T85845[rsp], rax
	mov	rcx, QWORD PTR $T85845[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 2042
	mov	rax, QWORD PTR hPalette$[rsp]
$LN9@MakePalett:
; Line 2043
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?MakePalette@CImagePalette@@SAPEAUHPALETTE__@@PEBUtagVIDEOINFOHEADER@@PEAD@Z ENDP ; CImagePalette::MakePalette
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_GetSystemPaletteEntries:PROC
EXTRN	__imp_GetDeviceCaps:PROC
EXTRN	__imp_CreateDCA:PROC
EXTRN	__imp_lstrcmpiA:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z DD imagerel $LN27
	DD	imagerel $LN27+833
	DD	imagerel $unwind$?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z DD 033f19H
	DD	0140116H
	DD	0700fH
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z$rtcName$0 DB 053H ; CImagePalette::MakeIdentityPalette
	DB	079H
	DB	073H
	DB	074H
	DB	065H
	DB	06dH
	DB	045H
	DB	06eH
	DB	074H
	DB	072H
	DB	069H
	DB	065H
	DB	073H
	DB	00H
	ORG $+2
?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z$rtcVarDesc DD 028H ; CImagePalette::MakeIdentityPalette
	DD	028H
	DQ	FLAT:?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z$rtcName$0
	ORG $+48
?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z$rtcFrameData DD 01H ; CImagePalette::MakeIdentityPalette
	DD	00H
	DQ	FLAT:?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z
_TEXT	SEGMENT
SystemEntries$ = 40
bIdentityPalette$ = 84
PalLoCount$ = 88
PalHiStart$ = 92
hdc$ = 96
Reserved$ = 104
Result$ = 108
Count$83601 = 112
Count$83607 = 116
Count$83616 = 120
tv207 = 136
__$ArrayPad$ = 144
pEntry$ = 176
iColours$ = 184
szDevice$ = 192
?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z PROC ; CImagePalette::MakeIdentityPalette, COMDAT
; Line 2057
$LN27:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	rdi, rsp
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 2059
	mov	DWORD PTR bIdentityPalette$[rsp], 1
; Line 2060
	cmp	DWORD PTR iColours$[rsp], 256		; 00000100H
	jle	SHORT $LN22@MakeIdenti
	mov	r8d, 2060				; 0000080cH
	lea	rdx, OFFSET FLAT:$SG83583
	lea	rcx, OFFSET FLAT:$SG83584
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN22@MakeIdenti:
; Line 2061
	mov	DWORD PTR PalLoCount$[rsp], 10
; Line 2062
	mov	DWORD PTR PalHiStart$[rsp], 246		; 000000f6H
; Line 2066
	cmp	DWORD PTR iColours$[rsp], 10
	jge	SHORT $LN21@MakeIdenti
; Line 2067
	mov	eax, 1
	jmp	$LN23@MakeIdenti
$LN21@MakeIdenti:
; Line 2075
	cmp	QWORD PTR szDevice$[rsp], 0
	je	SHORT $LN19@MakeIdenti
	lea	rdx, OFFSET FLAT:$SG83592
	mov	rcx, QWORD PTR szDevice$[rsp]
	call	QWORD PTR __imp_lstrcmpiA
	test	eax, eax
	jne	SHORT $LN20@MakeIdenti
$LN19@MakeIdenti:
; Line 2076
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, OFFSET FLAT:$SG83593
	call	QWORD PTR __imp_CreateDCA
	mov	QWORD PTR hdc$[rsp], rax
; Line 2077
	jmp	SHORT $LN18@MakeIdenti
$LN20@MakeIdenti:
; Line 2078
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, QWORD PTR szDevice$[rsp]
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateDCA
	mov	QWORD PTR hdc$[rsp], rax
$LN18@MakeIdenti:
; Line 2079
	cmp	QWORD PTR hdc$[rsp], 0
	jne	SHORT $LN17@MakeIdenti
; Line 2080
	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	$LN23@MakeIdenti
$LN17@MakeIdenti:
; Line 2082
	mov	edx, 106				; 0000006aH
	mov	rcx, QWORD PTR hdc$[rsp]
	call	QWORD PTR __imp_GetDeviceCaps
	mov	DWORD PTR Reserved$[rsp], eax
; Line 2083
	cmp	DWORD PTR Reserved$[rsp], 20
	je	SHORT $LN16@MakeIdenti
; Line 2084
	mov	rcx, QWORD PTR hdc$[rsp]
	call	QWORD PTR __imp_DeleteDC
; Line 2085
	mov	eax, 1
	jmp	$LN23@MakeIdenti
$LN16@MakeIdenti:
; Line 2092
	lea	r9, QWORD PTR SystemEntries$[rsp]
	mov	r8d, 10
	xor	edx, edx
	mov	rcx, QWORD PTR hdc$[rsp]
	call	QWORD PTR __imp_GetSystemPaletteEntries
	mov	DWORD PTR Result$[rsp], eax
; Line 2093
	mov	DWORD PTR Count$83601[rsp], 0
	jmp	SHORT $LN15@MakeIdenti
$LN14@MakeIdenti:
	mov	eax, DWORD PTR Count$83601[rsp]
	inc	eax
	mov	DWORD PTR Count$83601[rsp], eax
$LN15@MakeIdenti:
	mov	eax, DWORD PTR Result$[rsp]
	cmp	DWORD PTR Count$83601[rsp], eax
	jae	SHORT $LN13@MakeIdenti
; Line 2096
	mov	eax, DWORD PTR Count$83601[rsp]
	movzx	eax, BYTE PTR SystemEntries$[rsp+rax*4]
	mov	ecx, DWORD PTR Count$83601[rsp]
	mov	rdx, QWORD PTR pEntry$[rsp]
	movzx	ecx, BYTE PTR [rdx+rcx*4]
	cmp	eax, ecx
	jne	SHORT $LN11@MakeIdenti
	mov	eax, DWORD PTR Count$83601[rsp]
	movzx	eax, BYTE PTR SystemEntries$[rsp+rax*4+1]
	mov	ecx, DWORD PTR Count$83601[rsp]
	mov	rdx, QWORD PTR pEntry$[rsp]
	movzx	ecx, BYTE PTR [rdx+rcx*4+1]
	cmp	eax, ecx
	jne	SHORT $LN11@MakeIdenti
	mov	eax, DWORD PTR Count$83601[rsp]
	movzx	eax, BYTE PTR SystemEntries$[rsp+rax*4+2]
	mov	ecx, DWORD PTR Count$83601[rsp]
	mov	rdx, QWORD PTR pEntry$[rsp]
	movzx	ecx, BYTE PTR [rdx+rcx*4+2]
	cmp	eax, ecx
	je	SHORT $LN12@MakeIdenti
$LN11@MakeIdenti:
; Line 2097
	mov	DWORD PTR bIdentityPalette$[rsp], 0
$LN12@MakeIdenti:
; Line 2099
	jmp	SHORT $LN14@MakeIdenti
$LN13@MakeIdenti:
; Line 2103
	lea	r9, QWORD PTR SystemEntries$[rsp]
	mov	r8d, 10
	mov	edx, 246				; 000000f6H
	mov	rcx, QWORD PTR hdc$[rsp]
	call	QWORD PTR __imp_GetSystemPaletteEntries
	mov	DWORD PTR Result$[rsp], eax
; Line 2104
	mov	DWORD PTR Count$83607[rsp], 0
	jmp	SHORT $LN10@MakeIdenti
$LN9@MakeIdenti:
	mov	eax, DWORD PTR Count$83607[rsp]
	inc	eax
	mov	DWORD PTR Count$83607[rsp], eax
$LN10@MakeIdenti:
	mov	eax, DWORD PTR Result$[rsp]
	cmp	DWORD PTR Count$83607[rsp], eax
	jae	$LN8@MakeIdenti
; Line 2105
	mov	eax, DWORD PTR Count$83607[rsp]
	add	eax, 246				; 000000f6H
	cmp	eax, DWORD PTR iColours$[rsp]
	jge	SHORT $LN7@MakeIdenti
; Line 2108
	mov	eax, DWORD PTR Count$83607[rsp]
	movzx	eax, BYTE PTR SystemEntries$[rsp+rax*4]
	mov	ecx, DWORD PTR Count$83607[rsp]
	add	ecx, 246				; 000000f6H
	mov	ecx, ecx
	mov	rdx, QWORD PTR pEntry$[rsp]
	movzx	ecx, BYTE PTR [rdx+rcx*4]
	cmp	eax, ecx
	jne	SHORT $LN5@MakeIdenti
	mov	eax, DWORD PTR Count$83607[rsp]
	movzx	eax, BYTE PTR SystemEntries$[rsp+rax*4+1]
	mov	ecx, DWORD PTR Count$83607[rsp]
	add	ecx, 246				; 000000f6H
	mov	ecx, ecx
	mov	rdx, QWORD PTR pEntry$[rsp]
	movzx	ecx, BYTE PTR [rdx+rcx*4+1]
	cmp	eax, ecx
	jne	SHORT $LN5@MakeIdenti
	mov	eax, DWORD PTR Count$83607[rsp]
	movzx	eax, BYTE PTR SystemEntries$[rsp+rax*4+2]
	mov	ecx, DWORD PTR Count$83607[rsp]
	add	ecx, 246				; 000000f6H
	mov	ecx, ecx
	mov	rdx, QWORD PTR pEntry$[rsp]
	movzx	ecx, BYTE PTR [rdx+rcx*4+2]
	cmp	eax, ecx
	je	SHORT $LN6@MakeIdenti
$LN5@MakeIdenti:
; Line 2109
	mov	DWORD PTR bIdentityPalette$[rsp], 0
$LN6@MakeIdenti:
$LN7@MakeIdenti:
; Line 2112
	jmp	$LN9@MakeIdenti
$LN8@MakeIdenti:
; Line 2116
	mov	rcx, QWORD PTR hdc$[rsp]
	call	QWORD PTR __imp_DeleteDC
; Line 2117
	cmp	DWORD PTR bIdentityPalette$[rsp], 0
	jne	SHORT $LN4@MakeIdenti
; Line 2118
	mov	eax, 1
	jmp	SHORT $LN23@MakeIdenti
$LN4@MakeIdenti:
; Line 2123
	mov	DWORD PTR Count$83616[rsp], 10
	jmp	SHORT $LN3@MakeIdenti
$LN2@MakeIdenti:
	mov	eax, DWORD PTR Count$83616[rsp]
	inc	eax
	mov	DWORD PTR Count$83616[rsp], eax
$LN3@MakeIdenti:
	cmp	DWORD PTR iColours$[rsp], 246		; 000000f6H
	jle	SHORT $LN25@MakeIdenti
	mov	DWORD PTR tv207[rsp], 246		; 000000f6H
	jmp	SHORT $LN26@MakeIdenti
$LN25@MakeIdenti:
	mov	eax, DWORD PTR iColours$[rsp]
	mov	DWORD PTR tv207[rsp], eax
$LN26@MakeIdenti:
	mov	eax, DWORD PTR tv207[rsp]
	cmp	DWORD PTR Count$83616[rsp], eax
	jge	SHORT $LN1@MakeIdenti
; Line 2124
	mov	eax, DWORD PTR Count$83616[rsp]
	mov	rcx, QWORD PTR pEntry$[rsp]
	mov	BYTE PTR [rcx+rax*4+3], 4
; Line 2125
	jmp	SHORT $LN2@MakeIdenti
$LN1@MakeIdenti:
; Line 2126
	xor	eax, eax
$LN23@MakeIdenti:
; Line 2127
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?MakeIdentityPalette@CImagePalette@@SAJPEAUtagPALETTEENTRY@@HPEAD@Z ENDP ; CImagePalette::MakeIdentityPalette
_TEXT	ENDS
PUBLIC	?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z	; CImageDisplay::RefreshDisplayType
PUBLIC	??0CImageDisplay@@QEAA@XZ			; CImageDisplay::CImageDisplay
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CImageDisplay@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0CImageDisplay@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CImageDisplay@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CImageDisplay@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CImageDisplay@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0CImageDisplay@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CImageDisplay@@QEAA@XZ DD imagerel ??0CImageDisplay@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0CImageDisplay@@QEAA@XZ+50
	DD	00H
	DD	imagerel ??0CImageDisplay@@QEAA@XZ+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CImageDisplay@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CImageDisplay@@QEAA@XZ DD 022711H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CImageDisplay@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CImageDisplay@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CImageDisplay@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CImageDisplay@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CImageDisplay@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CImageDisplay@@QEAA@XZ@4HA
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CImageDisplay@@QEAA@XZ
_TEXT	SEGMENT
$T85872 = 32
this$ = 64
??0CImageDisplay@@QEAA@XZ PROC				; CImageDisplay::CImageDisplay, COMDAT
; Line 2137
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	QWORD PTR $T85872[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0CCritSec@@QEAA@XZ			; CCritSec::CCritSec
	npad	1
; Line 2138
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z ; CImageDisplay::RefreshDisplayType
	npad	1
; Line 2139
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CImageDisplay@@QEAA@XZ ENDP				; CImageDisplay::CImageDisplay
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T85872 = 32
this$ = 64
?dtor$0@?0???0CImageDisplay@@QEAA@XZ@4HA PROC		; `CImageDisplay::CImageDisplay'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0CImageDisplay@@QEAA@XZ@4HA ENDP		; `CImageDisplay::CImageDisplay'::`1'::dtor$0
text$x	ENDS
PUBLIC	?UpdateFormat@CImageDisplay@@QEAAJPEAUtagVIDEOINFO@@@Z ; CImageDisplay::UpdateFormat
PUBLIC	?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckHeaderValidity
EXTRN	__imp_GetDIBits:PROC
EXTRN	__imp_CreateCompatibleBitmap:PROC
EXTRN	memset:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z DD imagerel $LN16
	DD	imagerel $LN16+770
	DD	imagerel $unwind$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z@4HA DD imagerel ?dtor$0@?0??RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z@4HA
	DD	imagerel ?dtor$0@?0??RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z DD imagerel ?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z
	DD	0ffffffffH
	DD	imagerel ?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z+69
	DD	00H
	DD	imagerel ?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z+330
	DD	0ffffffffH
	DD	imagerel ?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z+351
	DD	00H
	DD	imagerel ?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z+726
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z DD 033211H
	DD	0120112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z$rtcName$0 DB 063H ; CImageDisplay::RefreshDisplayType
	DB	044H
	DB	069H
	DB	073H
	DB	070H
	DB	06cH
	DB	061H
	DB	079H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+3
?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z$rtcVarDesc DD 048H ; CImageDisplay::RefreshDisplayType
	DD	08H
	DQ	FLAT:?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z$rtcName$0
	ORG $+48
?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z$rtcFrameData DD 01H ; CImageDisplay::RefreshDisplayType
	DD	00H
	DQ	FLAT:?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z$rtcVarDesc
$cppxdata$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z
	DD	070H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z
_TEXT	SEGMENT
cDisplayLock$ = 72
hdcDisplay$ = 88
hbm$ = 96
$T85892 = 104
$T85895 = 108
$T85901 = 112
tv135 = 120
tv141 = 128
this$ = 160
szDeviceName$ = 168
?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z PROC	; CImageDisplay::RefreshDisplayType, COMDAT
; Line 2153
$LN16:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H
	mov	rdi, rsp
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]
	mov	QWORD PTR $T85901[rsp], -2
; Line 2154
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR cDisplayLock$[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 2158
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 56					; 00000038H
	mov	r8d, 1124				; 00000464H
	xor	edx, edx
	mov	rcx, rax
	call	memset
; Line 2159
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+104], 40			; 00000028H
; Line 2160
	xor	eax, eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	WORD PTR [rcx+118], ax
; Line 2167
	cmp	QWORD PTR szDeviceName$[rsp], 0
	je	SHORT $LN7@RefreshDis
	lea	rdx, OFFSET FLAT:$SG83635
	mov	rcx, QWORD PTR szDeviceName$[rsp]
	call	QWORD PTR __imp_lstrcmpiA
	test	eax, eax
	jne	SHORT $LN8@RefreshDis
$LN7@RefreshDis:
; Line 2168
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, OFFSET FLAT:$SG83636
	call	QWORD PTR __imp_CreateDCA
	mov	QWORD PTR hdcDisplay$[rsp], rax
; Line 2169
	jmp	SHORT $LN6@RefreshDis
$LN8@RefreshDis:
; Line 2170
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, QWORD PTR szDeviceName$[rsp]
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateDCA
	mov	QWORD PTR hdcDisplay$[rsp], rax
$LN6@RefreshDis:
; Line 2171
	cmp	QWORD PTR hdcDisplay$[rsp], 0
	jne	SHORT $LN5@RefreshDis
; Line 2172
	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN4@RefreshDis
	mov	r8d, 2172				; 0000087cH
	lea	rdx, OFFSET FLAT:$SG83640
	lea	rcx, OFFSET FLAT:$SG83641
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@RefreshDis:
; Line 2174
	cmp	QWORD PTR szDeviceName$[rsp], 0
	je	SHORT $LN11@RefreshDis
	mov	rax, QWORD PTR szDeviceName$[rsp]
	mov	QWORD PTR tv135[rsp], rax
	jmp	SHORT $LN12@RefreshDis
$LN11@RefreshDis:
	lea	rax, OFFSET FLAT:$SG83642
	mov	QWORD PTR tv135[rsp], rax
$LN12@RefreshDis:
	mov	r9, QWORD PTR tv135[rsp]
	lea	r8, OFFSET FLAT:$SG83643
	mov	edx, 1
	mov	ecx, 16
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2175
	mov	DWORD PTR $T85892[rsp], -2147467259	; ffffffff80004005H
	lea	rcx, QWORD PTR cDisplayLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T85892[rsp]
	jmp	$LN9@RefreshDis
; Line 2176
	jmp	SHORT $LN3@RefreshDis
$LN5@RefreshDis:
; Line 2178
	cmp	QWORD PTR szDeviceName$[rsp], 0
	je	SHORT $LN13@RefreshDis
	mov	rax, QWORD PTR szDeviceName$[rsp]
	mov	QWORD PTR tv141[rsp], rax
	jmp	SHORT $LN14@RefreshDis
$LN13@RefreshDis:
	lea	rax, OFFSET FLAT:$SG83647
	mov	QWORD PTR tv141[rsp], rax
$LN14@RefreshDis:
	mov	r9, QWORD PTR tv141[rsp]
	lea	r8, OFFSET FLAT:$SG83648
	mov	edx, 3
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
$LN3@RefreshDis:
; Line 2180
	mov	r8d, 1
	mov	edx, 1
	mov	rcx, QWORD PTR hdcDisplay$[rsp]
	call	QWORD PTR __imp_CreateCompatibleBitmap
	mov	QWORD PTR hbm$[rsp], rax
; Line 2181
	cmp	QWORD PTR hbm$[rsp], 0
	je	$LN2@RefreshDis
; Line 2183
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	DWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1
	xor	r8d, r8d
	mov	rdx, QWORD PTR hbm$[rsp]
	mov	rcx, QWORD PTR hdcDisplay$[rsp]
	call	QWORD PTR __imp_GetDIBits
; Line 2186
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 104				; 00000068H
	mov	DWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1
	xor	r8d, r8d
	mov	rdx, QWORD PTR hbm$[rsp]
	mov	rcx, QWORD PTR hdcDisplay$[rsp]
	call	QWORD PTR __imp_GetDIBits
; Line 2187
	mov	rcx, QWORD PTR hbm$[rsp]
	call	QWORD PTR __imp_DeleteObject
$LN2@RefreshDis:
; Line 2189
	mov	rcx, QWORD PTR hdcDisplay$[rsp]
	call	QWORD PTR __imp_DeleteDC
; Line 2193
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 56					; 00000038H
	mov	rcx, rax
	call	?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckHeaderValidity
	test	eax, eax
	jne	SHORT $LN1@RefreshDis
	mov	r8d, 2193				; 00000891H
	lea	rdx, OFFSET FLAT:$SG83654
	lea	rcx, OFFSET FLAT:$SG83655
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@RefreshDis:
; Line 2194
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 56					; 00000038H
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?UpdateFormat@CImageDisplay@@QEAAJPEAUtagVIDEOINFO@@@Z ; CImageDisplay::UpdateFormat
; Line 2196
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	mov	r9d, eax
	lea	r8, OFFSET FLAT:$SG83656
	mov	edx, 3
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2197
	mov	DWORD PTR $T85895[rsp], 0
	lea	rcx, QWORD PTR cDisplayLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T85895[rsp]
$LN9@RefreshDis:
; Line 2198
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
?RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z ENDP	; CImageDisplay::RefreshDisplayType
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cDisplayLock$ = 72
hdcDisplay$ = 88
hbm$ = 96
$T85892 = 104
$T85895 = 108
$T85901 = 112
tv135 = 120
tv141 = 128
this$ = 160
szDeviceName$ = 168
?dtor$0@?0??RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z@4HA PROC ; `CImageDisplay::RefreshDisplayType'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cDisplayLock$[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??RefreshDisplayType@CImageDisplay@@QEAAJPEAD@Z@4HA ENDP ; `CImageDisplay::RefreshDisplayType'::`1'::dtor$0
text$x	ENDS
PUBLIC	?CountPrefixBits@CImageDisplay@@KAKK@Z		; CImageDisplay::CountPrefixBits
PUBLIC	?CountSetBits@CImageDisplay@@KAKK@Z		; CImageDisplay::CountSetBits
PUBLIC	?CheckBitFields@CImageDisplay@@KAHPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckBitFields
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckBitFields@CImageDisplay@@KAHPEBUtagVIDEOINFO@@@Z DD imagerel $LN9
	DD	imagerel $LN9+288
	DD	imagerel $unwind$?CheckBitFields@CImageDisplay@@KAHPEBUtagVIDEOINFO@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckBitFields@CImageDisplay@@KAHPEBUtagVIDEOINFO@@@Z DD 021e01H
	DD	07006720aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CheckBitFields@CImageDisplay@@KAHPEBUtagVIDEOINFO@@@Z
_TEXT	SEGMENT
pBitFields$ = 32
iColour$83665 = 40
SetBits$83669 = 44
PrefixBits$83673 = 48
TestField$83674 = 52
Mask$83675 = 56
tv146 = 60
pInput$ = 80
?CheckBitFields@CImageDisplay@@KAHPEBUtagVIDEOINFO@@@Z PROC ; CImageDisplay::CheckBitFields, COMDAT
; Line 2207
$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 2208
	mov	rax, QWORD PTR pInput$[rsp]
	mov	eax, DWORD PTR [rax+48]
	mov	rcx, QWORD PTR pInput$[rsp]
	lea	rax, QWORD PTR [rcx+rax+48]
	mov	QWORD PTR pBitFields$[rsp], rax
; Line 2210
	mov	DWORD PTR iColour$83665[rsp], 0
	jmp	SHORT $LN6@CheckBitFi
$LN5@CheckBitFi:
	mov	eax, DWORD PTR iColour$83665[rsp]
	inc	eax
	mov	DWORD PTR iColour$83665[rsp], eax
$LN6@CheckBitFi:
	cmp	DWORD PTR iColour$83665[rsp], 2
	jg	$LN4@CheckBitFi
; Line 2214
	movsxd	rax, DWORD PTR iColour$83665[rsp]
	mov	rcx, QWORD PTR pBitFields$[rsp]
	mov	ecx, DWORD PTR [rcx+rax*4]
	call	?CountSetBits@CImageDisplay@@KAKK@Z	; CImageDisplay::CountSetBits
	mov	DWORD PTR SetBits$83669[rsp], eax
; Line 2215
	cmp	DWORD PTR SetBits$83669[rsp], 8
	ja	SHORT $LN2@CheckBitFi
	cmp	DWORD PTR SetBits$83669[rsp], 0
	jne	SHORT $LN3@CheckBitFi
$LN2@CheckBitFi:
; Line 2216
	mov	r9d, DWORD PTR iColour$83665[rsp]
	lea	r8, OFFSET FLAT:$SG83672
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2217
	xor	eax, eax
	jmp	$LN7@CheckBitFi
$LN3@CheckBitFi:
; Line 2221
	movsxd	rax, DWORD PTR iColour$83665[rsp]
	mov	rcx, QWORD PTR pBitFields$[rsp]
	mov	ecx, DWORD PTR [rcx+rax*4]
	call	?CountPrefixBits@CImageDisplay@@KAKK@Z	; CImageDisplay::CountPrefixBits
	mov	DWORD PTR PrefixBits$83673[rsp], eax
; Line 2230
	movsxd	rax, DWORD PTR iColour$83665[rsp]
	mov	ecx, DWORD PTR PrefixBits$83673[rsp]
	mov	rdx, QWORD PTR pBitFields$[rsp]
	mov	eax, DWORD PTR [rdx+rax*4]
	shr	eax, cl
	mov	DWORD PTR TestField$83674[rsp], eax
; Line 2231
	mov	eax, DWORD PTR SetBits$83669[rsp]
	mov	ecx, -1					; ffffffffH
	mov	DWORD PTR tv146[rsp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv146[rsp]
	shl	eax, cl
	mov	DWORD PTR Mask$83675[rsp], eax
; Line 2232
	mov	eax, DWORD PTR Mask$83675[rsp]
	mov	ecx, DWORD PTR TestField$83674[rsp]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	je	SHORT $LN1@CheckBitFi
; Line 2233
	mov	r9d, DWORD PTR iColour$83665[rsp]
	lea	r8, OFFSET FLAT:$SG83677
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2234
	xor	eax, eax
	jmp	SHORT $LN7@CheckBitFi
$LN1@CheckBitFi:
; Line 2236
	jmp	$LN5@CheckBitFi
$LN4@CheckBitFi:
; Line 2237
	mov	eax, 1
$LN7@CheckBitFi:
; Line 2238
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?CheckBitFields@CImageDisplay@@KAHPEBUtagVIDEOINFO@@@Z ENDP ; CImageDisplay::CheckBitFields
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CountSetBits@CImageDisplay@@KAKK@Z DD imagerel $LN5
	DD	imagerel $LN5+87
	DD	imagerel $unwind$?CountSetBits@CImageDisplay@@KAKK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CountSetBits@CImageDisplay@@KAKK@Z DD 021c01H
	DD	070051209H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CountSetBits@CImageDisplay@@KAKK@Z
_TEXT	SEGMENT
Count$ = 0
init$ = 4
Field$ = 32
?CountSetBits@CImageDisplay@@KAKK@Z PROC		; CImageDisplay::CountSetBits, COMDAT
; Line 2244
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+32]
; Line 2247
	mov	DWORD PTR Count$[rsp], 0
; Line 2248
	mov	eax, DWORD PTR Field$[rsp]
	mov	DWORD PTR init$[rsp], eax
$LN2@CountSetBi:
; Line 2252
	cmp	DWORD PTR init$[rsp], 0
	je	SHORT $LN1@CountSetBi
; Line 2253
	mov	eax, DWORD PTR init$[rsp]
	dec	eax
	mov	ecx, DWORD PTR init$[rsp]
	and	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR init$[rsp], eax
; Line 2254
	mov	eax, DWORD PTR Count$[rsp]
	inc	eax
	mov	DWORD PTR Count$[rsp], eax
; Line 2255
	jmp	SHORT $LN2@CountSetBi
$LN1@CountSetBi:
; Line 2256
	mov	eax, DWORD PTR Count$[rsp]
; Line 2257
	add	rsp, 16
	pop	rdi
	ret	0
?CountSetBits@CImageDisplay@@KAKK@Z ENDP		; CImageDisplay::CountSetBits
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CountPrefixBits@CImageDisplay@@KAKK@Z DD imagerel $LN8
	DD	imagerel $LN8+152
	DD	imagerel $unwind$?CountPrefixBits@CImageDisplay@@KAKK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CountPrefixBits@CImageDisplay@@KAKK@Z DD 021c01H
	DD	070055209H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CountPrefixBits@CImageDisplay@@KAKK@Z
_TEXT	SEGMENT
Mask$ = 32
Count$ = 36
Field$ = 64
?CountPrefixBits@CImageDisplay@@KAKK@Z PROC		; CImageDisplay::CountPrefixBits, COMDAT
; Line 2265
$LN8:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+64]
; Line 2266
	mov	DWORD PTR Mask$[rsp], 1
; Line 2267
	mov	DWORD PTR Count$[rsp], 0
$LN5@CountPrefi:
; Line 2269
	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN4@CountPrefi
; Line 2270
	mov	eax, DWORD PTR Mask$[rsp]
	mov	ecx, DWORD PTR Field$[rsp]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	je	SHORT $LN3@CountPrefi
; Line 2271
	mov	eax, DWORD PTR Count$[rsp]
	jmp	SHORT $LN6@CountPrefi
$LN3@CountPrefi:
; Line 2273
	mov	eax, DWORD PTR Count$[rsp]
	inc	eax
	mov	DWORD PTR Count$[rsp], eax
; Line 2275
	cmp	DWORD PTR Mask$[rsp], -2147483648	; 80000000H
	jne	SHORT $LN2@CountPrefi
	mov	r8d, 2275				; 000008e3H
	lea	rdx, OFFSET FLAT:$SG83696
	lea	rcx, OFFSET FLAT:$SG83697
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@CountPrefi:
; Line 2276
	cmp	DWORD PTR Mask$[rsp], -2147483648	; 80000000H
	jne	SHORT $LN1@CountPrefi
; Line 2277
	mov	eax, DWORD PTR Count$[rsp]
	jmp	SHORT $LN6@CountPrefi
$LN1@CountPrefi:
; Line 2279
	mov	eax, DWORD PTR Mask$[rsp]
	shl	eax, 1
	mov	DWORD PTR Mask$[rsp], eax
; Line 2280
	jmp	SHORT $LN5@CountPrefi
$LN4@CountPrefi:
$LN6@CountPrefi:
; Line 2281
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CountPrefixBits@CImageDisplay@@KAKK@Z ENDP		; CImageDisplay::CountPrefixBits
_TEXT	ENDS
PUBLIC	?CheckPaletteHeader@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckPaletteHeader
EXTRN	GetBitmapSize:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z DD imagerel $LN16
	DD	imagerel $LN16+414
	DD	imagerel $unwind$?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z
_TEXT	SEGMENT
pInput$ = 48
?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z PROC ; CImageDisplay::CheckHeaderValidity, COMDAT
; Line 2292
$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 2296
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+52], 0
	jle	SHORT $LN12@CheckHeade
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+56], 0
	jg	SHORT $LN13@CheckHeade
$LN12@CheckHeade:
; Line 2297
	lea	r8, OFFSET FLAT:$SG83704
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2298
	xor	eax, eax
	jmp	$LN14@CheckHeade
$LN13@CheckHeade:
; Line 2303
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+64], 0
	je	SHORT $LN11@CheckHeade
; Line 2304
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+64], 3
	je	SHORT $LN10@CheckHeade
; Line 2305
	lea	r8, OFFSET FLAT:$SG83707
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2306
	xor	eax, eax
	jmp	$LN14@CheckHeade
$LN10@CheckHeade:
$LN11@CheckHeade:
; Line 2312
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+64], 3
	jne	SHORT $LN9@CheckHeade
; Line 2313
	mov	rax, QWORD PTR pInput$[rsp]
	movzx	eax, WORD PTR [rax+62]
	cmp	eax, 16
	je	SHORT $LN8@CheckHeade
; Line 2314
	mov	rax, QWORD PTR pInput$[rsp]
	movzx	eax, WORD PTR [rax+62]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN7@CheckHeade
; Line 2315
	lea	r8, OFFSET FLAT:$SG83711
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2316
	xor	eax, eax
	jmp	$LN14@CheckHeade
$LN7@CheckHeade:
$LN8@CheckHeade:
$LN9@CheckHeade:
; Line 2323
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+64], 3
	jne	SHORT $LN6@CheckHeade
; Line 2324
	mov	rcx, QWORD PTR pInput$[rsp]
	call	?CheckBitFields@CImageDisplay@@KAHPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckBitFields
	test	eax, eax
	jne	SHORT $LN5@CheckHeade
; Line 2325
	lea	r8, OFFSET FLAT:$SG83714
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2326
	xor	eax, eax
	jmp	$LN14@CheckHeade
$LN5@CheckHeade:
$LN6@CheckHeade:
; Line 2332
	mov	rax, QWORD PTR pInput$[rsp]
	movzx	eax, WORD PTR [rax+60]
	cmp	eax, 1
	je	SHORT $LN4@CheckHeade
; Line 2333
	lea	r8, OFFSET FLAT:$SG83716
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2334
	xor	eax, eax
	jmp	SHORT $LN14@CheckHeade
$LN4@CheckHeade:
; Line 2339
	mov	rax, QWORD PTR pInput$[rsp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	GetBitmapSize
	mov	rcx, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rcx+68], eax
	je	SHORT $LN3@CheckHeade
; Line 2340
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+68], 0
	je	SHORT $LN2@CheckHeade
; Line 2341
	lea	r8, OFFSET FLAT:$SG83719
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2342
	xor	eax, eax
	jmp	SHORT $LN14@CheckHeade
$LN2@CheckHeade:
$LN3@CheckHeade:
; Line 2348
	mov	rax, QWORD PTR pInput$[rsp]
	mov	eax, DWORD PTR [rax+48]
	cmp	rax, 40					; 00000028H
	je	SHORT $LN1@CheckHeade
; Line 2349
	lea	r8, OFFSET FLAT:$SG83722
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2350
	xor	eax, eax
	jmp	SHORT $LN14@CheckHeade
$LN1@CheckHeade:
; Line 2352
	mov	rcx, QWORD PTR pInput$[rsp]
	call	?CheckPaletteHeader@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckPaletteHeader
$LN14@CheckHeade:
; Line 2353
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z ENDP ; CImageDisplay::CheckHeaderValidity
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckPaletteHeader@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z DD imagerel $LN10
	DD	imagerel $LN10+274
	DD	imagerel $unwind$?CheckPaletteHeader@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckPaletteHeader@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CheckPaletteHeader@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z
_TEXT	SEGMENT
tv68 = 32
tv138 = 36
pInput$ = 64
?CheckPaletteHeader@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z PROC ; CImageDisplay::CheckPaletteHeader, COMDAT
; Line 2362
$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 2365
	mov	rax, QWORD PTR pInput$[rsp]
	movzx	eax, WORD PTR [rax+62]
	cmp	eax, 8
	jg	SHORT $LN8@CheckPalet
	mov	DWORD PTR tv68[rsp], 1
	jmp	SHORT $LN9@CheckPalet
$LN8@CheckPalet:
	mov	DWORD PTR tv68[rsp], 0
$LN9@CheckPalet:
	cmp	DWORD PTR tv68[rsp], 0
	jne	SHORT $LN5@CheckPalet
; Line 2366
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+80], 0
	je	SHORT $LN4@CheckPalet
; Line 2367
	lea	r8, OFFSET FLAT:$SG83728
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2368
	xor	eax, eax
	jmp	$LN6@CheckPalet
$LN4@CheckPalet:
; Line 2370
	mov	eax, 1
	jmp	$LN6@CheckPalet
$LN5@CheckPalet:
; Line 2375
	mov	rax, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rax+64], 0
	je	SHORT $LN3@CheckPalet
; Line 2376
	lea	r8, OFFSET FLAT:$SG83730
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2377
	xor	eax, eax
	jmp	SHORT $LN6@CheckPalet
$LN3@CheckPalet:
; Line 2382
	mov	rax, QWORD PTR pInput$[rsp]
	movzx	eax, WORD PTR [rax+62]
	mov	ecx, 1
	mov	DWORD PTR tv138[rsp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv138[rsp]
	shl	eax, cl
	mov	rcx, QWORD PTR pInput$[rsp]
	cmp	DWORD PTR [rcx+80], eax
	jbe	SHORT $LN2@CheckPalet
; Line 2383
	lea	r8, OFFSET FLAT:$SG83733
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2384
	xor	eax, eax
	jmp	SHORT $LN6@CheckPalet
$LN2@CheckPalet:
; Line 2389
	mov	rax, QWORD PTR pInput$[rsp]
	mov	rcx, QWORD PTR pInput$[rsp]
	mov	ecx, DWORD PTR [rcx+80]
	cmp	DWORD PTR [rax+84], ecx
	jbe	SHORT $LN1@CheckPalet
; Line 2390
	lea	r8, OFFSET FLAT:$SG83735
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2391
	xor	eax, eax
	jmp	SHORT $LN6@CheckPalet
$LN1@CheckPalet:
; Line 2393
	mov	eax, 1
$LN6@CheckPalet:
; Line 2394
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CheckPaletteHeader@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z ENDP ; CImageDisplay::CheckPaletteHeader
_TEXT	ENDS
PUBLIC	?GetDisplayFormat@CImageDisplay@@QEAAPEBUtagVIDEOINFO@@XZ ; CImageDisplay::GetDisplayFormat
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDisplayFormat@CImageDisplay@@QEAAPEBUtagVIDEOINFO@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?GetDisplayFormat@CImageDisplay@@QEAAPEBUtagVIDEOINFO@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDisplayFormat@CImageDisplay@@QEAAPEBUtagVIDEOINFO@@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetDisplayFormat@CImageDisplay@@QEAAPEBUtagVIDEOINFO@@XZ
_TEXT	SEGMENT
this$ = 16
?GetDisplayFormat@CImageDisplay@@QEAAPEBUtagVIDEOINFO@@XZ PROC ; CImageDisplay::GetDisplayFormat, COMDAT
; Line 2400
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 2401
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 56					; 00000038H
; Line 2402
	pop	rdi
	ret	0
?GetDisplayFormat@CImageDisplay@@QEAAPEBUtagVIDEOINFO@@XZ ENDP ; CImageDisplay::GetDisplayFormat
_TEXT	ENDS
PUBLIC	?IsPalettised@CImageDisplay@@QEAAHXZ		; CImageDisplay::IsPalettised
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsPalettised@CImageDisplay@@QEAAHXZ DD imagerel $LN5
	DD	imagerel $LN5+69
	DD	imagerel $unwind$?IsPalettised@CImageDisplay@@QEAAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsPalettised@CImageDisplay@@QEAAHXZ DD 021e01H
	DD	07006120aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?IsPalettised@CImageDisplay@@QEAAHXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?IsPalettised@CImageDisplay@@QEAAHXZ PROC		; CImageDisplay::IsPalettised, COMDAT
; Line 2408
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+32]
; Line 2409
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	cmp	eax, 8
	jg	SHORT $LN3@IsPalettis
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@IsPalettis
$LN3@IsPalettis:
	mov	DWORD PTR tv69[rsp], 0
$LN4@IsPalettis:
	mov	eax, DWORD PTR tv69[rsp]
; Line 2410
	add	rsp, 16
	pop	rdi
	ret	0
?IsPalettised@CImageDisplay@@QEAAHXZ ENDP		; CImageDisplay::IsPalettised
_TEXT	ENDS
PUBLIC	?GetDisplayDepth@CImageDisplay@@QEAAGXZ		; CImageDisplay::GetDisplayDepth
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDisplayDepth@CImageDisplay@@QEAAGXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?GetDisplayDepth@CImageDisplay@@QEAAGXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDisplayDepth@CImageDisplay@@QEAAGXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetDisplayDepth@CImageDisplay@@QEAAGXZ
_TEXT	SEGMENT
this$ = 16
?GetDisplayDepth@CImageDisplay@@QEAAGXZ PROC		; CImageDisplay::GetDisplayDepth, COMDAT
; Line 2416
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 2417
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
; Line 2418
	pop	rdi
	ret	0
?GetDisplayDepth@CImageDisplay@@QEAAGXZ ENDP		; CImageDisplay::GetDisplayDepth
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateFormat@CImageDisplay@@QEAAJPEAUtagVIDEOINFO@@@Z DD imagerel $LN8
	DD	imagerel $LN8+268
	DD	imagerel $unwind$?UpdateFormat@CImageDisplay@@QEAAJPEAUtagVIDEOINFO@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateFormat@CImageDisplay@@QEAAJPEAUtagVIDEOINFO@@@Z DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?UpdateFormat@CImageDisplay@@QEAAJPEAUtagVIDEOINFO@@@Z
_TEXT	SEGMENT
pbmi$ = 32
tv147 = 40
tv155 = 44
this$ = 64
pVideoInfo$ = 72
?UpdateFormat@CImageDisplay@@QEAAJPEAUtagVIDEOINFO@@@Z PROC ; CImageDisplay::UpdateFormat, COMDAT
; Line 2430
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 2431
	cmp	QWORD PTR pVideoInfo$[rsp], 0
	jne	SHORT $LN5@UpdateForm
	mov	r8d, 2431				; 0000097fH
	lea	rdx, OFFSET FLAT:$SG83750
	lea	rcx, OFFSET FLAT:$SG83751
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@UpdateForm:
; Line 2433
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	add	rax, 48					; 00000030H
	mov	QWORD PTR pbmi$[rsp], rax
; Line 2434
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	call	QWORD PTR __imp_SetRectEmpty
; Line 2435
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	add	rax, 16
	mov	rcx, rax
	call	QWORD PTR __imp_SetRectEmpty
; Line 2439
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	movzx	eax, WORD PTR [rax+62]
	cmp	eax, 8
	jg	SHORT $LN4@UpdateForm
; Line 2440
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	cmp	DWORD PTR [rax+80], 0
	jne	SHORT $LN3@UpdateForm
; Line 2441
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	movzx	eax, WORD PTR [rax+62]
	mov	ecx, 1
	mov	DWORD PTR tv147[rsp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv147[rsp]
	shl	eax, cl
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	mov	DWORD PTR [rcx+80], eax
$LN3@UpdateForm:
$LN4@UpdateForm:
; Line 2449
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	mov	ecx, DWORD PTR [rcx+80]
	cmp	DWORD PTR [rax+84], ecx
	jbe	SHORT $LN2@UpdateForm
; Line 2450
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	movzx	eax, WORD PTR [rax+62]
	mov	ecx, 1
	mov	DWORD PTR tv155[rsp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv155[rsp]
	shl	eax, cl
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	mov	DWORD PTR [rcx+84], eax
$LN2@UpdateForm:
; Line 2455
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	cmp	DWORD PTR [rax+68], 0
	jne	SHORT $LN1@UpdateForm
; Line 2456
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	GetBitmapSize
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	mov	DWORD PTR [rcx+68], eax
$LN1@UpdateForm:
; Line 2458
	xor	eax, eax
; Line 2459
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?UpdateFormat@CImageDisplay@@QEAAJPEAUtagVIDEOINFO@@@Z ENDP ; CImageDisplay::UpdateFormat
_TEXT	ENDS
PUBLIC	?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z ; CImageDisplay::GetBitMasks
PUBLIC	?CheckVideoType@CImageDisplay@@QEAAJPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckVideoType
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckVideoType@CImageDisplay@@QEAAJPEBUtagVIDEOINFO@@@Z DD imagerel $LN22
	DD	imagerel $LN22+655
	DD	imagerel $unwind$?CheckVideoType@CImageDisplay@@QEAAJPEBUtagVIDEOINFO@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckVideoType@CImageDisplay@@QEAAJPEBUtagVIDEOINFO@@@Z DD 022301H
	DD	0700b720fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CheckVideoType@CImageDisplay@@QEAAJPEBUtagVIDEOINFO@@@Z
_TEXT	SEGMENT
pInputMask$ = 32
pDisplayMask$ = 40
tv79 = 48
tv86 = 52
tv163 = 56
tv173 = 60
this$ = 80
pInput$ = 88
?CheckVideoType@CImageDisplay@@QEAAJPEBUtagVIDEOINFO@@@Z PROC ; CImageDisplay::CheckVideoType, COMDAT
; Line 2471
$LN22:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 2474
	mov	rcx, QWORD PTR pInput$[rsp]
	call	?CheckHeaderValidity@CImageDisplay@@SAHPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckHeaderValidity
	test	eax, eax
	jne	SHORT $LN11@CheckVideo
; Line 2475
	mov	eax, -2147024809			; ffffffff80070057H
	jmp	$LN12@CheckVideo
$LN11@CheckVideo:
; Line 2480
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	mov	rcx, QWORD PTR pInput$[rsp]
	movzx	ecx, WORD PTR [rcx+62]
	cmp	eax, ecx
	jne	$LN10@CheckVideo
; Line 2481
	mov	rax, QWORD PTR pInput$[rsp]
	movzx	eax, WORD PTR [rax+62]
	cmp	eax, 8
	jg	SHORT $LN14@CheckVideo
	mov	DWORD PTR tv79[rsp], 1
	jmp	SHORT $LN15@CheckVideo
$LN14@CheckVideo:
	mov	DWORD PTR tv79[rsp], 0
$LN15@CheckVideo:
	cmp	DWORD PTR tv79[rsp], 1
	jne	SHORT $LN9@CheckVideo
; Line 2482
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	cmp	eax, 8
	jg	SHORT $LN16@CheckVideo
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN17@CheckVideo
$LN16@CheckVideo:
	mov	DWORD PTR tv86[rsp], 0
$LN17@CheckVideo:
	cmp	DWORD PTR tv86[rsp], 1
	je	SHORT $LN8@CheckVideo
	mov	r8d, 2482				; 000009b2H
	lea	rdx, OFFSET FLAT:$SG83769
	lea	rcx, OFFSET FLAT:$SG83770
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN8@CheckVideo:
; Line 2483
	lea	r8, OFFSET FLAT:$SG83771
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2484
	xor	eax, eax
	jmp	$LN12@CheckVideo
$LN9@CheckVideo:
$LN10@CheckVideo:
; Line 2491
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	mov	rcx, QWORD PTR pInput$[rsp]
	movzx	ecx, WORD PTR [rcx+62]
	cmp	eax, ecx
	jle	SHORT $LN7@CheckVideo
; Line 2492
	lea	r8, OFFSET FLAT:$SG83773
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2493
	xor	eax, eax
	jmp	$LN12@CheckVideo
$LN7@CheckVideo:
; Line 2498
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	mov	rcx, QWORD PTR pInput$[rsp]
	movzx	ecx, WORD PTR [rcx+62]
	cmp	eax, ecx
	jge	SHORT $LN6@CheckVideo
; Line 2499
	lea	r8, OFFSET FLAT:$SG83775
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2500
	mov	eax, -2147024809			; ffffffff80070057H
	jmp	$LN12@CheckVideo
$LN6@CheckVideo:
; Line 2506
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	mov	rcx, QWORD PTR pInput$[rsp]
	movzx	ecx, WORD PTR [rcx+62]
	cmp	eax, ecx
	je	SHORT $LN5@CheckVideo
	mov	r8d, 2506				; 000009caH
	lea	rdx, OFFSET FLAT:$SG83778
	lea	rcx, OFFSET FLAT:$SG83779
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@CheckVideo:
; Line 2507
	mov	rax, QWORD PTR pInput$[rsp]
	movzx	eax, WORD PTR [rax+62]
	cmp	eax, 8
	jg	SHORT $LN18@CheckVideo
	mov	DWORD PTR tv163[rsp], 1
	jmp	SHORT $LN19@CheckVideo
$LN18@CheckVideo:
	mov	DWORD PTR tv163[rsp], 0
$LN19@CheckVideo:
	cmp	DWORD PTR tv163[rsp], 0
	je	SHORT $LN4@CheckVideo
	mov	r8d, 2507				; 000009cbH
	lea	rdx, OFFSET FLAT:$SG83781
	lea	rcx, OFFSET FLAT:$SG83782
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@CheckVideo:
; Line 2508
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	cmp	eax, 8
	jg	SHORT $LN20@CheckVideo
	mov	DWORD PTR tv173[rsp], 1
	jmp	SHORT $LN21@CheckVideo
$LN20@CheckVideo:
	mov	DWORD PTR tv173[rsp], 0
$LN21@CheckVideo:
	cmp	DWORD PTR tv173[rsp], 0
	je	SHORT $LN3@CheckVideo
	mov	r8d, 2508				; 000009ccH
	lea	rdx, OFFSET FLAT:$SG83784
	lea	rcx, OFFSET FLAT:$SG83785
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@CheckVideo:
; Line 2515
	mov	rdx, QWORD PTR pInput$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z ; CImageDisplay::GetBitMasks
	mov	QWORD PTR pInputMask$[rsp], rax
; Line 2516
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 56					; 00000038H
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z ; CImageDisplay::GetBitMasks
	mov	QWORD PTR pDisplayMask$[rsp], rax
; Line 2520
	mov	rax, QWORD PTR pInputMask$[rsp]
	mov	rcx, QWORD PTR pDisplayMask$[rsp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN1@CheckVideo
	mov	rax, QWORD PTR pInputMask$[rsp]
	mov	rcx, QWORD PTR pDisplayMask$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+4], ecx
	jne	SHORT $LN1@CheckVideo
	mov	rax, QWORD PTR pInputMask$[rsp]
	mov	rcx, QWORD PTR pDisplayMask$[rsp]
	mov	ecx, DWORD PTR [rcx+8]
	cmp	DWORD PTR [rax+8], ecx
	je	SHORT $LN2@CheckVideo
$LN1@CheckVideo:
; Line 2522
	lea	r8, OFFSET FLAT:$SG83791
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2523
	mov	eax, -2147024809			; ffffffff80070057H
	jmp	SHORT $LN12@CheckVideo
$LN2@CheckVideo:
; Line 2526
	lea	r8, OFFSET FLAT:$SG83793
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2527
	xor	eax, eax
$LN12@CheckVideo:
; Line 2528
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?CheckVideoType@CImageDisplay@@QEAAJPEBUtagVIDEOINFO@@@Z ENDP ; CImageDisplay::CheckVideoType
_TEXT	ENDS
EXTRN	?bits888@@3QBKB:BYTE				; bits888
EXTRN	?bits555@@3QBKB:BYTE				; bits555
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z DD imagerel $LN11
	DD	imagerel $LN11+178
	DD	imagerel $unwind$?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT ?FailMasks@?1??GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z@4QBKB
CONST	SEGMENT
?FailMasks@?1??GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z@4QBKB DD 00H ; `CImageDisplay::GetBitMasks'::`2'::FailMasks
	DD	00H
	DD	00H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z
_TEXT	SEGMENT
tv81 = 32
this$ = 64
pVideoInfo$ = 72
?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z PROC ; CImageDisplay::GetBitMasks, COMDAT
; Line 2534
$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 2537
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	cmp	DWORD PTR [rax+64], 3
	jne	SHORT $LN8@GetBitMask
; Line 2538
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	mov	eax, DWORD PTR [rax+48]
	mov	rcx, QWORD PTR pVideoInfo$[rsp]
	lea	rax, QWORD PTR [rcx+rax+48]
	jmp	SHORT $LN9@GetBitMask
$LN8@GetBitMask:
; Line 2541
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	cmp	DWORD PTR [rax+64], 0
	je	SHORT $LN7@GetBitMask
	mov	r8d, 2541				; 000009edH
	lea	rdx, OFFSET FLAT:$SG83804
	lea	rcx, OFFSET FLAT:$SG83805
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN7@GetBitMask:
; Line 2543
	mov	rax, QWORD PTR pVideoInfo$[rsp]
	movzx	eax, WORD PTR [rax+62]
	mov	DWORD PTR tv81[rsp], eax
	cmp	DWORD PTR tv81[rsp], 16
	je	SHORT $LN4@GetBitMask
	cmp	DWORD PTR tv81[rsp], 24
	je	SHORT $LN3@GetBitMask
	cmp	DWORD PTR tv81[rsp], 32			; 00000020H
	je	SHORT $LN2@GetBitMask
	jmp	SHORT $LN1@GetBitMask
$LN4@GetBitMask:
; Line 2544
	lea	rax, OFFSET FLAT:?bits555@@3QBKB	; bits555
	jmp	SHORT $LN9@GetBitMask
$LN3@GetBitMask:
; Line 2545
	lea	rax, OFFSET FLAT:?bits888@@3QBKB	; bits888
	jmp	SHORT $LN9@GetBitMask
$LN2@GetBitMask:
; Line 2546
	lea	rax, OFFSET FLAT:?bits888@@3QBKB	; bits888
	jmp	SHORT $LN9@GetBitMask
$LN1@GetBitMask:
; Line 2547
	lea	rax, OFFSET FLAT:?FailMasks@?1??GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z@4QBKB
$LN9@GetBitMask:
; Line 2549
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z ENDP ; CImageDisplay::GetBitMasks
_TEXT	ENDS
PUBLIC	?Subtype@CMediaType@@QEBAPEBU_GUID@@XZ		; CMediaType::Subtype
PUBLIC	?Type@CMediaType@@QEBAPEBU_GUID@@XZ		; CMediaType::Type
PUBLIC	!=
PUBLIC	?FormatType@CMediaType@@QEBAPEBU_GUID@@XZ	; CMediaType::FormatType
PUBLIC	?CheckMediaType@CImageDisplay@@QEAAJPEBVCMediaType@@@Z ; CImageDisplay::CheckMediaType
EXTRN	GetBitCount:PROC
EXTRN	MEDIATYPE_Video:BYTE
EXTRN	FORMAT_VideoInfo:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckMediaType@CImageDisplay@@QEAAJPEBVCMediaType@@@Z DD imagerel $LN8
	DD	imagerel $LN8+364
	DD	imagerel $unwind$?CheckMediaType@CImageDisplay@@QEAAJPEBVCMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckMediaType@CImageDisplay@@QEAAJPEBVCMediaType@@@Z DD 022301H
	DD	0700b920fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CheckMediaType@CImageDisplay@@QEAAJPEBVCMediaType@@@Z
_TEXT	SEGMENT
pFormatType$ = 32
Length$ = 40
pInput$ = 48
pMajorType$ = 56
pSubType$ = 64
this$ = 96
pmtIn$ = 104
?CheckMediaType@CImageDisplay@@QEAAJPEBVCMediaType@@@Z PROC ; CImageDisplay::CheckMediaType, COMDAT
; Line 2559
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
; Line 2562
	mov	rcx, QWORD PTR pmtIn$[rsp]
	call	?FormatType@CMediaType@@QEBAPEBU_GUID@@XZ ; CMediaType::FormatType
	mov	QWORD PTR pFormatType$[rsp], rax
; Line 2563
	lea	rdx, OFFSET FLAT:FORMAT_VideoInfo
	mov	rcx, QWORD PTR pFormatType$[rsp]
	call	!=
	test	eax, eax
	je	SHORT $LN5@CheckMedia
; Line 2564
	lea	r8, OFFSET FLAT:$SG83820
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2565
	mov	eax, -2147024809			; ffffffff80070057H
	jmp	$LN6@CheckMedia
$LN5@CheckMedia:
; Line 2567
	mov	rcx, QWORD PTR pmtIn$[rsp]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	test	rax, rax
	jne	SHORT $LN4@CheckMedia
	mov	r8d, 2567				; 00000a07H
	lea	rdx, OFFSET FLAT:$SG83823
	lea	rcx, OFFSET FLAT:$SG83824
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@CheckMedia:
; Line 2571
	mov	rcx, QWORD PTR pmtIn$[rsp]
	call	?FormatLength@CMediaType@@QEBAKXZ	; CMediaType::FormatLength
	mov	DWORD PTR Length$[rsp], eax
; Line 2572
	mov	eax, DWORD PTR Length$[rsp]
	cmp	rax, 88					; 00000058H
	jae	SHORT $LN3@CheckMedia
; Line 2573
	lea	r8, OFFSET FLAT:$SG83831
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2574
	mov	eax, -2147467259			; ffffffff80004005H
	jmp	$LN6@CheckMedia
$LN3@CheckMedia:
; Line 2577
	mov	rcx, QWORD PTR pmtIn$[rsp]
	call	?Format@CMediaType@@QEBAPEAEXZ		; CMediaType::Format
	mov	QWORD PTR pInput$[rsp], rax
; Line 2581
	mov	rcx, QWORD PTR pmtIn$[rsp]
	call	?Type@CMediaType@@QEBAPEBU_GUID@@XZ	; CMediaType::Type
	mov	QWORD PTR pMajorType$[rsp], rax
; Line 2582
	lea	rdx, OFFSET FLAT:MEDIATYPE_Video
	mov	rcx, QWORD PTR pMajorType$[rsp]
	call	!=
	test	eax, eax
	je	SHORT $LN2@CheckMedia
; Line 2583
	lea	r8, OFFSET FLAT:$SG83837
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2584
	mov	eax, -2147024809			; ffffffff80070057H
	jmp	SHORT $LN6@CheckMedia
$LN2@CheckMedia:
; Line 2589
	mov	rcx, QWORD PTR pmtIn$[rsp]
	call	?Subtype@CMediaType@@QEBAPEBU_GUID@@XZ	; CMediaType::Subtype
	mov	QWORD PTR pSubType$[rsp], rax
; Line 2590
	mov	rcx, QWORD PTR pSubType$[rsp]
	call	GetBitCount
	movzx	eax, ax
	cmp	eax, 65535				; 0000ffffH
	jne	SHORT $LN1@CheckMedia
; Line 2591
	lea	r8, OFFSET FLAT:$SG83841
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 2592
	mov	eax, -2147024809			; ffffffff80070057H
	jmp	SHORT $LN6@CheckMedia
$LN1@CheckMedia:
; Line 2594
	mov	rdx, QWORD PTR pInput$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?CheckVideoType@CImageDisplay@@QEAAJPEBUtagVIDEOINFO@@@Z ; CImageDisplay::CheckVideoType
$LN6@CheckMedia:
; Line 2595
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?CheckMediaType@CImageDisplay@@QEAAJPEBVCMediaType@@@Z ENDP ; CImageDisplay::CheckMediaType
_TEXT	ENDS
PUBLIC	==
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
pdata	SEGMENT
$pdata$!= DD	imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$!=
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$!= DD	022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT !=
_TEXT	SEGMENT
tv68 = 32
guidOne$ = 64
guidOther$ = 72
!=	PROC						; COMDAT
; Line 198
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 199
	mov	rdx, QWORD PTR guidOther$[rsp]
	mov	rcx, QWORD PTR guidOne$[rsp]
	call	==
	test	eax, eax
	jne	SHORT $LN3@
	mov	DWORD PTR tv68[rsp], 1
	jmp	SHORT $LN4@
$LN3@:
	mov	DWORD PTR tv68[rsp], 0
$LN4@:
	mov	eax, DWORD PTR tv68[rsp]
; Line 200
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
!=	ENDP
_TEXT	ENDS
PUBLIC	IsEqualGUID
;	COMDAT pdata
pdata	SEGMENT
$pdata$== DD	imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$==
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$== DD	022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ==
_TEXT	SEGMENT
guidOne$ = 48
guidOther$ = 56
==	PROC						; COMDAT
; Line 193
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 194
	mov	rdx, QWORD PTR guidOther$[rsp]
	mov	rcx, QWORD PTR guidOne$[rsp]
	call	IsEqualGUID
; Line 195
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
==	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$IsEqualGUID DD imagerel $LN5
	DD	imagerel $LN5+88
	DD	imagerel $unwind$IsEqualGUID
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsEqualGUID DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT IsEqualGUID
_TEXT	SEGMENT
tv69 = 32
rguid1$ = 64
rguid2$ = 72
IsEqualGUID PROC					; COMDAT
; Line 160
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 161
	mov	r8d, 16
	mov	rdx, QWORD PTR rguid2$[rsp]
	mov	rcx, QWORD PTR rguid1$[rsp]
	call	memcmp
	test	eax, eax
	jne	SHORT $LN3@IsEqualGUI
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
	mov	DWORD PTR tv69[rsp], 0
$LN4@IsEqualGUI:
	mov	eax, DWORD PTR tv69[rsp]
; Line 162
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
IsEqualGUID ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\mtype.h
pdata	SEGMENT
$pdata$?Type@CMediaType@@QEBAPEBU_GUID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?Type@CMediaType@@QEBAPEBU_GUID@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Type@CMediaType@@QEBAPEBU_GUID@@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Type@CMediaType@@QEBAPEBU_GUID@@XZ
_TEXT	SEGMENT
this$ = 16
?Type@CMediaType@@QEBAPEBU_GUID@@XZ PROC		; CMediaType::Type, COMDAT
; Line 39
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
?Type@CMediaType@@QEBAPEBU_GUID@@XZ ENDP		; CMediaType::Type
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Subtype@CMediaType@@QEBAPEBU_GUID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?Subtype@CMediaType@@QEBAPEBU_GUID@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Subtype@CMediaType@@QEBAPEBU_GUID@@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Subtype@CMediaType@@QEBAPEBU_GUID@@XZ
_TEXT	SEGMENT
this$ = 16
?Subtype@CMediaType@@QEBAPEBU_GUID@@XZ PROC		; CMediaType::Subtype, COMDAT
; Line 41
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 16
	pop	rdi
	ret	0
?Subtype@CMediaType@@QEBAPEBU_GUID@@XZ ENDP		; CMediaType::Subtype
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FormatType@CMediaType@@QEBAPEBU_GUID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?FormatType@CMediaType@@QEBAPEBU_GUID@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FormatType@CMediaType@@QEBAPEBU_GUID@@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?FormatType@CMediaType@@QEBAPEBU_GUID@@XZ
_TEXT	SEGMENT
this$ = 16
?FormatType@CMediaType@@QEBAPEBU_GUID@@XZ PROC		; CMediaType::FormatType, COMDAT
; Line 59
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	pop	rdi
	ret	0
?FormatType@CMediaType@@QEBAPEBU_GUID@@XZ ENDP		; CMediaType::FormatType
_TEXT	ENDS
PUBLIC	?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z	; CImageDisplay::GetColourMask
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\winutil.cpp
pdata	SEGMENT
$pdata$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z DD imagerel $LN10
	DD	imagerel $LN10+517
	DD	imagerel $unwind$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??GetColourMask@CImageDisplay@@QEAAHPEAK00@Z@4HA DD imagerel ?dtor$0@?0??GetColourMask@CImageDisplay@@QEAAHPEAK00@Z@4HA
	DD	imagerel ?dtor$0@?0??GetColourMask@CImageDisplay@@QEAAHPEAK00@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??GetColourMask@CImageDisplay@@QEAAHPEAK00@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z DD imagerel ?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z
	DD	0ffffffffH
	DD	imagerel ?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z+82
	DD	00H
	DD	imagerel ?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z+149
	DD	0ffffffffH
	DD	imagerel ?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z+168
	DD	00H
	DD	imagerel ?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z+232
	DD	0ffffffffH
	DD	imagerel ?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z+251
	DD	00H
	DD	imagerel ?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z+473
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??GetColourMask@CImageDisplay@@QEAAHPEAK00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z DD 033f11H
	DD	012011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetColourMask@CImageDisplay@@QEAAHPEAK00@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z$rtcName$0 DB 063H ; CImageDisplay::GetColourMask
	DB	044H
	DB	069H
	DB	073H
	DB	070H
	DB	06cH
	DB	061H
	DB	079H
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+3
?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z$rtcName$1 DB 070H ; CImageDisplay::GetColourMask
	DB	04fH
	DB	075H
	DB	074H
	DB	070H
	DB	075H
	DB	074H
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	00H
	ORG $+4
?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z$rtcVarDesc DD 048H ; CImageDisplay::GetColourMask
	DD	018H
	DQ	FLAT:?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z$rtcName$0
	ORG $+96
?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z$rtcFrameData DD 02H ; CImageDisplay::GetColourMask
	DD	00H
	DQ	FLAT:?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z$rtcVarDesc
$cppxdata$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z
	DD	080H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z
_TEXT	SEGMENT
cDisplayLock$ = 40
pBitFields$ = 56
pOutputMask$ = 72
iColour$83861 = 100
PrefixBits$83865 = 104
SetBits$83866 = 108
$T86064 = 112
$T86065 = 116
$T86066 = 120
$T86072 = 128
this$ = 160
pMaskRed$ = 168
pMaskGreen$ = 176
pMaskBlue$ = 184
?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z PROC	; CImageDisplay::GetColourMask, COMDAT
; Line 2607
$LN10:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H
	mov	rdi, rsp
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]
	mov	QWORD PTR $T86072[rsp], -2
; Line 2608
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR cDisplayLock$[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 2609
	mov	rax, QWORD PTR pMaskRed$[rsp]
	mov	DWORD PTR [rax], 255			; 000000ffH
; Line 2610
	mov	rax, QWORD PTR pMaskGreen$[rsp]
	mov	DWORD PTR [rax], 255			; 000000ffH
; Line 2611
	mov	rax, QWORD PTR pMaskBlue$[rsp]
	mov	DWORD PTR [rax], 255			; 000000ffH
; Line 2615
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	cmp	eax, 16
	jge	SHORT $LN6@GetColourM
; Line 2616
	mov	DWORD PTR $T86064[rsp], 0
	lea	rcx, QWORD PTR cDisplayLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T86064[rsp]
	jmp	$LN7@GetColourM
$LN6@GetColourM:
; Line 2623
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, WORD PTR [rax+118]
	cmp	eax, 24
	jne	SHORT $LN5@GetColourM
; Line 2624
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+120], 0
	je	SHORT $LN4@GetColourM
	mov	r8d, 2624				; 00000a40H
	lea	rdx, OFFSET FLAT:$SG83854
	lea	rcx, OFFSET FLAT:$SG83855
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN4@GetColourM:
; Line 2625
	mov	DWORD PTR $T86065[rsp], 1
	lea	rcx, QWORD PTR cDisplayLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T86065[rsp]
	jmp	$LN7@GetColourM
$LN5@GetColourM:
; Line 2630
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 56					; 00000038H
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetBitMasks@CImageDisplay@@QEAAPEBKPEBUtagVIDEOINFO@@@Z ; CImageDisplay::GetBitMasks
	mov	QWORD PTR pBitFields$[rsp], rax
; Line 2631
	mov	rax, QWORD PTR pMaskRed$[rsp]
	mov	QWORD PTR pOutputMask$[rsp], rax
	mov	rax, QWORD PTR pMaskGreen$[rsp]
	mov	QWORD PTR pOutputMask$[rsp+8], rax
	mov	rax, QWORD PTR pMaskBlue$[rsp]
	mov	QWORD PTR pOutputMask$[rsp+16], rax
; Line 2637
	mov	DWORD PTR iColour$83861[rsp], 0
	jmp	SHORT $LN3@GetColourM
$LN2@GetColourM:
	mov	eax, DWORD PTR iColour$83861[rsp]
	inc	eax
	mov	DWORD PTR iColour$83861[rsp], eax
$LN3@GetColourM:
	cmp	DWORD PTR iColour$83861[rsp], 2
	jg	SHORT $LN1@GetColourM
; Line 2641
	movsxd	rax, DWORD PTR iColour$83861[rsp]
	mov	rcx, QWORD PTR pBitFields$[rsp]
	mov	ecx, DWORD PTR [rcx+rax*4]
	call	?CountPrefixBits@CImageDisplay@@KAKK@Z	; CImageDisplay::CountPrefixBits
	mov	DWORD PTR PrefixBits$83865[rsp], eax
; Line 2642
	movsxd	rax, DWORD PTR iColour$83861[rsp]
	mov	rcx, QWORD PTR pBitFields$[rsp]
	mov	ecx, DWORD PTR [rcx+rax*4]
	call	?CountSetBits@CImageDisplay@@KAKK@Z	; CImageDisplay::CountSetBits
	mov	DWORD PTR SetBits$83866[rsp], eax
; Line 2648
	movsxd	rax, DWORD PTR iColour$83861[rsp]
	mov	ecx, DWORD PTR PrefixBits$83865[rsp]
	mov	rdx, QWORD PTR pBitFields$[rsp]
	mov	eax, DWORD PTR [rdx+rax*4]
	shr	eax, cl
	movsxd	rcx, DWORD PTR iColour$83861[rsp]
	mov	rcx, QWORD PTR pOutputMask$[rsp+rcx*8]
	mov	DWORD PTR [rcx], eax
; Line 2649
	movsxd	rax, DWORD PTR iColour$83861[rsp]
	mov	rax, QWORD PTR pOutputMask$[rsp+rax*8]
	mov	ecx, 8
	sub	ecx, DWORD PTR SetBits$83866[rsp]
	mov	eax, DWORD PTR [rax]
	shl	eax, cl
	movsxd	rcx, DWORD PTR iColour$83861[rsp]
	mov	rcx, QWORD PTR pOutputMask$[rsp+rcx*8]
	mov	DWORD PTR [rcx], eax
; Line 2650
	jmp	$LN2@GetColourM
$LN1@GetColourM:
; Line 2651
	mov	DWORD PTR $T86066[rsp], 1
	lea	rcx, QWORD PTR cDisplayLock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T86066[rsp]
$LN7@GetColourM:
; Line 2652
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
?GetColourMask@CImageDisplay@@QEAAHPEAK00@Z ENDP	; CImageDisplay::GetColourMask
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cDisplayLock$ = 40
pBitFields$ = 56
pOutputMask$ = 72
iColour$83861 = 100
PrefixBits$83865 = 104
SetBits$83866 = 108
$T86064 = 112
$T86065 = 116
$T86066 = 120
$T86072 = 128
this$ = 160
pMaskRed$ = 168
pMaskGreen$ = 176
pMaskBlue$ = 184
?dtor$0@?0??GetColourMask@CImageDisplay@@QEAAHPEAK00@Z@4HA PROC ; `CImageDisplay::GetColourMask'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR cDisplayLock$[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??GetColourMask@CImageDisplay@@QEAAHPEAK00@Z@4HA ENDP ; `CImageDisplay::GetColourMask'::`1'::dtor$0
text$x	ENDS
PUBLIC	ConvertVideoInfoToVideoInfo2
EXTRN	__imp_CoTaskMemFree:PROC
EXTRN	FORMAT_VideoInfo2:BYTE
EXTRN	__imp_CoTaskMemAlloc:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$ConvertVideoInfoToVideoInfo2 DD imagerel $LN5
	DD	imagerel $LN5+377
	DD	imagerel $unwind$ConvertVideoInfoToVideoInfo2
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ConvertVideoInfoToVideoInfo2 DD 031f01H
	DD	07007820bH
	DD	06006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ConvertVideoInfoToVideoInfo2
_TEXT	SEGMENT
pVideoInfo$ = 32
pvNew$ = 40
pVideoInfo2$ = 48
tv128 = 56
pmt$ = 96
ConvertVideoInfoToVideoInfo2 PROC			; COMDAT
; Line 2658
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H
	mov	rdi, rsp
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
; Line 2659
	mov	rax, QWORD PTR pmt$[rsp]
	add	rax, 44					; 0000002cH
	lea	rdx, OFFSET FLAT:FORMAT_VideoInfo
	mov	rcx, rax
	call	==
	test	eax, eax
	jne	SHORT $LN2@ConvertVid
	mov	r8d, 2659				; 00000a63H
	lea	rdx, OFFSET FLAT:$SG83872
	lea	rcx, OFFSET FLAT:$SG83873
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@ConvertVid:
; Line 2660
	mov	rax, QWORD PTR pmt$[rsp]
	mov	rax, QWORD PTR [rax+80]
	mov	QWORD PTR pVideoInfo$[rsp], rax
; Line 2662
	mov	rax, QWORD PTR pmt$[rsp]
	mov	eax, DWORD PTR [rax+72]
	add	rax, 24
	mov	rcx, rax
	call	QWORD PTR __imp_CoTaskMemAlloc
	mov	QWORD PTR pvNew$[rsp], rax
; Line 2663
	cmp	QWORD PTR pvNew$[rsp], 0
	jne	SHORT $LN1@ConvertVid
; Line 2664
	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	$LN3@ConvertVid
$LN1@ConvertVid:
; Line 2666
	mov	r8d, 48					; 00000030H
	mov	rax, QWORD PTR pmt$[rsp]
	mov	rdx, QWORD PTR [rax+80]
	mov	rcx, QWORD PTR pvNew$[rsp]
	call	memcpy
; Line 2668
	mov	rax, QWORD PTR pvNew$[rsp]
	add	rax, 48					; 00000030H
	mov	r8d, 24
	xor	edx, edx
	mov	rcx, rax
	call	memset
; Line 2671
	mov	rax, QWORD PTR pmt$[rsp]
	mov	eax, DWORD PTR [rax+72]
	sub	eax, 48					; 00000030H
	mov	eax, eax
	mov	rcx, QWORD PTR pmt$[rsp]
	mov	rcx, QWORD PTR [rcx+80]
	add	rcx, 48					; 00000030H
	mov	rdx, QWORD PTR pvNew$[rsp]
	add	rdx, 72					; 00000048H
	mov	QWORD PTR tv128[rsp], rdx
	mov	r8d, eax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv128[rsp]
	mov	rcx, rax
	call	memcpy
; Line 2672
	mov	rax, QWORD PTR pvNew$[rsp]
	mov	QWORD PTR pVideoInfo2$[rsp], rax
; Line 2673
	mov	rax, QWORD PTR pVideoInfo2$[rsp]
	mov	rcx, QWORD PTR pVideoInfo2$[rsp]
	mov	ecx, DWORD PTR [rcx+76]
	mov	DWORD PTR [rax+56], ecx
; Line 2674
	mov	rax, QWORD PTR pVideoInfo2$[rsp]
	mov	rcx, QWORD PTR pVideoInfo2$[rsp]
	mov	ecx, DWORD PTR [rcx+80]
	mov	DWORD PTR [rax+60], ecx
; Line 2675
	mov	rax, QWORD PTR pmt$[rsp]
	lea	rcx, OFFSET FLAT:FORMAT_VideoInfo2
	lea	rdi, QWORD PTR [rax+44]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 2676
	mov	rax, QWORD PTR pmt$[rsp]
	mov	rcx, QWORD PTR [rax+80]
	call	QWORD PTR __imp_CoTaskMemFree
; Line 2677
	mov	rax, QWORD PTR pmt$[rsp]
	mov	rcx, QWORD PTR pvNew$[rsp]
	mov	QWORD PTR [rax+80], rcx
; Line 2678
	mov	rax, QWORD PTR pmt$[rsp]
	mov	eax, DWORD PTR [rax+72]
	add	rax, 24
	mov	rcx, QWORD PTR pmt$[rsp]
	mov	DWORD PTR [rcx+72], eax
; Line 2679
	xor	eax, eax
$LN3@ConvertVid:
; Line 2680
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
ConvertVideoInfoToVideoInfo2 ENDP
_TEXT	ENDS
END

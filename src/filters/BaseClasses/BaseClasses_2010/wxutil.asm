; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG82248 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
	ORG $+4
$SG82249 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'm'
	DB	00H, '_', 00H, 'h', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG82284 DB	'C', 00H, 'o', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'E'
	DB	00H, 'x', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'd', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG82329 DB	'o', 00H, 'l', 00H, 'e', 00H, '3', 00H, '2', 00H, '.', 00H
	DB	'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+4
$SG82336 DB	'CoInitializeEx', 00H
	ORG $+1
$SG82339 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
	ORG $+4
$SG82340 DB	'"', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H
	DB	'n', 00H, '''', 00H, 't', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'o', 00H, 'l', 00H
	DB	'e', 00H, '3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, '"', 00H, 00H, 00H
$SG82346 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
	ORG $+4
$SG82347 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'm'
	DB	00H, '_', 00H, 'h', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82356 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
	ORG $+4
$SG82357 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'H', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'm'
	DB	00H, '_', 00H, 'h', 00H, 'S', 00H, 'e', 00H, 'm', 00H, ')', 00H
	DB	00H, 00H
$SG82417 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG82575 DB	'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'b', 00H, 'o'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H
	DB	'w', 00H, 'a', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	' ', 00H, '%', 00H, 'x', 00H, ' ', 00H, 'o', 00H, 'w', 00H, 'n'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'b', 00H, 'y', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
$SG82578 DB	'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 'w'
	DB	00H, ' ', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 's', 00H, ' ', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, '%', 00H, 'x'
	DB	00H, 00H, 00H
	ORG $+2
$SG82584 DB	'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'l'
	DB	00H, 'e', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, '%'
	DB	00H, 'x', 00H, 00H, 00H
$SG82621 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
	ORG $+4
$SG82622 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82626 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
	ORG $+4
$SG82627 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82677 DB	'A', 00H, 'M', 00H, 'U', 00H, 'n', 00H, 'b', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'k', 00H, 00H, 00H
CONST	ENDS
;	COMDAT IID_IAMFilterGraphCallback
CONST	SEGMENT
IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??0CAMEvent@@QEAA@H@Z				; CAMEvent::CAMEvent
EXTRN	__imp_CreateEventW:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.cpp
pdata	SEGMENT
$pdata$??0CAMEvent@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0CAMEvent@@QEAA@H@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAMEvent@@QEAA@H@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CAMEvent@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
fManualReset$ = 56
??0CAMEvent@@QEAA@H@Z PROC				; CAMEvent::CAMEvent, COMDAT
; Line 68
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 69
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, DWORD PTR fManualReset$[rsp]
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateEventW
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax
; Line 70
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CAMEvent@@QEAA@H@Z ENDP				; CAMEvent::CAMEvent
_TEXT	ENDS
PUBLIC	??1CAMEvent@@QEAA@XZ				; CAMEvent::~CAMEvent
EXTRN	?DbgAssert@@YAXPEB_W0H@Z:PROC			; DbgAssert
EXTRN	__imp_CloseHandle:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAMEvent@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$??1CAMEvent@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAMEvent@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CAMEvent@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAMEvent@@QEAA@XZ PROC				; CAMEvent::~CAMEvent, COMDAT
; Line 73
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 74
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@CAMEvent
; Line 75
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN1@CAMEvent
	mov	r8d, 75					; 0000004bH
	lea	rdx, OFFSET FLAT:$SG82248
	lea	rcx, OFFSET FLAT:$SG82249
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CAMEvent:
$LN2@CAMEvent:
; Line 77
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CAMEvent@@QEAA@XZ ENDP				; CAMEvent::~CAMEvent
_TEXT	ENDS
PUBLIC	?WaitMsg@CAMMsgEvent@@QEAAHK@Z			; CAMMsgEvent::WaitMsg
EXTRN	__imp_PeekMessageW:PROC
EXTRN	__imp_MsgWaitForMultipleObjects:PROC
EXTRN	__imp_timeGetTime:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_UninitUse:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WaitMsg@CAMMsgEvent@@QEAAHK@Z DD imagerel $LN14
	DD	imagerel $LN14+349
	DD	imagerel $unwind$?WaitMsg@CAMMsgEvent@@QEAAHK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WaitMsg@CAMMsgEvent@@QEAAHK@Z DD 032801H
	DD	0140111H
	DD	0700aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?WaitMsg@CAMMsgEvent@@QEAAHK@Z$rtcName$0 DB 064H	; CAMMsgEvent::WaitMsg
	DB	077H
	DB	053H
	DB	074H
	DB	061H
	DB	072H
	DB	074H
	DB	054H
	DB	069H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+4
?WaitMsg@CAMMsgEvent@@QEAAHK@Z$rtcName$1 DB 04dH	; CAMMsgEvent::WaitMsg
	DB	065H
	DB	073H
	DB	073H
	DB	061H
	DB	067H
	DB	065H
	DB	00H
	ORG $+8
?WaitMsg@CAMMsgEvent@@QEAAHK@Z$rtcVarDesc DD 048H	; CAMMsgEvent::WaitMsg
	DD	030H
	DQ	FLAT:?WaitMsg@CAMMsgEvent@@QEAAHK@Z$rtcName$1
	ORG $+48
?WaitMsg@CAMMsgEvent@@QEAAHK@Z$rtcFrameData DD 01H	; CAMMsgEvent::WaitMsg
	DD	00H
	DQ	FLAT:?WaitMsg@CAMMsgEvent@@QEAAHK@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?WaitMsg@CAMMsgEvent@@QEAAHK@Z
_TEXT	SEGMENT
dwWait$ = 48
dwStartTime$ = 52
dwWaitTime$ = 56
Message$82263 = 72
dwElapsed$82265 = 132
$T83376 = 136
tv88 = 140
tv91 = 144
this$ = 176
dwTimeout$ = 184
?WaitMsg@CAMMsgEvent@@QEAAHK@Z PROC			; CAMMsgEvent::WaitMsg, COMDAT
; Line 84
$LN14:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	rdi, rsp
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	BYTE PTR $T83376[rsp], 0
; Line 92
	mov	eax, DWORD PTR dwTimeout$[rsp]
	mov	DWORD PTR dwWaitTime$[rsp], eax
; Line 97
	cmp	DWORD PTR dwWaitTime$[rsp], -1		; ffffffffH
	je	SHORT $LN6@WaitMsg
; Line 98
	call	QWORD PTR __imp_timeGetTime
	mov	BYTE PTR $T83376[rsp], 1
	mov	DWORD PTR dwStartTime$[rsp], eax
$LN6@WaitMsg:
$LN5@WaitMsg:
; Line 102
	mov	DWORD PTR [rsp+32], 64			; 00000040H
	mov	r9d, DWORD PTR dwWaitTime$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR this$[rsp]
	mov	ecx, 1
	call	QWORD PTR __imp_MsgWaitForMultipleObjects
	mov	DWORD PTR dwWait$[rsp], eax
; Line 103
	cmp	DWORD PTR dwWait$[rsp], 1
	jne	$LN2@WaitMsg
; Line 105
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR Message$82263[rsp]
	call	QWORD PTR __imp_PeekMessageW
; Line 110
	cmp	DWORD PTR dwWaitTime$[rsp], -1		; ffffffffH
	je	SHORT $LN1@WaitMsg
; Line 112
	cmp	BYTE PTR $T83376[rsp], 0
	jne	SHORT $LN13@WaitMsg
	lea	rcx, OFFSET FLAT:?WaitMsg@CAMMsgEvent@@QEAAHK@Z$rtcName$0
	call	_RTC_UninitUse
$LN13@WaitMsg:
	call	QWORD PTR __imp_timeGetTime
	sub	eax, DWORD PTR dwStartTime$[rsp]
	mov	DWORD PTR dwElapsed$82265[rsp], eax
; Line 117
	mov	eax, DWORD PTR dwTimeout$[rsp]
	cmp	DWORD PTR dwElapsed$82265[rsp], eax
	jb	SHORT $LN9@WaitMsg
	mov	DWORD PTR tv88[rsp], 0
	jmp	SHORT $LN10@WaitMsg
$LN9@WaitMsg:
	mov	eax, DWORD PTR dwElapsed$82265[rsp]
	mov	ecx, DWORD PTR dwTimeout$[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tv88[rsp], eax
$LN10@WaitMsg:
	mov	eax, DWORD PTR tv88[rsp]
	mov	DWORD PTR dwWaitTime$[rsp], eax
$LN1@WaitMsg:
$LN2@WaitMsg:
; Line 120
	cmp	DWORD PTR dwWait$[rsp], 1
	je	$LN5@WaitMsg
; Line 124
	cmp	DWORD PTR dwWait$[rsp], 0
	jne	SHORT $LN11@WaitMsg
	mov	DWORD PTR tv91[rsp], 1
	jmp	SHORT $LN12@WaitMsg
$LN11@WaitMsg:
	mov	DWORD PTR tv91[rsp], 0
$LN12@WaitMsg:
	mov	eax, DWORD PTR tv91[rsp]
; Line 125
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?WaitMsg@CAMMsgEvent@@QEAAHK@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?WaitMsg@CAMMsgEvent@@QEAAHK@Z ENDP			; CAMMsgEvent::WaitMsg
_TEXT	ENDS
PUBLIC	??1CCritSec@@QEAA@XZ				; CCritSec::~CCritSec
PUBLIC	??0CCritSec@@QEAA@XZ				; CCritSec::CCritSec
PUBLIC	??0CAMThread@@QEAA@XZ				; CAMThread::CAMThread
EXTRN	__CxxFrameHandler3:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAMThread@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+141
	DD	imagerel $unwind$??0CAMThread@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CAMThread@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CAMThread@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CAMThread@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0CAMThread@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0CAMThread@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0CAMThread@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0CAMThread@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0CAMThread@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0CAMThread@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0CAMThread@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0CAMThread@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0CAMThread@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CAMThread@@QEAA@XZ DD imagerel ??0CAMThread@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0CAMThread@@QEAA@XZ+62
	DD	00H
	DD	imagerel ??0CAMThread@@QEAA@XZ+82
	DD	01H
	DD	imagerel ??0CAMThread@@QEAA@XZ+100
	DD	02H
	DD	imagerel ??0CAMThread@@QEAA@XZ+130
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0CAMThread@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0CAMThread@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CAMThread@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAMThread@@QEAA@XZ DD 022711H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CAMThread@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CAMThread@@QEAA@XZ DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??0CAMThread@@QEAA@XZ
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??0CAMThread@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CAMThread@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CAMThread@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0CAMThread@@QEAA@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0CAMThread@@QEAA@XZ@4HA
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CAMThread@@QEAA@XZ
_TEXT	SEGMENT
$T83405 = 32
this$ = 64
??0CAMThread@@QEAA@XZ PROC				; CAMThread::CAMThread, COMDAT
; Line 132
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	QWORD PTR $T83405[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	edx, 1
	mov	rcx, rax
	call	??0CAMEvent@@QEAA@H@Z			; CAMEvent::CAMEvent
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 16
	xor	edx, edx
	mov	rcx, rax
	call	??0CAMEvent@@QEAA@H@Z			; CAMEvent::CAMEvent
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??0CCritSec@@QEAA@XZ			; CCritSec::CCritSec
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 96					; 00000060H
	mov	rcx, rax
	call	??0CCritSec@@QEAA@XZ			; CCritSec::CCritSec
; Line 133
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0
; Line 134
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0CAMThread@@QEAA@XZ ENDP				; CAMThread::CAMThread
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T83405 = 32
this$ = 64
?dtor$0@?0???0CAMThread@@QEAA@XZ@4HA PROC		; `CAMThread::CAMThread'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1CAMEvent@@QEAA@XZ			; CAMEvent::~CAMEvent
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0CAMThread@@QEAA@XZ@4HA ENDP		; `CAMThread::CAMThread'::`1'::dtor$0
; Function compile flags: /Odtp /RTCsu
$T83405 = 32
this$ = 64
?dtor$1@?0???0CAMThread@@QEAA@XZ@4HA PROC		; `CAMThread::CAMThread'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	call	??1CAMEvent@@QEAA@XZ			; CAMEvent::~CAMEvent
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0CAMThread@@QEAA@XZ@4HA ENDP		; `CAMThread::CAMThread'::`1'::dtor$1
; Function compile flags: /Odtp /RTCsu
$T83405 = 32
this$ = 64
?dtor$2@?0???0CAMThread@@QEAA@XZ@4HA PROC		; `CAMThread::CAMThread'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0CAMThread@@QEAA@XZ@4HA ENDP		; `CAMThread::CAMThread'::`1'::dtor$2
text$x	ENDS
PUBLIC	?Close@CAMThread@@QEAAXXZ			; CAMThread::Close
PUBLIC	??1CAMThread@@UEAA@XZ				; CAMThread::~CAMThread
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAMThread@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+127
	DD	imagerel $unwind$??1CAMThread@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1CAMThread@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CAMThread@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CAMThread@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1CAMThread@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1CAMThread@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1CAMThread@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1CAMThread@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1CAMThread@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???1CAMThread@@UEAA@XZ@4HA DD imagerel ?dtor$2@?0???1CAMThread@@UEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1CAMThread@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???1CAMThread@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???1CAMThread@@UEAA@XZ@4HA DD imagerel ?dtor$3@?0???1CAMThread@@UEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???1CAMThread@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???1CAMThread@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CAMThread@@UEAA@XZ DD imagerel ??1CAMThread@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1CAMThread@@UEAA@XZ+39
	DD	03H
	DD	imagerel ??1CAMThread@@UEAA@XZ+50
	DD	02H
	DD	imagerel ??1CAMThread@@UEAA@XZ+68
	DD	01H
	DD	imagerel ??1CAMThread@@UEAA@XZ+86
	DD	00H
	DD	imagerel ??1CAMThread@@UEAA@XZ+104
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???1CAMThread@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???1CAMThread@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1CAMThread@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1CAMThread@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAMThread@@UEAA@XZ DD 022711H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1CAMThread@@UEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1CAMThread@@UEAA@XZ DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$??1CAMThread@@UEAA@XZ
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$??1CAMThread@@UEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1CAMThread@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1CAMThread@@UEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1CAMThread@@UEAA@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???1CAMThread@@UEAA@XZ@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???1CAMThread@@UEAA@XZ@4HA
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CAMThread@@UEAA@XZ
_TEXT	SEGMENT
$T83443 = 32
this$ = 64
??1CAMThread@@UEAA@XZ PROC				; CAMThread::~CAMThread, COMDAT
; Line 136
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	QWORD PTR $T83443[rsp], -2
; Line 137
	mov	rcx, QWORD PTR this$[rsp]
	call	?Close@CAMThread@@QEAAXXZ		; CAMThread::Close
	npad	1
; Line 138
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 96					; 00000060H
	mov	rcx, rax
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 16
	mov	rcx, rax
	call	??1CAMEvent@@QEAA@XZ			; CAMEvent::~CAMEvent
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1CAMEvent@@QEAA@XZ			; CAMEvent::~CAMEvent
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1CAMThread@@UEAA@XZ ENDP				; CAMThread::~CAMThread
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T83443 = 32
this$ = 64
?dtor$0@?0???1CAMThread@@UEAA@XZ@4HA PROC		; `CAMThread::~CAMThread'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1CAMEvent@@QEAA@XZ			; CAMEvent::~CAMEvent
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???1CAMThread@@UEAA@XZ@4HA ENDP		; `CAMThread::~CAMThread'::`1'::dtor$0
; Function compile flags: /Odtp /RTCsu
$T83443 = 32
this$ = 64
?dtor$1@?0???1CAMThread@@UEAA@XZ@4HA PROC		; `CAMThread::~CAMThread'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	call	??1CAMEvent@@QEAA@XZ			; CAMEvent::~CAMEvent
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???1CAMThread@@UEAA@XZ@4HA ENDP		; `CAMThread::~CAMThread'::`1'::dtor$1
; Function compile flags: /Odtp /RTCsu
$T83443 = 32
this$ = 64
?dtor$2@?0???1CAMThread@@UEAA@XZ@4HA PROC		; `CAMThread::~CAMThread'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???1CAMThread@@UEAA@XZ@4HA ENDP		; `CAMThread::~CAMThread'::`1'::dtor$2
; Function compile flags: /Odtp /RTCsu
$T83443 = 32
this$ = 64
?dtor$3@?0???1CAMThread@@UEAA@XZ@4HA PROC		; `CAMThread::~CAMThread'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 96					; 00000060H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???1CAMThread@@UEAA@XZ@4HA ENDP		; `CAMThread::~CAMThread'::`1'::dtor$3
text$x	ENDS
EXTRN	__imp_WaitForSingleObject:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.h
pdata	SEGMENT
$pdata$?Close@CAMThread@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+93
	DD	imagerel $unwind$?Close@CAMThread@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Close@CAMThread@@QEAAXXZ DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Close@CAMThread@@QEAAXXZ
_TEXT	SEGMENT
hThread$ = 32
this$ = 64
?Close@CAMThread@@QEAAXXZ PROC				; CAMThread::Close, COMDAT
; Line 194
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 195
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 32					; 00000020H
	xor	ecx, ecx
	xchg	QWORD PTR [rax], rcx
	mov	rax, rcx
	mov	QWORD PTR hThread$[rsp], rax
; Line 196
	cmp	QWORD PTR hThread$[rsp], 0
	je	SHORT $LN1@Close
; Line 197
	mov	edx, -1					; ffffffffH
	mov	rcx, QWORD PTR hThread$[rsp]
	call	QWORD PTR __imp_WaitForSingleObject
; Line 198
	mov	rcx, QWORD PTR hThread$[rsp]
	call	QWORD PTR __imp_CloseHandle
$LN1@Close:
; Line 200
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Close@CAMThread@@QEAAXXZ ENDP				; CAMThread::Close
_TEXT	ENDS
PUBLIC	?CoInitializeHelper@CAMThread@@SAJXZ		; CAMThread::CoInitializeHelper
PUBLIC	?InitialThreadProc@CAMThread@@SAKPEAX@Z		; CAMThread::InitialThreadProc
EXTRN	__imp_CoUninitialize:PROC
EXTRN	?DbgLogInfo@@YAXKKPEB_WZZ:PROC			; DbgLogInfo
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.cpp
pdata	SEGMENT
$pdata$?InitialThreadProc@CAMThread@@SAKPEAX@Z DD imagerel $LN5
	DD	imagerel $LN5+120
	DD	imagerel $unwind$?InitialThreadProc@CAMThread@@SAKPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitialThreadProc@CAMThread@@SAKPEAX@Z DD 021e01H
	DD	07006720aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?InitialThreadProc@CAMThread@@SAKPEAX@Z
_TEXT	SEGMENT
hrCoInit$ = 32
pThread$ = 40
hr$ = 48
pv$ = 80
?InitialThreadProc@CAMThread@@SAKPEAX@Z PROC		; CAMThread::InitialThreadProc, COMDAT
; Line 145
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 146
	call	?CoInitializeHelper@CAMThread@@SAJXZ	; CAMThread::CoInitializeHelper
	mov	DWORD PTR hrCoInit$[rsp], eax
; Line 147
	cmp	DWORD PTR hrCoInit$[rsp], 0
	jge	SHORT $LN2@InitialThr
; Line 148
	lea	r8, OFFSET FLAT:$SG82284
	mov	edx, 1
	mov	ecx, 16
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
$LN2@InitialThr:
; Line 151
	mov	rax, QWORD PTR pv$[rsp]
	mov	QWORD PTR pThread$[rsp], rax
; Line 153
	mov	rax, QWORD PTR pThread$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pThread$[rsp]
	call	QWORD PTR [rax]
	mov	DWORD PTR hr$[rsp], eax
; Line 155
	cmp	DWORD PTR hrCoInit$[rsp], 0
	jl	SHORT $LN1@InitialThr
; Line 156
	call	QWORD PTR __imp_CoUninitialize
$LN1@InitialThr:
; Line 159
	mov	eax, DWORD PTR hr$[rsp]
; Line 160
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?InitialThreadProc@CAMThread@@SAKPEAX@Z ENDP		; CAMThread::InitialThreadProc
_TEXT	ENDS
PUBLIC	??1CAutoLock@@QEAA@XZ				; CAutoLock::~CAutoLock
PUBLIC	?ThreadExists@CAMThread@@QEBAHXZ		; CAMThread::ThreadExists
PUBLIC	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z		; CAutoLock::CAutoLock
PUBLIC	?Create@CAMThread@@QEAAHXZ			; CAMThread::Create
EXTRN	__imp_CreateThread:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@CAMThread@@QEAAHXZ DD imagerel $LN6
	DD	imagerel $LN6+258
	DD	imagerel $unwind$?Create@CAMThread@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Create@CAMThread@@QEAAHXZ@4HA DD imagerel ?dtor$0@?0??Create@CAMThread@@QEAAHXZ@4HA
	DD	imagerel ?dtor$0@?0??Create@CAMThread@@QEAAHXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??Create@CAMThread@@QEAAHXZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Create@CAMThread@@QEAAHXZ DD imagerel ?Create@CAMThread@@QEAAHXZ
	DD	0ffffffffH
	DD	imagerel ?Create@CAMThread@@QEAAHXZ+71
	DD	00H
	DD	imagerel ?Create@CAMThread@@QEAAHXZ+96
	DD	0ffffffffH
	DD	imagerel ?Create@CAMThread@@QEAAHXZ+112
	DD	00H
	DD	imagerel ?Create@CAMThread@@QEAAHXZ+190
	DD	0ffffffffH
	DD	imagerel ?Create@CAMThread@@QEAAHXZ+206
	DD	00H
	DD	imagerel ?Create@CAMThread@@QEAAHXZ+214
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Create@CAMThread@@QEAAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@CAMThread@@QEAAHXZ DD 022d11H
	DD	07006f20dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Create@CAMThread@@QEAAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Create@CAMThread@@QEAAHXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Create@CAMThread@@QEAAHXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Create@CAMThread@@QEAAHXZ$rtcName$0 DB 074H		; CAMThread::Create
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	069H
	DB	064H
	DB	00H
	ORG $+3
?Create@CAMThread@@QEAAHXZ$rtcName$1 DB 06cH		; CAMThread::Create
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+15
?Create@CAMThread@@QEAAHXZ$rtcVarDesc DD 058H		; CAMThread::Create
	DD	08H
	DQ	FLAT:?Create@CAMThread@@QEAAHXZ$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?Create@CAMThread@@QEAAHXZ$rtcName$0
	ORG $+96
?Create@CAMThread@@QEAAHXZ$rtcFrameData DD 02H		; CAMThread::Create
	DD	00H
	DQ	FLAT:?Create@CAMThread@@QEAAHXZ$rtcVarDesc
$cppxdata$?Create@CAMThread@@QEAAHXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Create@CAMThread@@QEAAHXZ
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?Create@CAMThread@@QEAAHXZ
	DD	070H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?Create@CAMThread@@QEAAHXZ
_TEXT	SEGMENT
threadid$ = 52
lock$ = 88
$T83487 = 100
$T83488 = 104
$T83489 = 108
$T83495 = 112
this$ = 144
?Create@CAMThread@@QEAAHXZ PROC				; CAMThread::Create, COMDAT
; Line 164
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rdi, rsp
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	QWORD PTR $T83495[rsp], -2
; Line 167
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rdx, rax
	lea	rcx, QWORD PTR lock$[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 169
	mov	rcx, QWORD PTR this$[rsp]
	call	?ThreadExists@CAMThread@@QEBAHXZ	; CAMThread::ThreadExists
	test	eax, eax
	je	SHORT $LN2@Create
; Line 170
	mov	DWORD PTR $T83487[rsp], 0
	lea	rcx, QWORD PTR lock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83487[rsp]
	jmp	SHORT $LN3@Create
$LN2@Create:
; Line 179
	lea	rax, QWORD PTR threadid$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 0
	mov	r9, QWORD PTR this$[rsp]
	lea	r8, OFFSET FLAT:?InitialThreadProc@CAMThread@@SAKPEAX@Z ; CAMThread::InitialThreadProc
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateThread
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+32], rax
; Line 181
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 0
	jne	SHORT $LN1@Create
; Line 182
	mov	DWORD PTR $T83488[rsp], 0
	lea	rcx, QWORD PTR lock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83488[rsp]
	jmp	SHORT $LN3@Create
$LN1@Create:
; Line 185
	mov	DWORD PTR $T83489[rsp], 1
	lea	rcx, QWORD PTR lock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83489[rsp]
$LN3@Create:
; Line 186
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Create@CAMThread@@QEAAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
?Create@CAMThread@@QEAAHXZ ENDP				; CAMThread::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
threadid$ = 52
lock$ = 88
$T83487 = 100
$T83488 = 104
$T83489 = 108
$T83495 = 112
this$ = 144
?dtor$0@?0??Create@CAMThread@@QEAAHXZ@4HA PROC		; `CAMThread::Create'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR lock$[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??Create@CAMThread@@QEAAHXZ@4HA ENDP		; `CAMThread::Create'::`1'::dtor$0
text$x	ENDS
PUBLIC	?Lock@CCritSec@@QEAAXXZ				; CCritSec::Lock
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.h
pdata	SEGMENT
$pdata$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAutoLock@@QEAA@PEAVCCritSec@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CAutoLock@@QEAA@PEAVCCritSec@@@Z
_TEXT	SEGMENT
this$ = 48
plock$ = 56
??0CAutoLock@@QEAA@PEAVCCritSec@@@Z PROC		; CAutoLock::CAutoLock, COMDAT
; Line 94
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 96
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR plock$[rsp]
	mov	QWORD PTR [rax], rcx
; Line 97
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?Lock@CCritSec@@QEAAXXZ			; CCritSec::Lock
; Line 98
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CAutoLock@@QEAA@PEAVCCritSec@@@Z ENDP		; CAutoLock::CAutoLock
_TEXT	ENDS
PUBLIC	?Unlock@CCritSec@@QEAAXXZ			; CCritSec::Unlock
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAutoLock@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??1CAutoLock@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAutoLock@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CAutoLock@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAutoLock@@QEAA@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; Line 100
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 101
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?Unlock@CCritSec@@QEAAXXZ		; CCritSec::Unlock
; Line 102
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CAutoLock@@QEAA@XZ ENDP				; CAutoLock::~CAutoLock
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ThreadExists@CAMThread@@QEBAHXZ DD imagerel $LN5
	DD	imagerel $LN5+31
	DD	imagerel $unwind$?ThreadExists@CAMThread@@QEBAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ThreadExists@CAMThread@@QEBAHXZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ThreadExists@CAMThread@@QEBAHXZ
_TEXT	SEGMENT
this$ = 16
?ThreadExists@CAMThread@@QEBAHXZ PROC			; CAMThread::ThreadExists, COMDAT
; Line 205
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 206
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 0
	jne	SHORT $LN2@ThreadExis
; Line 207
	xor	eax, eax
	jmp	SHORT $LN3@ThreadExis
; Line 208
	jmp	SHORT $LN1@ThreadExis
$LN2@ThreadExis:
; Line 209
	mov	eax, 1
$LN1@ThreadExis:
$LN3@ThreadExis:
; Line 211
	pop	rdi
	ret	0
?ThreadExists@CAMThread@@QEBAHXZ ENDP			; CAMThread::ThreadExists
_TEXT	ENDS
PUBLIC	?Wait@CAMEvent@@QEAAHK@Z			; CAMEvent::Wait
PUBLIC	?Set@CAMEvent@@QEAAXXZ				; CAMEvent::Set
PUBLIC	?CallWorker@CAMThread@@QEAAKK@Z			; CAMThread::CallWorker
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.cpp
pdata	SEGMENT
$pdata$?CallWorker@CAMThread@@QEAAKK@Z DD imagerel $LN5
	DD	imagerel $LN5+208
	DD	imagerel $unwind$?CallWorker@CAMThread@@QEAAKK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CallWorker@CAMThread@@QEAAKK@Z@4HA DD imagerel ?dtor$0@?0??CallWorker@CAMThread@@QEAAKK@Z@4HA
	DD	imagerel ?dtor$0@?0??CallWorker@CAMThread@@QEAAKK@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??CallWorker@CAMThread@@QEAAKK@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CallWorker@CAMThread@@QEAAKK@Z DD imagerel ?CallWorker@CAMThread@@QEAAKK@Z
	DD	0ffffffffH
	DD	imagerel ?CallWorker@CAMThread@@QEAAKK@Z+66
	DD	00H
	DD	imagerel ?CallWorker@CAMThread@@QEAAKK@Z+88
	DD	0ffffffffH
	DD	imagerel ?CallWorker@CAMThread@@QEAAKK@Z+104
	DD	00H
	DD	imagerel ?CallWorker@CAMThread@@QEAAKK@Z+167
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CallWorker@CAMThread@@QEAAKK@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CallWorker@CAMThread@@QEAAKK@Z DD 022b11H
	DD	0700a920eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?CallWorker@CAMThread@@QEAAKK@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CallWorker@CAMThread@@QEAAKK@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??CallWorker@CAMThread@@QEAAKK@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CallWorker@CAMThread@@QEAAKK@Z$rtcName$0 DB 06cH	; CAMThread::CallWorker
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+11
?CallWorker@CAMThread@@QEAAKK@Z$rtcVarDesc DD 028H	; CAMThread::CallWorker
	DD	08H
	DQ	FLAT:?CallWorker@CAMThread@@QEAAKK@Z$rtcName$0
	ORG $+48
?CallWorker@CAMThread@@QEAAKK@Z$rtcFrameData DD 01H	; CAMThread::CallWorker
	DD	00H
	DQ	FLAT:?CallWorker@CAMThread@@QEAAKK@Z$rtcVarDesc
$cppxdata$?CallWorker@CAMThread@@QEAAKK@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?CallWorker@CAMThread@@QEAAKK@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?CallWorker@CAMThread@@QEAAKK@Z
	DD	040H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?CallWorker@CAMThread@@QEAAKK@Z
_TEXT	SEGMENT
lock$ = 40
$T83538 = 52
$T83539 = 56
$T83545 = 64
this$ = 96
dwParam$ = 104
?CallWorker@CAMThread@@QEAAKK@Z PROC			; CAMThread::CallWorker, COMDAT
; Line 190
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
	mov	QWORD PTR $T83545[rsp], -2
; Line 192
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rdx, rax
	lea	rcx, QWORD PTR lock$[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 194
	mov	rcx, QWORD PTR this$[rsp]
	call	?ThreadExists@CAMThread@@QEBAHXZ	; CAMThread::ThreadExists
	test	eax, eax
	jne	SHORT $LN1@CallWorker
; Line 195
	mov	DWORD PTR $T83538[rsp], -2147467259	; 80004005H
	lea	rcx, QWORD PTR lock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83538[rsp]
	jmp	SHORT $LN2@CallWorker
$LN1@CallWorker:
; Line 199
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR dwParam$[rsp]
	mov	DWORD PTR [rax+24], ecx
; Line 202
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?Set@CAMEvent@@QEAAXXZ			; CAMEvent::Set
; Line 205
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 16
	mov	edx, -1					; ffffffffH
	mov	rcx, rax
	call	?Wait@CAMEvent@@QEAAHK@Z		; CAMEvent::Wait
; Line 208
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+28]
	mov	DWORD PTR $T83539[rsp], eax
	lea	rcx, QWORD PTR lock$[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83539[rsp]
$LN2@CallWorker:
; Line 209
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?CallWorker@CAMThread@@QEAAKK@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?CallWorker@CAMThread@@QEAAKK@Z ENDP			; CAMThread::CallWorker
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
lock$ = 40
$T83538 = 52
$T83539 = 56
$T83545 = 64
this$ = 96
dwParam$ = 104
?dtor$0@?0??CallWorker@CAMThread@@QEAAKK@Z@4HA PROC	; `CAMThread::CallWorker'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR lock$[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??CallWorker@CAMThread@@QEAAKK@Z@4HA ENDP	; `CAMThread::CallWorker'::`1'::dtor$0
text$x	ENDS
PUBLIC	??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IE@FEPELDBE@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@ ; `string'
EXTRN	__imp_SetEvent:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.h
pdata	SEGMENT
$pdata$?Set@CAMEvent@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$?Set@CAMEvent@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Set@CAMEvent@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '(', 00H, 'm', 00H, '_', 00H, 'h', 00H, 'E', 00H, 'v'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IE@FEPELDBE@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@
CONST	SEGMENT
??_C@_1IE@FEPELDBE@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'W'
	DB	00H, 'P', 00H, 'F', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'K', 00H, 'i', 00H, 't', 00H, ' ', 00H, '-'
	DB	00H, ' ', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, '\', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '\', 00H, 'B', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'e', 00H, 's', 00H, '\', 00H, 'w', 00H, 'x', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?Set@CAMEvent@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Set@CAMEvent@@QEAAXXZ PROC				; CAMEvent::Set, COMDAT
; Line 125
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_SetEvent
	test	eax, eax
	jne	SHORT $LN1@Set
	mov	r8d, 125				; 0000007dH
	lea	rdx, OFFSET FLAT:??_C@_1IE@FEPELDBE@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAW?$AAP?$AAF?$AA?5?$AAM?$AAe?$AAd?$AAi?$AAa?$AAK?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAp?$AAy@
	lea	rcx, OFFSET FLAT:??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Set:
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Set@CAMEvent@@QEAAXXZ ENDP				; CAMEvent::Set
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Wait@CAMEvent@@QEAAHK@Z DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$?Wait@CAMEvent@@QEAAHK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Wait@CAMEvent@@QEAAHK@Z DD 022201H
	DD	0700a520eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Wait@CAMEvent@@QEAAHK@Z
_TEXT	SEGMENT
tv68 = 32
this$ = 64
dwTimeout$ = 72
?Wait@CAMEvent@@QEAAHK@Z PROC				; CAMEvent::Wait, COMDAT
; Line 126
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 127
	mov	edx, DWORD PTR dwTimeout$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_WaitForSingleObject
	test	eax, eax
	jne	SHORT $LN3@Wait
	mov	DWORD PTR tv68[rsp], 1
	jmp	SHORT $LN4@Wait
$LN3@Wait:
	mov	DWORD PTR tv68[rsp], 0
$LN4@Wait:
	mov	eax, DWORD PTR tv68[rsp]
; Line 128
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Wait@CAMEvent@@QEAAHK@Z ENDP				; CAMEvent::Wait
_TEXT	ENDS
PUBLIC	?GetRequest@CAMThread@@QEAAKXZ			; CAMThread::GetRequest
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.cpp
pdata	SEGMENT
$pdata$?GetRequest@CAMThread@@QEAAKXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?GetRequest@CAMThread@@QEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetRequest@CAMThread@@QEAAKXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetRequest@CAMThread@@QEAAKXZ
_TEXT	SEGMENT
this$ = 48
?GetRequest@CAMThread@@QEAAKXZ PROC			; CAMThread::GetRequest, COMDAT
; Line 214
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 215
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	edx, -1					; ffffffffH
	mov	rcx, rax
	call	?Wait@CAMEvent@@QEAAHK@Z		; CAMEvent::Wait
; Line 216
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+24]
; Line 217
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetRequest@CAMThread@@QEAAKXZ ENDP			; CAMThread::GetRequest
_TEXT	ENDS
PUBLIC	?Check@CAMEvent@@QEAAHXZ			; CAMEvent::Check
PUBLIC	?CheckRequest@CAMThread@@QEAAHPEAK@Z		; CAMThread::CheckRequest
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckRequest@CAMThread@@QEAAHPEAK@Z DD imagerel $LN6
	DD	imagerel $LN6+96
	DD	imagerel $unwind$?CheckRequest@CAMThread@@QEAAHPEAK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckRequest@CAMThread@@QEAAHPEAK@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CheckRequest@CAMThread@@QEAAHPEAK@Z
_TEXT	SEGMENT
this$ = 48
pParam$ = 56
?CheckRequest@CAMThread@@QEAAHPEAK@Z PROC		; CAMThread::CheckRequest, COMDAT
; Line 222
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 223
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?Check@CAMEvent@@QEAAHXZ		; CAMEvent::Check
	test	eax, eax
	jne	SHORT $LN3@CheckReque
; Line 224
	xor	eax, eax
	jmp	SHORT $LN4@CheckReque
; Line 225
	jmp	SHORT $LN2@CheckReque
$LN3@CheckReque:
; Line 226
	cmp	QWORD PTR pParam$[rsp], 0
	je	SHORT $LN1@CheckReque
; Line 227
	mov	rax, QWORD PTR pParam$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	DWORD PTR [rax], ecx
$LN1@CheckReque:
; Line 229
	mov	eax, 1
$LN2@CheckReque:
$LN4@CheckReque:
; Line 231
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?CheckRequest@CAMThread@@QEAAHPEAK@Z ENDP		; CAMThread::CheckRequest
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.h
pdata	SEGMENT
$pdata$?Check@CAMEvent@@QEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?Check@CAMEvent@@QEAAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Check@CAMEvent@@QEAAHXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Check@CAMEvent@@QEAAHXZ
_TEXT	SEGMENT
this$ = 48
?Check@CAMEvent@@QEAAHXZ PROC				; CAMEvent::Check, COMDAT
; Line 130
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?Wait@CAMEvent@@QEAAHK@Z		; CAMEvent::Wait
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Check@CAMEvent@@QEAAHXZ ENDP				; CAMEvent::Check
_TEXT	ENDS
PUBLIC	?Reset@CAMEvent@@QEAAXXZ			; CAMEvent::Reset
PUBLIC	?Reply@CAMThread@@QEAAXK@Z			; CAMThread::Reply
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.cpp
pdata	SEGMENT
$pdata$?Reply@CAMThread@@QEAAXK@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?Reply@CAMThread@@QEAAXK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Reply@CAMThread@@QEAAXK@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Reply@CAMThread@@QEAAXK@Z
_TEXT	SEGMENT
this$ = 48
dw$ = 56
?Reply@CAMThread@@QEAAXK@Z PROC				; CAMThread::Reply, COMDAT
; Line 236
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 237
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR dw$[rsp]
	mov	DWORD PTR [rax+28], ecx
; Line 246
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?Reset@CAMEvent@@QEAAXXZ		; CAMEvent::Reset
; Line 250
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 16
	mov	rcx, rax
	call	?Set@CAMEvent@@QEAAXXZ			; CAMEvent::Set
; Line 251
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Reply@CAMThread@@QEAAXK@Z ENDP				; CAMThread::Reply
_TEXT	ENDS
EXTRN	__imp_ResetEvent:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.h
pdata	SEGMENT
$pdata$?Reset@CAMEvent@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?Reset@CAMEvent@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Reset@CAMEvent@@QEAAXXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Reset@CAMEvent@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Reset@CAMEvent@@QEAAXXZ PROC				; CAMEvent::Reset, COMDAT
; Line 129
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_ResetEvent
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Reset@CAMEvent@@QEAAXXZ ENDP				; CAMEvent::Reset
_TEXT	ENDS
EXTRN	?DbgBreakPoint@@YAXPEB_W0H@Z:PROC		; DbgBreakPoint
EXTRN	__imp_GetProcAddress:PROC
EXTRN	__imp_GetModuleHandleW:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.cpp
pdata	SEGMENT
$pdata$?CoInitializeHelper@CAMThread@@SAJXZ DD imagerel $LN6
	DD	imagerel $LN6+138
	DD	imagerel $unwind$?CoInitializeHelper@CAMThread@@SAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CoInitializeHelper@CAMThread@@SAJXZ DD 021501H
	DD	070027206H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CoInitializeHelper@CAMThread@@SAJXZ
_TEXT	SEGMENT
hr$ = 32
hOle$ = 40
pCoInitializeEx$82334 = 48
?CoInitializeHelper@CAMThread@@SAJXZ PROC		; CAMThread::CoInitializeHelper, COMDAT
; Line 254
$LN6:
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 267
	mov	DWORD PTR hr$[rsp], -2147467259		; ffffffff80004005H
; Line 268
	lea	rcx, OFFSET FLAT:$SG82329
	call	QWORD PTR __imp_GetModuleHandleW
	mov	QWORD PTR hOle$[rsp], rax
; Line 269
	cmp	QWORD PTR hOle$[rsp], 0
	je	SHORT $LN3@CoInitiali
; Line 274
	lea	rdx, OFFSET FLAT:$SG82336
	mov	rcx, QWORD PTR hOle$[rsp]
	call	QWORD PTR __imp_GetProcAddress
	mov	QWORD PTR pCoInitializeEx$82334[rsp], rax
; Line 275
	cmp	QWORD PTR pCoInitializeEx$82334[rsp], 0
	je	SHORT $LN2@CoInitiali
; Line 277
	mov	edx, 4
	xor	ecx, ecx
	call	QWORD PTR pCoInitializeEx$82334[rsp]
	mov	DWORD PTR hr$[rsp], eax
$LN2@CoInitiali:
; Line 280
	jmp	SHORT $LN1@CoInitiali
$LN3@CoInitiali:
; Line 283
	mov	r8d, 283				; 0000011bH
	lea	rdx, OFFSET FLAT:$SG82339
	lea	rcx, OFFSET FLAT:$SG82340
	call	?DbgBreakPoint@@YAXPEB_W0H@Z		; DbgBreakPoint
$LN1@CoInitiali:
; Line 286
	mov	eax, DWORD PTR hr$[rsp]
; Line 287
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?CoInitializeHelper@CAMThread@@SAJXZ ENDP		; CAMThread::CoInitializeHelper
_TEXT	ENDS
PUBLIC	??1?$CGenericList@VCMsg@@@@QEAA@XZ		; CGenericList<CMsg>::~CGenericList<CMsg>
PUBLIC	?GetNext@?$CGenericList@VCMsg@@@@QEBAPEAVCMsg@@AEAPEAU__POSITION@@@Z ; CGenericList<CMsg>::GetNext
PUBLIC	?GetHeadPosition@?$CGenericList@VCMsg@@@@QEBAPEAU__POSITION@@XZ ; CGenericList<CMsg>::GetHeadPosition
PUBLIC	??1CMsgThread@@QEAA@XZ				; CMsgThread::~CMsgThread
EXTRN	?RemoveAll@CBaseList@@QEAAXXZ:PROC		; CBaseList::RemoveAll
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CMsgThread@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+330
	DD	imagerel $unwind$??1CMsgThread@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1CMsgThread@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CMsgThread@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CMsgThread@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1CMsgThread@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1CMsgThread@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1CMsgThread@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1CMsgThread@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1CMsgThread@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CMsgThread@@QEAA@XZ DD imagerel ??1CMsgThread@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1CMsgThread@@QEAA@XZ+39
	DD	01H
	DD	imagerel ??1CMsgThread@@QEAA@XZ+274
	DD	00H
	DD	imagerel ??1CMsgThread@@QEAA@XZ+292
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1CMsgThread@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1CMsgThread@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CMsgThread@@QEAA@XZ DD 022711H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1CMsgThread@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1CMsgThread@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1CMsgThread@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1CMsgThread@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1CMsgThread@@QEAA@XZ$rtcName$0 DB 070H		; CMsgThread::~CMsgThread
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
??1CMsgThread@@QEAA@XZ$rtcVarDesc DD 028H		; CMsgThread::~CMsgThread
	DD	08H
	DQ	FLAT:??1CMsgThread@@QEAA@XZ$rtcName$0
	ORG $+48
??1CMsgThread@@QEAA@XZ$rtcFrameData DD 01H		; CMsgThread::~CMsgThread
	DD	00H
	DQ	FLAT:??1CMsgThread@@QEAA@XZ$rtcVarDesc
$cppxdata$??1CMsgThread@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1CMsgThread@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??1CMsgThread@@QEAA@XZ
	DD	048H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??1CMsgThread@@QEAA@XZ
_TEXT	SEGMENT
pos$ = 40
pMsg$82352 = 56
$T83624 = 64
$T83632 = 72
this$ = 96
??1CMsgThread@@QEAA@XZ PROC				; CMsgThread::~CMsgThread, COMDAT
; Line 293
$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
	mov	QWORD PTR $T83632[rsp], -2
; Line 294
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN6@CMsgThread
; Line 295
	mov	edx, -1					; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_WaitForSingleObject
; Line 296
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN6@CMsgThread
	mov	r8d, 296				; 00000128H
	lea	rdx, OFFSET FLAT:$SG82346
	lea	rcx, OFFSET FLAT:$SG82347
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN6@CMsgThread:
; Line 299
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	rcx, rax
	call	?GetHeadPosition@?$CGenericList@VCMsg@@@@QEBAPEAU__POSITION@@XZ ; CGenericList<CMsg>::GetHeadPosition
	mov	QWORD PTR pos$[rsp], rax
$LN4@CMsgThread:
; Line 300
	cmp	QWORD PTR pos$[rsp], 0
	je	SHORT $LN3@CMsgThread
; Line 301
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	lea	rdx, QWORD PTR pos$[rsp]
	mov	rcx, rax
	call	?GetNext@?$CGenericList@VCMsg@@@@QEBAPEAVCMsg@@AEAPEAU__POSITION@@@Z ; CGenericList<CMsg>::GetNext
	mov	QWORD PTR pMsg$82352[rsp], rax
; Line 302
	mov	rax, QWORD PTR pMsg$82352[rsp]
	mov	QWORD PTR $T83624[rsp], rax
	mov	rcx, QWORD PTR $T83624[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 303
	jmp	SHORT $LN4@CMsgThread
$LN3@CMsgThread:
; Line 304
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	rcx, rax
	call	?RemoveAll@CBaseList@@QEAAXXZ		; CBaseList::RemoveAll
; Line 306
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+128], 0
	je	SHORT $LN2@CMsgThread
; Line 307
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+128]
	call	QWORD PTR __imp_CloseHandle
	test	eax, eax
	jne	SHORT $LN2@CMsgThread
	mov	r8d, 307				; 00000133H
	lea	rdx, OFFSET FLAT:$SG82356
	lea	rcx, OFFSET FLAT:$SG82357
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
	npad	1
$LN2@CMsgThread:
; Line 309
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 72					; 00000048H
	mov	rcx, rax
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	rcx, rax
	call	??1?$CGenericList@VCMsg@@@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1CMsgThread@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1CMsgThread@@QEAA@XZ ENDP				; CMsgThread::~CMsgThread
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pos$ = 40
pMsg$82352 = 56
$T83624 = 64
$T83632 = 72
this$ = 96
?dtor$0@?0???1CMsgThread@@QEAA@XZ@4HA PROC		; `CMsgThread::~CMsgThread'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 24
	call	??1?$CGenericList@VCMsg@@@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???1CMsgThread@@QEAA@XZ@4HA ENDP		; `CMsgThread::~CMsgThread'::`1'::dtor$0
; Function compile flags: /Odtp /RTCsu
pos$ = 40
pMsg$82352 = 56
$T83624 = 64
$T83632 = 72
this$ = 96
?dtor$1@?0???1CMsgThread@@QEAA@XZ@4HA PROC		; `CMsgThread::~CMsgThread'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 72					; 00000048H
	call	??1CCritSec@@QEAA@XZ			; CCritSec::~CCritSec
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???1CMsgThread@@QEAA@XZ@4HA ENDP		; `CMsgThread::~CMsgThread'::`1'::dtor$1
text$x	ENDS
EXTRN	??1CBaseList@@QEAA@XZ:PROC			; CBaseList::~CBaseList
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CGenericList@VCMsg@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+46
	DD	imagerel $unwind$??1?$CGenericList@VCMsg@@@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CGenericList@VCMsg@@@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1?$CGenericList@VCMsg@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CGenericList@VCMsg@@@@QEAA@XZ PROC			; CGenericList<CMsg>::~CGenericList<CMsg>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??1CBaseList@@QEAA@XZ			; CBaseList::~CBaseList
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$CGenericList@VCMsg@@@@QEAA@XZ ENDP			; CGenericList<CMsg>::~CGenericList<CMsg>
_TEXT	ENDS
PUBLIC	?DefaultThreadProc@CMsgThread@@CAKPEAX@Z	; CMsgThread::DefaultThreadProc
PUBLIC	?CreateThread@CMsgThread@@QEAAHXZ		; CMsgThread::CreateThread
EXTRN	__imp_CreateSemaphoreW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateThread@CMsgThread@@QEAAHXZ DD imagerel $LN6
	DD	imagerel $LN6+173
	DD	imagerel $unwind$?CreateThread@CMsgThread@@QEAAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateThread@CMsgThread@@QEAAHXZ DD 021e01H
	DD	07006720aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CreateThread@CMsgThread@@QEAAHXZ
_TEXT	SEGMENT
tv83 = 48
this$ = 80
?CreateThread@CMsgThread@@QEAAHXZ PROC			; CMsgThread::CreateThread, COMDAT
; Line 314
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 315
	xor	r9d, r9d
	mov	r8d, 2147483647				; 7fffffffH
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateSemaphoreW
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+128], rax
; Line 316
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+128], 0
	jne	SHORT $LN1@CreateThre
; Line 317
	xor	eax, eax
	jmp	SHORT $LN2@CreateThre
$LN1@CreateThre:
; Line 321
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 0
	mov	r9, QWORD PTR this$[rsp]
	lea	r8, OFFSET FLAT:?DefaultThreadProc@CMsgThread@@CAKPEAX@Z ; CMsgThread::DefaultThreadProc
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateThread
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax
; Line 322
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN4@CreateThre
	mov	DWORD PTR tv83[rsp], 1
	jmp	SHORT $LN5@CreateThre
$LN4@CreateThre:
	mov	DWORD PTR tv83[rsp], 0
$LN5@CreateThre:
	mov	eax, DWORD PTR tv83[rsp]
$LN2@CreateThre:
; Line 323
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?CreateThread@CMsgThread@@QEAAHXZ ENDP			; CMsgThread::CreateThread
_TEXT	ENDS
PUBLIC	??0CMsg@@QEAA@XZ				; CMsg::CMsg
EXTRN	__imp_CoInitialize:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DefaultThreadProc@CMsgThread@@CAKPEAX@Z DD imagerel $LN6
	DD	imagerel $LN6+188
	DD	imagerel $unwind$?DefaultThreadProc@CMsgThread@@CAKPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DefaultThreadProc@CMsgThread@@CAKPEAX@Z DD 022101H
	DD	07006d20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DefaultThreadProc@CMsgThread@@CAKPEAX@Z$rtcName$0 DB 06dH ; CMsgThread::DefaultThreadProc
	DB	073H
	DB	067H
	DB	00H
	ORG $+12
?DefaultThreadProc@CMsgThread@@CAKPEAX@Z$rtcVarDesc DD 048H ; CMsgThread::DefaultThreadProc
	DD	018H
	DQ	FLAT:?DefaultThreadProc@CMsgThread@@CAKPEAX@Z$rtcName$0
	ORG $+48
?DefaultThreadProc@CMsgThread@@CAKPEAX@Z$rtcFrameData DD 01H ; CMsgThread::DefaultThreadProc
	DD	00H
	DQ	FLAT:?DefaultThreadProc@CMsgThread@@CAKPEAX@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?DefaultThreadProc@CMsgThread@@CAKPEAX@Z
_TEXT	SEGMENT
lpThis$ = 48
msg$ = 72
lResult$ = 104
lpParam$ = 128
?DefaultThreadProc@CMsgThread@@CAKPEAX@Z PROC		; CMsgThread::DefaultThreadProc, COMDAT
; Line 335
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rdi, rsp
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
; Line 336
	mov	rax, QWORD PTR lpParam$[rsp]
	mov	QWORD PTR lpThis$[rsp], rax
; Line 337
	lea	rcx, QWORD PTR msg$[rsp]
	call	??0CMsg@@QEAA@XZ			; CMsg::CMsg
; Line 341
	xor	ecx, ecx
	call	QWORD PTR __imp_CoInitialize
; Line 344
	mov	rax, QWORD PTR lpThis$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR lpThis$[rsp]
	call	QWORD PTR [rax+8]
$LN3@DefaultThr:
; Line 347
	mov	rax, QWORD PTR lpThis$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR msg$[rsp]
	mov	rcx, QWORD PTR lpThis$[rsp]
	call	QWORD PTR [rax]
; Line 349
	mov	rax, QWORD PTR lpThis$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR msg$[rsp+16]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR msg$[rsp+8]
	mov	r8d, DWORD PTR msg$[rsp+4]
	mov	edx, DWORD PTR msg$[rsp]
	mov	rcx, QWORD PTR lpThis$[rsp]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR lResult$[rsp], rax
; Line 350
	cmp	QWORD PTR lResult$[rsp], 0
	je	SHORT $LN3@DefaultThr
; Line 353
	call	QWORD PTR __imp_CoUninitialize
; Line 355
	mov	eax, DWORD PTR lResult$[rsp]
; Line 356
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?DefaultThreadProc@CMsgThread@@CAKPEAX@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?DefaultThreadProc@CMsgThread@@CAKPEAX@Z ENDP		; CMsgThread::DefaultThreadProc
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\msgthrd.h
pdata	SEGMENT
$pdata$??0CMsg@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0CMsg@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CMsg@@QEAA@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CMsg@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0CMsg@@QEAA@XZ PROC					; CMsg::CMsg, COMDAT
; Line 23
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0CMsg@@QEAA@XZ ENDP					; CMsg::CMsg
_TEXT	ENDS
PUBLIC	$T83701
PUBLIC	?RemoveHead@?$CGenericList@VCMsg@@@@QEAAPEAVCMsg@@XZ ; CGenericList<CMsg>::RemoveHead
PUBLIC	?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z	; CMsgThread::GetThreadMsg
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.cpp
pdata	SEGMENT
$pdata$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z DD imagerel $LN8
	DD	imagerel $LN8+297
	DD	imagerel $unwind$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z@4HA DD imagerel ?dtor$0@?0??GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z@4HA
	DD	imagerel ?dtor$0@?0??GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z DD imagerel ?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z
	DD	0ffffffffH
	DD	imagerel ?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z+94
	DD	00H
	DD	imagerel ?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z+159
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z DD 033011H
	DD	0700ce210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z$rtcName$0 DB 06cH ; CMsgThread::GetThreadMsg
	DB	063H
	DB	06bH
	DB	00H
	ORG $+12
?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z$rtcVarDesc DD 038H ; CMsgThread::GetThreadMsg
	DD	08H
	DQ	FLAT:?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z$rtcName$0
	ORG $+48
?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z$rtcFrameData DD 01H ; CMsgThread::GetThreadMsg
	DD	00H
	DQ	FLAT:?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z$rtcVarDesc
$cppxdata$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z
	DD	068H
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z
_TEXT	SEGMENT
pmsg$ = 32
lck$82382 = 56
$T83695 = 72
$T83701 = 80
$T83702 = 104
this$ = 144
msg$ = 152
?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z PROC	; CMsgThread::GetThreadMsg, COMDAT
; Line 363
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rdi, rsp
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	QWORD PTR $T83702[rsp], -2
; Line 364
	mov	QWORD PTR pmsg$[rsp], 0
$LN4@GetThreadM:
; Line 367
	xor	eax, eax
	cmp	eax, 1
	je	$LN3@GetThreadM
; Line 369
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 72					; 00000048H
	mov	rdx, rax
	lea	rcx, QWORD PTR lck$82382[rsp]
	call	??0CAutoLock@@QEAA@PEAVCCritSec@@@Z	; CAutoLock::CAutoLock
	npad	1
; Line 370
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	rcx, rax
	call	?RemoveHead@?$CGenericList@VCMsg@@@@QEAAPEAVCMsg@@XZ ; CGenericList<CMsg>::RemoveHead
	mov	QWORD PTR pmsg$[rsp], rax
; Line 371
	cmp	QWORD PTR pmsg$[rsp], 0
	jne	SHORT $LN2@GetThreadM
; Line 372
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+136]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+136], eax
; Line 373
	jmp	SHORT $LN1@GetThreadM
$LN2@GetThreadM:
; Line 374
	lea	rcx, QWORD PTR lck$82382[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	jmp	SHORT $LN3@GetThreadM
$LN1@GetThreadM:
; Line 376
	lea	rcx, QWORD PTR lck$82382[rsp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
; Line 378
	mov	edx, -1					; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+128]
	call	QWORD PTR __imp_WaitForSingleObject
; Line 379
	jmp	$LN4@GetThreadM
$LN3@GetThreadM:
; Line 381
	lea	rax, QWORD PTR $T83701[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR pmsg$[rsp]
	mov	ecx, 24
	rep movsb
	lea	rax, QWORD PTR $T83701[rsp]
	mov	rdi, QWORD PTR msg$[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
; Line 384
	mov	rax, QWORD PTR pmsg$[rsp]
	mov	QWORD PTR $T83695[rsp], rax
	mov	rcx, QWORD PTR $T83695[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 386
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
?GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z ENDP	; CMsgThread::GetThreadMsg
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pmsg$ = 32
lck$82382 = 56
$T83695 = 72
$T83701 = 80
$T83702 = 104
this$ = 144
msg$ = 152
?dtor$0@?0??GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z@4HA PROC ; `CMsgThread::GetThreadMsg'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR lck$82382[rbp]
	call	??1CAutoLock@@QEAA@XZ			; CAutoLock::~CAutoLock
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??GetThreadMsg@CMsgThread@@UEAAXPEAVCMsg@@@Z@4HA ENDP ; `CMsgThread::GetThreadMsg'::`1'::dtor$0
text$x	ENDS
PUBLIC	?lstrcpyWInternal@@YAPEA_WPEA_WPEB_W@Z		; lstrcpyWInternal
EXTRN	__imp_lstrcpyW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lstrcpyWInternal@@YAPEA_WPEA_WPEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?lstrcpyWInternal@@YAPEA_WPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lstrcpyWInternal@@YAPEA_WPEA_WPEB_W@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?lstrcpyWInternal@@YAPEA_WPEA_WPEB_W@Z
_TEXT	SEGMENT
lpString1$ = 48
lpString2$ = 56
?lstrcpyWInternal@@YAPEA_WPEA_WPEB_W@Z PROC		; lstrcpyWInternal, COMDAT
; Line 507
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 508
	mov	rdx, QWORD PTR lpString2$[rsp]
	mov	rcx, QWORD PTR lpString1$[rsp]
	call	QWORD PTR __imp_lstrcpyW
; Line 509
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?lstrcpyWInternal@@YAPEA_WPEA_WPEB_W@Z ENDP		; lstrcpyWInternal
_TEXT	ENDS
PUBLIC	?lstrcpynWInternal@@YAPEA_WPEA_WPEB_WH@Z	; lstrcpynWInternal
EXTRN	__imp_lstrcpynW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lstrcpynWInternal@@YAPEA_WPEA_WPEB_WH@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?lstrcpynWInternal@@YAPEA_WPEA_WPEB_WH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lstrcpynWInternal@@YAPEA_WPEA_WPEB_WH@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?lstrcpynWInternal@@YAPEA_WPEA_WPEB_WH@Z
_TEXT	SEGMENT
lpString1$ = 48
lpString2$ = 56
iMaxLength$ = 64
?lstrcpynWInternal@@YAPEA_WPEA_WPEB_WH@Z PROC		; lstrcpynWInternal, COMDAT
; Line 516
$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 517
	mov	r8d, DWORD PTR iMaxLength$[rsp]
	mov	rdx, QWORD PTR lpString2$[rsp]
	mov	rcx, QWORD PTR lpString1$[rsp]
	call	QWORD PTR __imp_lstrcpynW
; Line 518
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?lstrcpynWInternal@@YAPEA_WPEA_WPEB_WH@Z ENDP		; lstrcpynWInternal
_TEXT	ENDS
PUBLIC	?lstrcmpWInternal@@YAHPEB_W0@Z			; lstrcmpWInternal
EXTRN	__imp_lstrcmpW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lstrcmpWInternal@@YAHPEB_W0@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?lstrcmpWInternal@@YAHPEB_W0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lstrcmpWInternal@@YAHPEB_W0@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?lstrcmpWInternal@@YAHPEB_W0@Z
_TEXT	SEGMENT
lpString1$ = 48
lpString2$ = 56
?lstrcmpWInternal@@YAHPEB_W0@Z PROC			; lstrcmpWInternal, COMDAT
; Line 524
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 525
	mov	rdx, QWORD PTR lpString2$[rsp]
	mov	rcx, QWORD PTR lpString1$[rsp]
	call	QWORD PTR __imp_lstrcmpW
; Line 526
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?lstrcmpWInternal@@YAHPEB_W0@Z ENDP			; lstrcmpWInternal
_TEXT	ENDS
PUBLIC	?lstrcmpiWInternal@@YAHPEB_W0@Z			; lstrcmpiWInternal
EXTRN	__imp_lstrcmpiW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lstrcmpiWInternal@@YAHPEB_W0@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?lstrcmpiWInternal@@YAHPEB_W0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lstrcmpiWInternal@@YAHPEB_W0@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?lstrcmpiWInternal@@YAHPEB_W0@Z
_TEXT	SEGMENT
lpString1$ = 48
lpString2$ = 56
?lstrcmpiWInternal@@YAHPEB_W0@Z PROC			; lstrcmpiWInternal, COMDAT
; Line 533
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 534
	mov	rdx, QWORD PTR lpString2$[rsp]
	mov	rcx, QWORD PTR lpString1$[rsp]
	call	QWORD PTR __imp_lstrcmpiW
; Line 535
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?lstrcmpiWInternal@@YAHPEB_W0@Z ENDP			; lstrcmpiWInternal
_TEXT	ENDS
PUBLIC	?lstrlenWInternal@@YAHPEB_W@Z			; lstrlenWInternal
EXTRN	__imp_lstrlenW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lstrlenWInternal@@YAHPEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?lstrlenWInternal@@YAHPEB_W@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lstrlenWInternal@@YAHPEB_W@Z DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?lstrlenWInternal@@YAHPEB_W@Z
_TEXT	SEGMENT
lpString$ = 48
?lstrlenWInternal@@YAHPEB_W@Z PROC			; lstrlenWInternal, COMDAT
; Line 541
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 542
	mov	rcx, QWORD PTR lpString$[rsp]
	call	QWORD PTR __imp_lstrlenW
; Line 543
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?lstrlenWInternal@@YAHPEB_W@Z ENDP			; lstrlenWInternal
_TEXT	ENDS
PUBLIC	?wsprintfWInternal@@YAHPEA_WPEB_WZZ		; wsprintfWInternal
EXTRN	__imp_wvsprintfW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?wsprintfWInternal@@YAHPEA_WPEB_WZZ DD imagerel $LN3
	DD	imagerel $LN3+118
	DD	imagerel $unwind$?wsprintfWInternal@@YAHPEA_WPEB_WZZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?wsprintfWInternal@@YAHPEA_WPEB_WZZ DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?wsprintfWInternal@@YAHPEA_WPEB_WZZ$rtcName$0 DB 076H	; wsprintfWInternal
	DB	061H
	DB	00H
	ORG $+13
?wsprintfWInternal@@YAHPEA_WPEB_WZZ$rtcVarDesc DD 028H	; wsprintfWInternal
	DD	08H
	DQ	FLAT:?wsprintfWInternal@@YAHPEA_WPEB_WZZ$rtcName$0
	ORG $+48
?wsprintfWInternal@@YAHPEA_WPEB_WZZ$rtcFrameData DD 01H	; wsprintfWInternal
	DD	00H
	DQ	FLAT:?wsprintfWInternal@@YAHPEA_WPEB_WZZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?wsprintfWInternal@@YAHPEA_WPEB_WZZ
_TEXT	SEGMENT
va$ = 40
i$ = 52
wszOut$ = 80
pszFmt$ = 88
?wsprintfWInternal@@YAHPEA_WPEB_WZZ PROC		; wsprintfWInternal, COMDAT
; Line 548
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 550
	lea	rax, QWORD PTR pszFmt$[rsp+8]
	mov	QWORD PTR va$[rsp], rax
; Line 551
	mov	r8, QWORD PTR va$[rsp]
	mov	rdx, QWORD PTR pszFmt$[rsp]
	mov	rcx, QWORD PTR wszOut$[rsp]
	call	QWORD PTR __imp_wvsprintfW
	mov	DWORD PTR i$[rsp], eax
; Line 552
	mov	QWORD PTR va$[rsp], 0
; Line 553
	mov	eax, DWORD PTR i$[rsp]
; Line 554
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?wsprintfWInternal@@YAHPEA_WPEB_WZZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?wsprintfWInternal@@YAHPEA_WPEB_WZZ ENDP		; wsprintfWInternal
_TEXT	ENDS
PUBLIC	?IntToWstr@@YAXHPEA_W@Z				; IntToWstr
EXTRN	__imp_wsprintfW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IntToWstr@@YAXHPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?IntToWstr@@YAXHPEA_W@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IntToWstr@@YAXHPEA_W@Z DD 022101H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?IntToWstr@@YAXHPEA_W@Z
_TEXT	SEGMENT
i$ = 48
wstr$ = 56
?IntToWstr@@YAXHPEA_W@Z PROC				; IntToWstr, COMDAT
; Line 560
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+48]
; Line 562
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG82417
	mov	rcx, QWORD PTR wstr$[rsp]
	call	QWORD PTR __imp_wsprintfW
; Line 568
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?IntToWstr@@YAXHPEA_W@Z ENDP				; IntToWstr
_TEXT	ENDS
PUBLIC	memmoveInternal
EXTRN	memmove:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$memmoveInternal DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$memmoveInternal
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$memmoveInternal DD 022801H
	DD	070105214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT memmoveInternal
_TEXT	SEGMENT
ret$ = 32
dst$ = 64
src$ = 72
count$ = 80
memmoveInternal PROC					; COMDAT
; Line 590
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 591
	mov	rax, QWORD PTR dst$[rsp]
	mov	QWORD PTR ret$[rsp], rax
; Line 635
	mov	r8, QWORD PTR count$[rsp]
	mov	rdx, QWORD PTR src$[rsp]
	mov	rcx, QWORD PTR dst$[rsp]
	call	memmove
; Line 638
	mov	rax, QWORD PTR ret$[rsp]
; Line 639
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
memmoveInternal ENDP
_TEXT	ENDS
PUBLIC	?llMulDiv@@YA_J_J000@Z				; llMulDiv
;	COMDAT pdata
pdata	SEGMENT
$pdata$?llMulDiv@@YA_J_J000@Z DD imagerel $LN44
	DD	imagerel $LN44+1658
	DD	imagerel $unwind$?llMulDiv@@YA_J_J000@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?llMulDiv@@YA_J_J000@Z DD 033301H
	DD	03c011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?llMulDiv@@YA_J_J000@Z$rtcName$0 DB 075H		; llMulDiv
	DB	061H
	DB	00H
	ORG $+1
?llMulDiv@@YA_J_J000@Z$rtcName$1 DB 075H		; llMulDiv
	DB	062H
	DB	00H
	ORG $+1
?llMulDiv@@YA_J_J000@Z$rtcName$2 DB 070H		; llMulDiv
	DB	00H
	ORG $+2
?llMulDiv@@YA_J_J000@Z$rtcName$3 DB 078H		; llMulDiv
	DB	00H
	ORG $+2
?llMulDiv@@YA_J_J000@Z$rtcName$4 DB 075H		; llMulDiv
	DB	064H
	DB	00H
	ORG $+5
?llMulDiv@@YA_J_J000@Z$rtcName$5 DB 075H		; llMulDiv
	DB	06cH
	DB	069H
	DB	054H
	DB	06fH
	DB	074H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+3
?llMulDiv@@YA_J_J000@Z$rtcName$6 DB 075H		; llMulDiv
	DB	06cH
	DB	069H
	DB	063H
	DB	00H
	ORG $+7
?llMulDiv@@YA_J_J000@Z$rtcName$7 DB 075H		; llMulDiv
	DB	06cH
	DB	069H
	DB	044H
	DB	069H
	DB	076H
	DB	069H
	DB	064H
	DB	065H
	DB	06eH
	DB	064H
	DB	00H
	ORG $+4
?llMulDiv@@YA_J_J000@Z$rtcName$8 DB 075H		; llMulDiv
	DB	06cH
	DB	069H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+6
?llMulDiv@@YA_J_J000@Z$rtcVarDesc DD 0158H		; llMulDiv
	DD	08H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$8
	DD	0138H
	DD	08H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$7
	DD	0118H
	DD	08H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$6
	DD	0f8H
	DD	08H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$5
	DD	0c8H
	DD	010H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$4
	DD	0a8H
	DD	08H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$3
	DD	078H
	DD	010H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcName$0
	ORG $+432
?llMulDiv@@YA_J_J000@Z$rtcFrameData DD 09H		; llMulDiv
	DD	00H
	DQ	FLAT:?llMulDiv@@YA_J_J000@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?llMulDiv@@YA_J_J000@Z
_TEXT	SEGMENT
ua$ = 40
ub$ = 72
uc$ = 88
bSign$ = 96
p$ = 120
x$ = 168
ud$82456 = 200
uliTotal$82471 = 248
ullResult$ = 264
ulic$ = 280
uliDividend$82486 = 312
uliResult$82487 = 344
dwDivisor$82488 = 356
i$82494 = 360
tv66 = 368
tv69 = 376
tv72 = 384
tv74 = 392
tv76 = 396
tv192 = 400
tv203 = 408
tv208 = 416
tv213 = 424
tv220 = 432
tv224 = 440
tv227 = 448
tv230 = 456
tv235 = 464
tv261 = 472
a$ = 496
b$ = 504
c$ = 512
d$ = 520
?llMulDiv@@YA_J_J000@Z PROC				; llMulDiv, COMDAT
; Line 653
$LN44:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 480				; 000001e0H
	mov	rdi, rsp
	mov	ecx, 120				; 00000078H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+496]
; Line 658
	cmp	QWORD PTR a$[rsp], 0
	jl	SHORT $LN20@llMulDiv
	mov	rax, QWORD PTR a$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	jmp	SHORT $LN21@llMulDiv
$LN20@llMulDiv:
	mov	rax, QWORD PTR a$[rsp]
	neg	rax
	mov	QWORD PTR tv66[rsp], rax
$LN21@llMulDiv:
	mov	rax, QWORD PTR tv66[rsp]
	mov	QWORD PTR ua$[rsp], rax
; Line 659
	cmp	QWORD PTR b$[rsp], 0
	jl	SHORT $LN22@llMulDiv
	mov	rax, QWORD PTR b$[rsp]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN23@llMulDiv
$LN22@llMulDiv:
	mov	rax, QWORD PTR b$[rsp]
	neg	rax
	mov	QWORD PTR tv69[rsp], rax
$LN23@llMulDiv:
	mov	rax, QWORD PTR tv69[rsp]
	mov	QWORD PTR ub$[rsp], rax
; Line 660
	cmp	QWORD PTR c$[rsp], 0
	jl	SHORT $LN24@llMulDiv
	mov	rax, QWORD PTR c$[rsp]
	mov	QWORD PTR tv72[rsp], rax
	jmp	SHORT $LN25@llMulDiv
$LN24@llMulDiv:
	mov	rax, QWORD PTR c$[rsp]
	neg	rax
	mov	QWORD PTR tv72[rsp], rax
$LN25@llMulDiv:
	mov	rax, QWORD PTR tv72[rsp]
	mov	QWORD PTR uc$[rsp], rax
; Line 661
	cmp	QWORD PTR a$[rsp], 0
	jge	SHORT $LN26@llMulDiv
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN27@llMulDiv
$LN26@llMulDiv:
	mov	DWORD PTR tv74[rsp], 0
$LN27@llMulDiv:
	cmp	QWORD PTR b$[rsp], 0
	jge	SHORT $LN28@llMulDiv
	mov	DWORD PTR tv76[rsp], 1
	jmp	SHORT $LN29@llMulDiv
$LN28@llMulDiv:
	mov	DWORD PTR tv76[rsp], 0
$LN29@llMulDiv:
	mov	eax, DWORD PTR tv76[rsp]
	mov	ecx, DWORD PTR tv74[rsp]
	xor	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR bSign$[rsp], eax
; Line 665
	mov	eax, DWORD PTR ua$[rsp]
	mov	ecx, DWORD PTR ub$[rsp]
	imul	rax, rcx
	mov	QWORD PTR p$[rsp], rax
; Line 681
	mov	eax, DWORD PTR ua$[rsp]
	mov	ecx, DWORD PTR ub$[rsp+4]
	imul	rax, rcx
	mov	ecx, DWORD PTR ua$[rsp+4]
	mov	edx, DWORD PTR ub$[rsp]
	imul	rcx, rdx
	add	rax, rcx
	mov	ecx, DWORD PTR p$[rsp+4]
	add	rax, rcx
	mov	QWORD PTR x$[rsp], rax
; Line 682
	mov	eax, DWORD PTR x$[rsp]
	mov	DWORD PTR p$[rsp+4], eax
; Line 683
	mov	eax, DWORD PTR ua$[rsp+4]
	mov	ecx, DWORD PTR ub$[rsp+4]
	imul	rax, rcx
	mov	ecx, DWORD PTR x$[rsp+4]
	add	rax, rcx
	mov	QWORD PTR p$[rsp+8], rax
; Line 685
	cmp	QWORD PTR d$[rsp], 0
	je	$LN17@llMulDiv
; Line 687
	cmp	DWORD PTR bSign$[rsp], 0
	je	SHORT $LN16@llMulDiv
; Line 688
	mov	rax, QWORD PTR d$[rsp]
	neg	rax
	mov	QWORD PTR ud$82456[rsp], rax
; Line 689
	cmp	QWORD PTR d$[rsp], 0
	jle	SHORT $LN15@llMulDiv
; Line 691
	mov	QWORD PTR ud$82456[rsp+8], -1
; Line 692
	jmp	SHORT $LN14@llMulDiv
$LN15@llMulDiv:
; Line 693
	mov	QWORD PTR ud$82456[rsp+8], 0
$LN14@llMulDiv:
; Line 695
	jmp	SHORT $LN13@llMulDiv
$LN16@llMulDiv:
; Line 696
	mov	rax, QWORD PTR d$[rsp]
	mov	QWORD PTR ud$82456[rsp], rax
; Line 697
	cmp	QWORD PTR d$[rsp], 0
	jge	SHORT $LN12@llMulDiv
; Line 698
	mov	QWORD PTR ud$82456[rsp+8], -1
; Line 699
	jmp	SHORT $LN11@llMulDiv
$LN12@llMulDiv:
; Line 700
	mov	QWORD PTR ud$82456[rsp+8], 0
$LN11@llMulDiv:
$LN13@llMulDiv:
; Line 707
	mov	eax, DWORD PTR ud$82456[rsp]
	mov	ecx, DWORD PTR p$[rsp]
	add	rax, rcx
	mov	QWORD PTR uliTotal$82471[rsp], rax
; Line 708
	mov	eax, DWORD PTR uliTotal$82471[rsp]
	mov	DWORD PTR p$[rsp], eax
; Line 711
	mov	eax, DWORD PTR uliTotal$82471[rsp+4]
	mov	DWORD PTR uliTotal$82471[rsp], eax
; Line 712
	mov	DWORD PTR uliTotal$82471[rsp+4], 0
; Line 715
	mov	eax, DWORD PTR ud$82456[rsp+4]
	mov	ecx, DWORD PTR p$[rsp+4]
	add	rcx, QWORD PTR uliTotal$82471[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR uliTotal$82471[rsp], rax
; Line 716
	mov	eax, DWORD PTR uliTotal$82471[rsp]
	mov	DWORD PTR p$[rsp+4], eax
; Line 719
	mov	eax, DWORD PTR uliTotal$82471[rsp+4]
	mov	DWORD PTR uliTotal$82471[rsp], eax
; Line 720
	mov	DWORD PTR uliTotal$82471[rsp+4], 0
; Line 723
	mov	rax, QWORD PTR uliTotal$82471[rsp]
	mov	rcx, QWORD PTR ud$82456[rsp+8]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR p$[rsp+8]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rsp+8], rax
; Line 726
	cmp	DWORD PTR p$[rsp+12], 0
	jge	$LN10@llMulDiv
; Line 727
	cmp	DWORD PTR bSign$[rsp], 0
	jne	SHORT $LN30@llMulDiv
	mov	DWORD PTR tv192[rsp], 1
	jmp	SHORT $LN31@llMulDiv
$LN30@llMulDiv:
	mov	DWORD PTR tv192[rsp], 0
$LN31@llMulDiv:
	mov	eax, DWORD PTR tv192[rsp]
	mov	DWORD PTR bSign$[rsp], eax
; Line 730
	mov	rax, QWORD PTR p$[rsp]
	not	rax
	mov	QWORD PTR p$[rsp], rax
; Line 731
	mov	rax, QWORD PTR p$[rsp+8]
	not	rax
	mov	QWORD PTR p$[rsp+8], rax
; Line 732
	mov	rax, QWORD PTR p$[rsp]
	inc	rax
	mov	QWORD PTR p$[rsp], rax
; Line 733
	cmp	QWORD PTR p$[rsp], 0
	jne	SHORT $LN32@llMulDiv
	mov	QWORD PTR tv203[rsp], 1
	jmp	SHORT $LN33@llMulDiv
$LN32@llMulDiv:
	mov	QWORD PTR tv203[rsp], 0
$LN33@llMulDiv:
	mov	rax, QWORD PTR tv203[rsp]
	mov	rcx, QWORD PTR p$[rsp+8]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rsp+8], rax
$LN10@llMulDiv:
$LN17@llMulDiv:
; Line 738
	cmp	QWORD PTR c$[rsp], 0
	jge	SHORT $LN9@llMulDiv
; Line 739
	cmp	DWORD PTR bSign$[rsp], 0
	jne	SHORT $LN34@llMulDiv
	mov	DWORD PTR tv208[rsp], 1
	jmp	SHORT $LN35@llMulDiv
$LN34@llMulDiv:
	mov	DWORD PTR tv208[rsp], 0
$LN35@llMulDiv:
	mov	eax, DWORD PTR tv208[rsp]
	mov	DWORD PTR bSign$[rsp], eax
$LN9@llMulDiv:
; Line 744
	mov	rax, QWORD PTR p$[rsp+8]
	cmp	QWORD PTR uc$[rsp], rax
	ja	SHORT $LN8@llMulDiv
; Line 746
	cmp	DWORD PTR bSign$[rsp], 0
	je	SHORT $LN36@llMulDiv
	mov	rax, -9223372036854775808		; 8000000000000000H
	mov	QWORD PTR tv213[rsp], rax
	jmp	SHORT $LN37@llMulDiv
$LN36@llMulDiv:
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	mov	QWORD PTR tv213[rsp], rax
$LN37@llMulDiv:
	mov	rax, QWORD PTR tv213[rsp]
	jmp	$LN18@llMulDiv
$LN8@llMulDiv:
; Line 753
	cmp	QWORD PTR p$[rsp+8], 0
	jne	SHORT $LN7@llMulDiv
; Line 754
	xor	edx, edx
	mov	rax, QWORD PTR p$[rsp]
	div	QWORD PTR uc$[rsp]
	mov	QWORD PTR ullResult$[rsp], rax
; Line 755
	cmp	DWORD PTR bSign$[rsp], 0
	je	SHORT $LN38@llMulDiv
	mov	rax, QWORD PTR ullResult$[rsp]
	neg	rax
	mov	QWORD PTR tv220[rsp], rax
	jmp	SHORT $LN39@llMulDiv
$LN38@llMulDiv:
	mov	rax, QWORD PTR ullResult$[rsp]
	mov	QWORD PTR tv220[rsp], rax
$LN39@llMulDiv:
	mov	rax, QWORD PTR tv220[rsp]
	jmp	$LN18@llMulDiv
$LN7@llMulDiv:
; Line 760
	mov	rax, QWORD PTR uc$[rsp]
	mov	QWORD PTR ulic$[rsp], rax
; Line 761
	cmp	DWORD PTR ulic$[rsp+4], 0
	jne	$LN6@llMulDiv
; Line 764
	mov	eax, DWORD PTR uc$[rsp]
	mov	DWORD PTR dwDivisor$82488[rsp], eax
; Line 766
	mov	eax, DWORD PTR p$[rsp+8]
	mov	DWORD PTR uliDividend$82486[rsp+4], eax
; Line 767
	mov	eax, DWORD PTR p$[rsp+4]
	mov	DWORD PTR uliDividend$82486[rsp], eax
; Line 769
	mov	eax, DWORD PTR dwDivisor$82488[rsp]
	mov	QWORD PTR tv224[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR uliDividend$82486[rsp]
	mov	rcx, QWORD PTR tv224[rsp]
	div	rcx
	mov	DWORD PTR uliResult$82487[rsp+4], eax
; Line 770
	mov	eax, DWORD PTR dwDivisor$82488[rsp]
	mov	QWORD PTR tv227[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR uliDividend$82486[rsp]
	mov	rcx, QWORD PTR tv227[rsp]
	div	rcx
	mov	rax, rdx
	mov	DWORD PTR p$[rsp+4], eax
; Line 771
	mov	DWORD PTR uliResult$82487[rsp], 0
; Line 772
	mov	eax, DWORD PTR dwDivisor$82488[rsp]
	mov	QWORD PTR tv230[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR tv230[rsp]
	div	rcx
	add	rax, QWORD PTR uliResult$82487[rsp]
	mov	QWORD PTR uliResult$82487[rsp], rax
; Line 791
	cmp	DWORD PTR bSign$[rsp], 0
	je	SHORT $LN40@llMulDiv
	mov	rax, QWORD PTR uliResult$82487[rsp]
	neg	rax
	mov	QWORD PTR tv235[rsp], rax
	jmp	SHORT $LN41@llMulDiv
$LN40@llMulDiv:
	mov	rax, QWORD PTR uliResult$82487[rsp]
	mov	QWORD PTR tv235[rsp], rax
$LN41@llMulDiv:
	mov	rax, QWORD PTR tv235[rsp]
	jmp	$LN18@llMulDiv
$LN6@llMulDiv:
; Line 795
	mov	QWORD PTR ullResult$[rsp], 0
; Line 798
	mov	DWORD PTR i$82494[rsp], 0
	jmp	SHORT $LN5@llMulDiv
$LN4@llMulDiv:
	mov	eax, DWORD PTR i$82494[rsp]
	inc	eax
	mov	DWORD PTR i$82494[rsp], eax
$LN5@llMulDiv:
	cmp	DWORD PTR i$82494[rsp], 64		; 00000040H
	jge	$LN3@llMulDiv
; Line 799
	mov	rax, QWORD PTR ullResult$[rsp]
	shl	rax, 1
	mov	QWORD PTR ullResult$[rsp], rax
; Line 802
	mov	rax, QWORD PTR p$[rsp+8]
	shl	rax, 1
	mov	QWORD PTR p$[rsp+8], rax
; Line 803
	mov	eax, DWORD PTR p$[rsp+4]
	and	eax, -2147483648			; 80000000H
	test	eax, eax
	je	SHORT $LN2@llMulDiv
; Line 804
	mov	eax, DWORD PTR p$[rsp+8]
	inc	eax
	mov	DWORD PTR p$[rsp+8], eax
$LN2@llMulDiv:
; Line 806
	mov	rax, QWORD PTR p$[rsp]
	shl	rax, 1
	mov	QWORD PTR p$[rsp], rax
; Line 809
	mov	rax, QWORD PTR p$[rsp+8]
	cmp	QWORD PTR uc$[rsp], rax
	ja	SHORT $LN1@llMulDiv
; Line 810
	mov	rax, QWORD PTR uc$[rsp]
	mov	rcx, QWORD PTR p$[rsp+8]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rsp+8], rax
; Line 811
	mov	rax, QWORD PTR ullResult$[rsp]
	inc	rax
	mov	QWORD PTR ullResult$[rsp], rax
$LN1@llMulDiv:
; Line 813
	jmp	$LN4@llMulDiv
$LN3@llMulDiv:
; Line 815
	cmp	DWORD PTR bSign$[rsp], 0
	je	SHORT $LN42@llMulDiv
	mov	rax, QWORD PTR ullResult$[rsp]
	neg	rax
	mov	QWORD PTR tv261[rsp], rax
	jmp	SHORT $LN43@llMulDiv
$LN42@llMulDiv:
	mov	rax, QWORD PTR ullResult$[rsp]
	mov	QWORD PTR tv261[rsp], rax
$LN43@llMulDiv:
	mov	rax, QWORD PTR tv261[rsp]
$LN18@llMulDiv:
; Line 816
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?llMulDiv@@YA_J_J000@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 480				; 000001e0H
	pop	rdi
	ret	0
?llMulDiv@@YA_J_J000@Z ENDP				; llMulDiv
_TEXT	ENDS
PUBLIC	?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z ; EnlargedUnsignedDivide
PUBLIC	?Int64x32Div32@@YA_J_JJJJ@Z			; Int64x32Div32
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Int64x32Div32@@YA_J_JJJJ@Z DD imagerel $LN37
	DD	imagerel $LN37+1104
	DD	imagerel $unwind$?Int64x32Div32@@YA_J_JJJJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Int64x32Div32@@YA_J_JJJJ@Z DD 033201H
	DD	026011bH
	DD	07014H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$0 DB 075H		; Int64x32Div32
	DB	061H
	DB	00H
	ORG $+1
?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$1 DB 070H		; Int64x32Div32
	DB	030H
	DB	00H
	ORG $+1
?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$2 DB 078H		; Int64x32Div32
	DB	00H
	ORG $+2
?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$3 DB 075H		; Int64x32Div32
	DB	064H
	DB	030H
	DB	00H
?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$4 DB 075H		; Int64x32Div32
	DB	06cH
	DB	069H
	DB	054H
	DB	06fH
	DB	074H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+7
?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$5 DB 075H		; Int64x32Div32
	DB	06cH
	DB	069H
	DB	044H
	DB	069H
	DB	076H
	DB	069H
	DB	064H
	DB	065H
	DB	06eH
	DB	064H
	DB	00H
	ORG $+4
?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$6 DB 075H		; Int64x32Div32
	DB	06cH
	DB	069H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+6
?Int64x32Div32@@YA_J_JJJJ@Z$rtcVarDesc DD 0e8H		; Int64x32Div32
	DD	08H
	DQ	FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$6
	DD	0c8H
	DD	08H
	DQ	FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$5
	DD	0a8H
	DD	08H
	DQ	FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$4
	DD	088H
	DD	08H
	DQ	FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$3
	DD	068H
	DD	08H
	DQ	FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcName$0
	ORG $+336
?Int64x32Div32@@YA_J_JJJJ@Z$rtcFrameData DD 07H		; Int64x32Div32
	DD	00H
	DQ	FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?Int64x32Div32@@YA_J_JJJJ@Z
_TEXT	SEGMENT
ua$ = 40
ub$ = 52
uc$ = 56
bSign$ = 60
p0$ = 72
p1$ = 84
x$82522 = 104
ud0$82529 = 136
ud1$82530 = 148
uliTotal$82544 = 168
uliDividend$ = 200
uliResult$ = 232
dwDivisor$ = 244
tv66 = 248
tv69 = 256
tv72 = 260
tv74 = 264
tv76 = 268
tv137 = 272
tv142 = 276
tv146 = 280
tv149 = 288
tv194 = 296
a$ = 320
b$ = 328
c$ = 336
d$ = 344
?Int64x32Div32@@YA_J_JJJJ@Z PROC			; Int64x32Div32, COMDAT
; Line 819
$LN37:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rdi, rsp
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+320]
; Line 825
	cmp	QWORD PTR a$[rsp], 0
	jl	SHORT $LN17@Int64x32Di
	mov	rax, QWORD PTR a$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	jmp	SHORT $LN18@Int64x32Di
$LN17@Int64x32Di:
	mov	rax, QWORD PTR a$[rsp]
	neg	rax
	mov	QWORD PTR tv66[rsp], rax
$LN18@Int64x32Di:
	mov	rax, QWORD PTR tv66[rsp]
	mov	QWORD PTR ua$[rsp], rax
; Line 826
	cmp	DWORD PTR b$[rsp], 0
	jl	SHORT $LN19@Int64x32Di
	mov	eax, DWORD PTR b$[rsp]
	mov	DWORD PTR tv69[rsp], eax
	jmp	SHORT $LN20@Int64x32Di
$LN19@Int64x32Di:
	mov	eax, DWORD PTR b$[rsp]
	neg	eax
	mov	DWORD PTR tv69[rsp], eax
$LN20@Int64x32Di:
	mov	eax, DWORD PTR tv69[rsp]
	mov	DWORD PTR ub$[rsp], eax
; Line 827
	cmp	DWORD PTR c$[rsp], 0
	jl	SHORT $LN21@Int64x32Di
	mov	eax, DWORD PTR c$[rsp]
	mov	DWORD PTR tv72[rsp], eax
	jmp	SHORT $LN22@Int64x32Di
$LN21@Int64x32Di:
	mov	eax, DWORD PTR c$[rsp]
	neg	eax
	mov	DWORD PTR tv72[rsp], eax
$LN22@Int64x32Di:
	mov	eax, DWORD PTR tv72[rsp]
	mov	DWORD PTR uc$[rsp], eax
; Line 828
	cmp	QWORD PTR a$[rsp], 0
	jge	SHORT $LN23@Int64x32Di
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN24@Int64x32Di
$LN23@Int64x32Di:
	mov	DWORD PTR tv74[rsp], 0
$LN24@Int64x32Di:
	cmp	DWORD PTR b$[rsp], 0
	jge	SHORT $LN25@Int64x32Di
	mov	DWORD PTR tv76[rsp], 1
	jmp	SHORT $LN26@Int64x32Di
$LN25@Int64x32Di:
	mov	DWORD PTR tv76[rsp], 0
$LN26@Int64x32Di:
	mov	eax, DWORD PTR tv76[rsp]
	mov	ecx, DWORD PTR tv74[rsp]
	xor	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR bSign$[rsp], eax
; Line 833
	mov	eax, DWORD PTR ua$[rsp]
	mov	ecx, DWORD PTR ub$[rsp]
	imul	rax, rcx
	mov	QWORD PTR p0$[rsp], rax
; Line 835
	cmp	DWORD PTR ua$[rsp+4], 0
	je	SHORT $LN14@Int64x32Di
; Line 837
	mov	eax, DWORD PTR ua$[rsp+4]
	mov	ecx, DWORD PTR ub$[rsp]
	imul	rax, rcx
	mov	ecx, DWORD PTR p0$[rsp+4]
	add	rax, rcx
	mov	QWORD PTR x$82522[rsp], rax
; Line 838
	mov	eax, DWORD PTR x$82522[rsp]
	mov	DWORD PTR p0$[rsp+4], eax
; Line 839
	mov	eax, DWORD PTR x$82522[rsp+4]
	mov	DWORD PTR p1$[rsp], eax
; Line 840
	jmp	SHORT $LN13@Int64x32Di
$LN14@Int64x32Di:
; Line 841
	mov	DWORD PTR p1$[rsp], 0
$LN13@Int64x32Di:
; Line 844
	cmp	DWORD PTR d$[rsp], 0
	je	$LN12@Int64x32Di
; Line 848
	cmp	DWORD PTR bSign$[rsp], 0
	je	SHORT $LN11@Int64x32Di
; Line 853
	movsxd	rax, DWORD PTR d$[rsp]
	neg	rax
	mov	QWORD PTR ud0$82529[rsp], rax
; Line 854
	cmp	DWORD PTR d$[rsp], 0
	jle	SHORT $LN10@Int64x32Di
; Line 856
	mov	DWORD PTR ud1$82530[rsp], -1		; ffffffffH
; Line 857
	jmp	SHORT $LN9@Int64x32Di
$LN10@Int64x32Di:
; Line 858
	mov	DWORD PTR ud1$82530[rsp], 0
$LN9@Int64x32Di:
; Line 860
	jmp	SHORT $LN8@Int64x32Di
$LN11@Int64x32Di:
; Line 861
	movsxd	rax, DWORD PTR d$[rsp]
	mov	QWORD PTR ud0$82529[rsp], rax
; Line 862
	cmp	DWORD PTR d$[rsp], 0
	jge	SHORT $LN7@Int64x32Di
; Line 863
	mov	DWORD PTR ud1$82530[rsp], -1		; ffffffffH
; Line 864
	jmp	SHORT $LN6@Int64x32Di
$LN7@Int64x32Di:
; Line 865
	mov	DWORD PTR ud1$82530[rsp], 0
$LN6@Int64x32Di:
$LN8@Int64x32Di:
; Line 872
	mov	eax, DWORD PTR ud0$82529[rsp]
	mov	ecx, DWORD PTR p0$[rsp]
	add	rax, rcx
	mov	QWORD PTR uliTotal$82544[rsp], rax
; Line 873
	mov	eax, DWORD PTR uliTotal$82544[rsp]
	mov	DWORD PTR p0$[rsp], eax
; Line 876
	mov	eax, DWORD PTR uliTotal$82544[rsp+4]
	mov	DWORD PTR uliTotal$82544[rsp], eax
; Line 877
	mov	DWORD PTR uliTotal$82544[rsp+4], 0
; Line 880
	mov	eax, DWORD PTR ud0$82529[rsp+4]
	mov	ecx, DWORD PTR p0$[rsp+4]
	add	rcx, QWORD PTR uliTotal$82544[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR uliTotal$82544[rsp], rax
; Line 881
	mov	eax, DWORD PTR uliTotal$82544[rsp]
	mov	DWORD PTR p0$[rsp+4], eax
; Line 884
	mov	eax, DWORD PTR uliTotal$82544[rsp+4]
	mov	ecx, DWORD PTR ud1$82530[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR p1$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p1$[rsp], eax
; Line 887
	cmp	DWORD PTR p1$[rsp], 0
	jge	$LN5@Int64x32Di
; Line 888
	cmp	DWORD PTR bSign$[rsp], 0
	jne	SHORT $LN27@Int64x32Di
	mov	DWORD PTR tv137[rsp], 1
	jmp	SHORT $LN28@Int64x32Di
$LN27@Int64x32Di:
	mov	DWORD PTR tv137[rsp], 0
$LN28@Int64x32Di:
	mov	eax, DWORD PTR tv137[rsp]
	mov	DWORD PTR bSign$[rsp], eax
; Line 891
	mov	rax, QWORD PTR p0$[rsp]
	not	rax
	mov	QWORD PTR p0$[rsp], rax
; Line 892
	mov	eax, DWORD PTR p1$[rsp]
	not	eax
	mov	DWORD PTR p1$[rsp], eax
; Line 893
	mov	rax, QWORD PTR p0$[rsp]
	inc	rax
	mov	QWORD PTR p0$[rsp], rax
; Line 894
	cmp	QWORD PTR p0$[rsp], 0
	jne	SHORT $LN29@Int64x32Di
	mov	DWORD PTR tv142[rsp], 1
	jmp	SHORT $LN30@Int64x32Di
$LN29@Int64x32Di:
	mov	DWORD PTR tv142[rsp], 0
$LN30@Int64x32Di:
	mov	eax, DWORD PTR tv142[rsp]
	mov	ecx, DWORD PTR p1$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p1$[rsp], eax
$LN5@Int64x32Di:
$LN12@Int64x32Di:
; Line 899
	cmp	DWORD PTR c$[rsp], 0
	jge	SHORT $LN4@Int64x32Di
; Line 900
	cmp	DWORD PTR bSign$[rsp], 0
	jne	SHORT $LN31@Int64x32Di
	mov	DWORD PTR tv146[rsp], 1
	jmp	SHORT $LN32@Int64x32Di
$LN31@Int64x32Di:
	mov	DWORD PTR tv146[rsp], 0
$LN32@Int64x32Di:
	mov	eax, DWORD PTR tv146[rsp]
	mov	DWORD PTR bSign$[rsp], eax
$LN4@Int64x32Di:
; Line 905
	mov	eax, DWORD PTR p1$[rsp]
	cmp	DWORD PTR uc$[rsp], eax
	ja	SHORT $LN3@Int64x32Di
; Line 907
	cmp	DWORD PTR bSign$[rsp], 0
	je	SHORT $LN33@Int64x32Di
	mov	rax, -9223372036854775808		; 8000000000000000H
	mov	QWORD PTR tv149[rsp], rax
	jmp	SHORT $LN34@Int64x32Di
$LN33@Int64x32Di:
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	mov	QWORD PTR tv149[rsp], rax
$LN34@Int64x32Di:
	mov	rax, QWORD PTR tv149[rsp]
	jmp	$LN15@Int64x32Di
$LN3@Int64x32Di:
; Line 915
	mov	eax, DWORD PTR uc$[rsp]
	mov	DWORD PTR dwDivisor$[rsp], eax
; Line 916
	mov	eax, DWORD PTR p1$[rsp]
	mov	DWORD PTR uliDividend$[rsp+4], eax
; Line 917
	mov	eax, DWORD PTR p0$[rsp+4]
	mov	DWORD PTR uliDividend$[rsp], eax
; Line 921
	mov	eax, DWORD PTR dwDivisor$[rsp]
	cmp	QWORD PTR uliDividend$[rsp], rax
	jb	SHORT $LN2@Int64x32Di
; Line 925
	lea	r8, QWORD PTR p0$[rsp+4]
	mov	edx, DWORD PTR dwDivisor$[rsp]
	mov	rcx, QWORD PTR uliDividend$[rsp]
	call	?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z ; EnlargedUnsignedDivide
	mov	DWORD PTR uliResult$[rsp+4], eax
; Line 926
	jmp	SHORT $LN1@Int64x32Di
$LN2@Int64x32Di:
; Line 927
	mov	DWORD PTR uliResult$[rsp+4], 0
$LN1@Int64x32Di:
; Line 932
	xor	r8d, r8d
	mov	edx, DWORD PTR dwDivisor$[rsp]
	mov	rcx, QWORD PTR p0$[rsp]
	call	?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z ; EnlargedUnsignedDivide
	mov	DWORD PTR uliResult$[rsp], eax
; Line 934
	cmp	DWORD PTR bSign$[rsp], 0
	je	SHORT $LN35@Int64x32Di
	mov	rax, QWORD PTR uliResult$[rsp]
	neg	rax
	mov	QWORD PTR tv194[rsp], rax
	jmp	SHORT $LN36@Int64x32Di
$LN35@Int64x32Di:
	mov	rax, QWORD PTR uliResult$[rsp]
	mov	QWORD PTR tv194[rsp], rax
$LN36@Int64x32Di:
	mov	rax, QWORD PTR tv194[rsp]
$LN15@Int64x32Di:
; Line 935
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Int64x32Div32@@YA_J_JJJJ@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
?Int64x32Div32@@YA_J_JJJJ@Z ENDP			; Int64x32Div32
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z DD imagerel $LN4
	DD	imagerel $LN4+104
	DD	imagerel $unwind$?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z DD 022201H
	DD	0700f1213H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z
_TEXT	SEGMENT
tv65 = 0
tv68 = 8
Dividend$ = 32
Divisor$ = 40
Remainder$ = 48
?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z PROC ; EnlargedUnsignedDivide, COMDAT
; Line 33
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 35
	cmp	QWORD PTR Remainder$[rsp], 0
	je	SHORT $LN1@EnlargedUn
; Line 36
	mov	eax, DWORD PTR Divisor$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR Dividend$[rsp]
	mov	rcx, QWORD PTR tv65[rsp]
	div	rcx
	mov	rax, rdx
	mov	rcx, QWORD PTR Remainder$[rsp]
	mov	DWORD PTR [rcx], eax
$LN1@EnlargedUn:
; Line 37
	mov	eax, DWORD PTR Divisor$[rsp]
	mov	QWORD PTR tv68[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR Dividend$[rsp]
	mov	rcx, QWORD PTR tv68[rsp]
	div	rcx
; Line 38
	add	rsp, 16
	pop	rdi
	ret	0
?EnlargedUnsignedDivide@@YAKT_ULARGE_INTEGER@@KPEAK@Z ENDP ; EnlargedUnsignedDivide
_TEXT	ENDS
EXTRN	__imp_InitializeCriticalSection:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CCritSec@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0CCritSec@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CCritSec@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CCritSec@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CCritSec@@QEAA@XZ PROC				; CCritSec::CCritSec, COMDAT
; Line 950
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 951
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_InitializeCriticalSection
; Line 952
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+44], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 0
; Line 953
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+48], 0
; Line 954
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CCritSec@@QEAA@XZ ENDP				; CCritSec::CCritSec
_TEXT	ENDS
EXTRN	__imp_DeleteCriticalSection:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CCritSec@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1CCritSec@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CCritSec@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CCritSec@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CCritSec@@QEAA@XZ PROC				; CCritSec::~CCritSec, COMDAT
; Line 957
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 958
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_DeleteCriticalSection
; Line 959
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CCritSec@@QEAA@XZ ENDP				; CCritSec::~CCritSec
_TEXT	ENDS
EXTRN	__imp_EnterCriticalSection:PROC
EXTRN	__imp_GetCurrentThreadId:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Lock@CCritSec@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+280
	DD	imagerel $unwind$?Lock@CCritSec@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Lock@CCritSec@@QEAAXXZ DD 021e01H
	DD	07006720aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Lock@CCritSec@@QEAAXXZ
_TEXT	SEGMENT
tracelevel$ = 48
us$ = 52
currentOwner$ = 56
tv83 = 60
this$ = 80
?Lock@CCritSec@@QEAAXXZ PROC				; CCritSec::Lock, COMDAT
; Line 962
$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 963
	mov	DWORD PTR tracelevel$[rsp], 3
; Line 964
	call	QWORD PTR __imp_GetCurrentThreadId
	mov	DWORD PTR us$[rsp], eax
; Line 965
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR currentOwner$[rsp], eax
; Line 966
	cmp	DWORD PTR currentOwner$[rsp], 0
	je	SHORT $LN4@Lock
	mov	eax, DWORD PTR us$[rsp]
	cmp	DWORD PTR currentOwner$[rsp], eax
	je	SHORT $LN4@Lock
; Line 968
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+48], 0
	je	SHORT $LN3@Lock
; Line 970
	call	QWORD PTR __imp_GetCurrentThreadId
	mov	ecx, DWORD PTR currentOwner$[rsp]
	mov	DWORD PTR [rsp+40], ecx
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9d, eax
	lea	r8, OFFSET FLAT:$SG82575
	mov	edx, 2
	mov	ecx, 8
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 971
	mov	DWORD PTR tracelevel$[rsp], 2
$LN3@Lock:
$LN4@Lock:
; Line 977
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_EnterCriticalSection
; Line 978
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+44]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+44]
	inc	ecx
	mov	rdx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rdx+44], ecx
	test	eax, eax
	jne	SHORT $LN7@Lock
	mov	DWORD PTR tv83[rsp], 1
	jmp	SHORT $LN8@Lock
$LN7@Lock:
	mov	DWORD PTR tv83[rsp], 0
$LN8@Lock:
	cmp	DWORD PTR tv83[rsp], 0
	je	SHORT $LN2@Lock
; Line 980
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR us$[rsp]
	mov	DWORD PTR [rax+40], ecx
; Line 982
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+48], 0
	je	SHORT $LN1@Lock
; Line 983
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+40]
	lea	r8, OFFSET FLAT:$SG82578
	mov	edx, DWORD PTR tracelevel$[rsp]
	mov	ecx, 8
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
$LN1@Lock:
$LN2@Lock:
; Line 986
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?Lock@CCritSec@@QEAAXXZ ENDP				; CCritSec::Lock
_TEXT	ENDS
EXTRN	__imp_LeaveCriticalSection:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Unlock@CCritSec@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+144
	DD	imagerel $unwind$?Unlock@CCritSec@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Unlock@CCritSec@@QEAAXXZ DD 021e01H
	DD	07006720aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Unlock@CCritSec@@QEAAXXZ
_TEXT	SEGMENT
tv66 = 48
this$ = 80
?Unlock@CCritSec@@QEAAXXZ PROC				; CCritSec::Unlock, COMDAT
; Line 988
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 989
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+44]
	dec	eax
	mov	DWORD PTR tv66[rsp], eax
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR tv66[rsp]
	mov	DWORD PTR [rax+44], ecx
	cmp	DWORD PTR tv66[rsp], 0
	jne	SHORT $LN2@Unlock
; Line 991
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+48], 0
	je	SHORT $LN1@Unlock
; Line 992
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+40]
	lea	r8, OFFSET FLAT:$SG82584
	mov	edx, 3
	mov	ecx, 8
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
$LN1@Unlock:
; Line 995
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+40], 0
$LN2@Unlock:
; Line 997
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_LeaveCriticalSection
; Line 998
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?Unlock@CCritSec@@QEAAXXZ ENDP				; CCritSec::Unlock
_TEXT	ENDS
PUBLIC	?DbgLockTrace@@YAXPEAVCCritSec@@H@Z		; DbgLockTrace
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DbgLockTrace@@YAXPEAVCCritSec@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?DbgLockTrace@@YAXPEAVCCritSec@@H@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DbgLockTrace@@YAXPEAVCCritSec@@H@Z DD 010a01H
	DD	0700aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?DbgLockTrace@@YAXPEAVCCritSec@@H@Z
_TEXT	SEGMENT
pcCrit$ = 16
fTrace$ = 24
?DbgLockTrace@@YAXPEAVCCritSec@@H@Z PROC		; DbgLockTrace, COMDAT
; Line 1001
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 1002
	mov	rax, QWORD PTR pcCrit$[rsp]
	mov	ecx, DWORD PTR fTrace$[rsp]
	mov	DWORD PTR [rax+48], ecx
; Line 1003
	pop	rdi
	ret	0
?DbgLockTrace@@YAXPEAVCCritSec@@H@Z ENDP		; DbgLockTrace
_TEXT	ENDS
PUBLIC	?CritCheckIn@@YAHPEAVCCritSec@@@Z		; CritCheckIn
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CritCheckIn@@YAHPEAVCCritSec@@@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?CritCheckIn@@YAHPEAVCCritSec@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CritCheckIn@@YAHPEAVCCritSec@@@Z DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CritCheckIn@@YAHPEAVCCritSec@@@Z
_TEXT	SEGMENT
tv67 = 32
pcCrit$ = 64
?CritCheckIn@@YAHPEAVCCritSec@@@Z PROC			; CritCheckIn, COMDAT
; Line 1006
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 1007
	call	QWORD PTR __imp_GetCurrentThreadId
	mov	rcx, QWORD PTR pcCrit$[rsp]
	cmp	eax, DWORD PTR [rcx+40]
	jne	SHORT $LN3@CritCheckI
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@CritCheckI
$LN3@CritCheckI:
	mov	DWORD PTR tv67[rsp], 0
$LN4@CritCheckI:
	mov	eax, DWORD PTR tv67[rsp]
; Line 1008
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CritCheckIn@@YAHPEAVCCritSec@@@Z ENDP			; CritCheckIn
_TEXT	ENDS
PUBLIC	?CritCheckIn@@YAHPEBVCCritSec@@@Z		; CritCheckIn
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CritCheckIn@@YAHPEBVCCritSec@@@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?CritCheckIn@@YAHPEBVCCritSec@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CritCheckIn@@YAHPEBVCCritSec@@@Z DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CritCheckIn@@YAHPEBVCCritSec@@@Z
_TEXT	SEGMENT
tv67 = 32
pcCrit$ = 64
?CritCheckIn@@YAHPEBVCCritSec@@@Z PROC			; CritCheckIn, COMDAT
; Line 1011
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 1012
	call	QWORD PTR __imp_GetCurrentThreadId
	mov	rcx, QWORD PTR pcCrit$[rsp]
	cmp	eax, DWORD PTR [rcx+40]
	jne	SHORT $LN3@CritCheckI@2
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@CritCheckI@2
$LN3@CritCheckI@2:
	mov	DWORD PTR tv67[rsp], 0
$LN4@CritCheckI@2:
	mov	eax, DWORD PTR tv67[rsp]
; Line 1013
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CritCheckIn@@YAHPEBVCCritSec@@@Z ENDP			; CritCheckIn
_TEXT	ENDS
PUBLIC	?CritCheckOut@@YAHPEAVCCritSec@@@Z		; CritCheckOut
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CritCheckOut@@YAHPEAVCCritSec@@@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?CritCheckOut@@YAHPEAVCCritSec@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CritCheckOut@@YAHPEAVCCritSec@@@Z DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CritCheckOut@@YAHPEAVCCritSec@@@Z
_TEXT	SEGMENT
tv67 = 32
pcCrit$ = 64
?CritCheckOut@@YAHPEAVCCritSec@@@Z PROC			; CritCheckOut, COMDAT
; Line 1016
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 1017
	call	QWORD PTR __imp_GetCurrentThreadId
	mov	rcx, QWORD PTR pcCrit$[rsp]
	cmp	eax, DWORD PTR [rcx+40]
	je	SHORT $LN3@CritCheckO
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@CritCheckO
$LN3@CritCheckO:
	mov	DWORD PTR tv67[rsp], 0
$LN4@CritCheckO:
	mov	eax, DWORD PTR tv67[rsp]
; Line 1018
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CritCheckOut@@YAHPEAVCCritSec@@@Z ENDP			; CritCheckOut
_TEXT	ENDS
PUBLIC	?CritCheckOut@@YAHPEBVCCritSec@@@Z		; CritCheckOut
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CritCheckOut@@YAHPEBVCCritSec@@@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?CritCheckOut@@YAHPEBVCCritSec@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CritCheckOut@@YAHPEBVCCritSec@@@Z DD 021e01H
	DD	07006520aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CritCheckOut@@YAHPEBVCCritSec@@@Z
_TEXT	SEGMENT
tv67 = 32
pcCrit$ = 64
?CritCheckOut@@YAHPEBVCCritSec@@@Z PROC			; CritCheckOut, COMDAT
; Line 1021
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 1022
	call	QWORD PTR __imp_GetCurrentThreadId
	mov	rcx, QWORD PTR pcCrit$[rsp]
	cmp	eax, DWORD PTR [rcx+40]
	je	SHORT $LN3@CritCheckO@2
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@CritCheckO@2
$LN3@CritCheckO@2:
	mov	DWORD PTR tv67[rsp], 0
$LN4@CritCheckO@2:
	mov	eax, DWORD PTR tv67[rsp]
; Line 1023
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CritCheckOut@@YAHPEBVCCritSec@@@Z ENDP			; CritCheckOut
_TEXT	ENDS
PUBLIC	WriteBSTR
EXTRN	__imp_SysAllocString:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$WriteBSTR DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$WriteBSTR
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$WriteBSTR DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT WriteBSTR
_TEXT	SEGMENT
pstrDest$ = 48
szSrc$ = 56
WriteBSTR PROC						; COMDAT
; Line 1028
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1029
	mov	rcx, QWORD PTR szSrc$[rsp]
	call	QWORD PTR __imp_SysAllocString
	mov	rcx, QWORD PTR pstrDest$[rsp]
	mov	QWORD PTR [rcx], rax
; Line 1030
	mov	rax, QWORD PTR pstrDest$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN1@WriteBSTR
	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	SHORT $LN2@WriteBSTR
$LN1@WriteBSTR:
; Line 1031
	xor	eax, eax
$LN2@WriteBSTR:
; Line 1032
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
WriteBSTR ENDP
_TEXT	ENDS
PUBLIC	FreeBSTR
EXTRN	__imp_SysFreeString:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$FreeBSTR DD imagerel $LN4
	DD	imagerel $LN4+70
	DD	imagerel $unwind$FreeBSTR
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$FreeBSTR DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT FreeBSTR
_TEXT	SEGMENT
pstr$ = 48
FreeBSTR PROC						; COMDAT
; Line 1036
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1037
	mov	rax, QWORD PTR pstr$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN1@FreeBSTR
	mov	eax, 1
	jmp	SHORT $LN2@FreeBSTR
$LN1@FreeBSTR:
; Line 1038
	mov	rax, QWORD PTR pstr$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_SysFreeString
; Line 1039
	xor	eax, eax
$LN2@FreeBSTR:
; Line 1040
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
FreeBSTR ENDP
_TEXT	ENDS
PUBLIC	AMGetWideString
EXTRN	memcpy:PROC
EXTRN	__imp_CoTaskMemAlloc:PROC
EXTRN	__imp_IsBadWritePtr:PROC
EXTRN	__imp_IsBadReadPtr:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$AMGetWideString DD imagerel $LN7
	DD	imagerel $LN7+238
	DD	imagerel $unwind$AMGetWideString
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$AMGetWideString DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT AMGetWideString
_TEXT	SEGMENT
nameLen$ = 32
psz$ = 64
ppszReturn$ = 72
AMGetWideString PROC					; COMDAT
; Line 1049
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 1050
	cmp	QWORD PTR ppszReturn$[rsp], 0
	jne	SHORT $LN4@AMGetWideS
	mov	eax, -2147467261			; ffffffff80004003H
	jmp	$LN5@AMGetWideS
$LN4@AMGetWideS:
; Line 1051
	mov	edx, 8
	mov	rcx, QWORD PTR ppszReturn$[rsp]
	call	QWORD PTR __imp_IsBadReadPtr
	cmp	eax, 1
	jne	SHORT $LN3@AMGetWideS
	mov	r8d, 1051				; 0000041bH
	lea	rdx, OFFSET FLAT:$SG82621
	lea	rcx, OFFSET FLAT:$SG82622
	call	?DbgBreakPoint@@YAXPEB_W0H@Z		; DbgBreakPoint
$LN3@AMGetWideS:
	mov	edx, 8
	mov	rcx, QWORD PTR ppszReturn$[rsp]
	call	QWORD PTR __imp_IsBadWritePtr
	cmp	eax, 1
	jne	SHORT $LN2@AMGetWideS
	mov	r8d, 1051				; 0000041bH
	lea	rdx, OFFSET FLAT:$SG82626
	lea	rcx, OFFSET FLAT:$SG82627
	call	?DbgBreakPoint@@YAXPEB_W0H@Z		; DbgBreakPoint
$LN2@AMGetWideS:
; Line 1052
	mov	rcx, QWORD PTR psz$[rsp]
	call	QWORD PTR __imp_lstrlenW
	inc	eax
	cdqe
	shl	rax, 1
	mov	DWORD PTR nameLen$[rsp], eax
; Line 1053
	mov	eax, DWORD PTR nameLen$[rsp]
	mov	ecx, eax
	call	QWORD PTR __imp_CoTaskMemAlloc
	mov	rcx, QWORD PTR ppszReturn$[rsp]
	mov	QWORD PTR [rcx], rax
; Line 1054
	mov	rax, QWORD PTR ppszReturn$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN1@AMGetWideS
; Line 1055
	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	SHORT $LN5@AMGetWideS
$LN1@AMGetWideS:
; Line 1057
	mov	eax, DWORD PTR nameLen$[rsp]
	mov	r8d, eax
	mov	rdx, QWORD PTR psz$[rsp]
	mov	rax, QWORD PTR ppszReturn$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	memcpy
; Line 1058
	xor	eax, eax
$LN5@AMGetWideS:
; Line 1059
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
AMGetWideString ENDP
_TEXT	ENDS
PUBLIC	?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z ; WaitDispatchingMessages
EXTRN	__imp_PostThreadMessageW:PROC
EXTRN	__imp_RegisterWindowMessageW:PROC
EXTRN	__imp_GetQueueStatus:PROC
EXTRN	__imp_SetThreadPriority:PROC
EXTRN	__imp_GetThreadPriority:PROC
EXTRN	__imp_GetCurrentThread:PROC
EXTRN	__imp_DispatchMessageW:PROC
EXTRN	__imp_WaitForMultipleObjects:PROC
EXTRN	__imp_GetTickCount:PROC
;	COMDAT ?uMsgId@?1??WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z@4IA
_BSS	SEGMENT
?uMsgId@?1??WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z@4IA DD 01H DUP (?) ; `WaitDispatchingMessages'::`2'::uMsgId
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z DD imagerel $LN29
	DD	imagerel $LN29+835
	DD	imagerel $unwind$?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z DD 033201H
	DD	022011bH
	DD	07014H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcName$0 DB 068H ; WaitDispatchingMessages
	DB	04fH
	DB	062H
	DB	06aH
	DB	065H
	DB	063H
	DB	074H
	DB	073H
	DB	00H
	ORG $+3
?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcName$1 DB 06dH ; WaitDispatchingMessages
	DB	073H
	DB	067H
	DB	00H
?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcName$2 DB 06dH ; WaitDispatchingMessages
	DB	073H
	DB	067H
	DB	00H
	ORG $+12
?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcVarDesc DD 0c8H ; WaitDispatchingMessages
	DD	030H
	DQ	FLAT:?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcName$2
	DD	078H
	DD	030H
	DQ	FLAT:?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcName$0
	ORG $+144
?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcFrameData DD 03H ; WaitDispatchingMessages
	DD	00H
	DQ	FLAT:?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z
_TEXT	SEGMENT
bPeeked$ = 48
dwResult$ = 52
dwStart$ = 56
dwThreadPriority$ = 60
hObjects$ = 72
nCount$82651 = 100
dwTimeOut$82654 = 104
msg$82659 = 120
dwNow$82665 = 180
dwDiff$82666 = 184
msg$82679 = 200
tv68 = 260
tv78 = 264
hObject$ = 288
dwWait$ = 296
hwnd$ = 304
uMsg$ = 312
hEvent$ = 320
?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z PROC	; WaitDispatchingMessages, COMDAT
; Line 1072
$LN29:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 272				; 00000110H
	mov	rdi, rsp
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]
; Line 1073
	mov	DWORD PTR bPeeked$[rsp], 0
; Line 1080
	mov	rax, QWORD PTR hObject$[rsp]
	mov	QWORD PTR hObjects$[rsp], rax
	mov	rax, QWORD PTR hEvent$[rsp]
	mov	QWORD PTR hObjects$[rsp+8], rax
; Line 1081
	cmp	DWORD PTR dwWait$[rsp], -1		; ffffffffH
	je	SHORT $LN22@WaitDispat
	cmp	DWORD PTR dwWait$[rsp], 0
	je	SHORT $LN22@WaitDispat
; Line 1082
	call	QWORD PTR __imp_GetTickCount
	mov	DWORD PTR dwStart$[rsp], eax
$LN22@WaitDispat:
$LN21@WaitDispat:
; Line 1085
	cmp	QWORD PTR hEvent$[rsp], 0
	je	SHORT $LN25@WaitDispat
	mov	DWORD PTR tv68[rsp], 2
	jmp	SHORT $LN26@WaitDispat
$LN25@WaitDispat:
	mov	DWORD PTR tv68[rsp], 1
$LN26@WaitDispat:
	mov	eax, DWORD PTR tv68[rsp]
	mov	DWORD PTR nCount$82651[rsp], eax
; Line 1089
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, QWORD PTR hObjects$[rsp]
	mov	ecx, DWORD PTR nCount$82651[rsp]
	call	QWORD PTR __imp_WaitForMultipleObjects
	mov	DWORD PTR dwResult$[rsp], eax
; Line 1090
	mov	eax, DWORD PTR nCount$82651[rsp]
	cmp	DWORD PTR dwResult$[rsp], eax
	jae	SHORT $LN19@WaitDispat
; Line 1091
	jmp	$LN20@WaitDispat
$LN19@WaitDispat:
; Line 1094
	mov	eax, DWORD PTR dwWait$[rsp]
	mov	DWORD PTR dwTimeOut$82654[rsp], eax
; Line 1095
	cmp	DWORD PTR dwTimeOut$82654[rsp], 10
	jbe	SHORT $LN18@WaitDispat
; Line 1096
	mov	DWORD PTR dwTimeOut$82654[rsp], 10
$LN18@WaitDispat:
; Line 1104
	cmp	QWORD PTR hwnd$[rsp], 0
	jne	SHORT $LN27@WaitDispat
	mov	DWORD PTR tv78[rsp], 64			; 00000040H
	jmp	SHORT $LN28@WaitDispat
$LN27@WaitDispat:
	mov	DWORD PTR tv78[rsp], 72			; 00000048H
$LN28@WaitDispat:
	mov	eax, DWORD PTR tv78[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR dwTimeOut$82654[rsp]
	xor	r8d, r8d
	lea	rdx, QWORD PTR hObjects$[rsp]
	mov	ecx, DWORD PTR nCount$82651[rsp]
	call	QWORD PTR __imp_MsgWaitForMultipleObjects
	mov	DWORD PTR dwResult$[rsp], eax
; Line 1106
	mov	eax, DWORD PTR nCount$82651[rsp]
	cmp	DWORD PTR dwResult$[rsp], eax
	je	SHORT $LN16@WaitDispat
	cmp	DWORD PTR dwResult$[rsp], 258		; 00000102H
	jne	$LN17@WaitDispat
	mov	eax, DWORD PTR dwWait$[rsp]
	cmp	DWORD PTR dwTimeOut$82654[rsp], eax
	je	$LN17@WaitDispat
$LN16@WaitDispat:
; Line 1108
	cmp	QWORD PTR hwnd$[rsp], 0
	je	SHORT $LN15@WaitDispat
$LN14@WaitDispat:
; Line 1109
	mov	DWORD PTR [rsp+32], 1
	mov	r9d, DWORD PTR uMsg$[rsp]
	mov	r8d, DWORD PTR uMsg$[rsp]
	mov	rdx, QWORD PTR hwnd$[rsp]
	lea	rcx, QWORD PTR msg$82659[rsp]
	call	QWORD PTR __imp_PeekMessageW
	test	eax, eax
	je	SHORT $LN13@WaitDispat
; Line 1110
	lea	rcx, QWORD PTR msg$82659[rsp]
	call	QWORD PTR __imp_DispatchMessageW
; Line 1111
	jmp	SHORT $LN14@WaitDispat
$LN13@WaitDispat:
$LN15@WaitDispat:
; Line 1115
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR msg$82659[rsp]
	call	QWORD PTR __imp_PeekMessageW
; Line 1117
	cmp	DWORD PTR dwWait$[rsp], -1		; ffffffffH
	je	SHORT $LN12@WaitDispat
	cmp	DWORD PTR dwWait$[rsp], 0
	je	SHORT $LN12@WaitDispat
; Line 1118
	call	QWORD PTR __imp_GetTickCount
	mov	DWORD PTR dwNow$82665[rsp], eax
; Line 1121
	mov	eax, DWORD PTR dwStart$[rsp]
	mov	ecx, DWORD PTR dwNow$82665[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR dwDiff$82666[rsp], eax
; Line 1122
	mov	eax, DWORD PTR dwWait$[rsp]
	cmp	DWORD PTR dwDiff$82666[rsp], eax
	jbe	SHORT $LN11@WaitDispat
; Line 1123
	mov	DWORD PTR dwWait$[rsp], 0
; Line 1124
	jmp	SHORT $LN10@WaitDispat
$LN11@WaitDispat:
; Line 1125
	mov	eax, DWORD PTR dwDiff$82666[rsp]
	mov	ecx, DWORD PTR dwWait$[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR dwWait$[rsp], eax
$LN10@WaitDispat:
; Line 1127
	mov	eax, DWORD PTR dwNow$82665[rsp]
	mov	DWORD PTR dwStart$[rsp], eax
$LN12@WaitDispat:
; Line 1129
	cmp	DWORD PTR bPeeked$[rsp], 0
	jne	SHORT $LN9@WaitDispat
; Line 1132
	call	QWORD PTR __imp_GetCurrentThread
	mov	rcx, rax
	call	QWORD PTR __imp_GetThreadPriority
	mov	DWORD PTR dwThreadPriority$[rsp], eax
; Line 1133
	cmp	DWORD PTR dwThreadPriority$[rsp], 2
	jae	SHORT $LN8@WaitDispat
; Line 1134
	call	QWORD PTR __imp_GetCurrentThread
	mov	edx, 2
	mov	rcx, rax
	call	QWORD PTR __imp_SetThreadPriority
$LN8@WaitDispat:
; Line 1136
	mov	DWORD PTR bPeeked$[rsp], 1
$LN9@WaitDispat:
; Line 1138
	jmp	SHORT $LN7@WaitDispat
$LN17@WaitDispat:
; Line 1139
	jmp	SHORT $LN20@WaitDispat
$LN7@WaitDispat:
; Line 1141
	jmp	$LN21@WaitDispat
$LN20@WaitDispat:
; Line 1142
	cmp	DWORD PTR bPeeked$[rsp], 0
	je	$LN6@WaitDispat
; Line 1143
	call	QWORD PTR __imp_GetCurrentThread
	mov	edx, DWORD PTR dwThreadPriority$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_SetThreadPriority
; Line 1144
	mov	ecx, 8
	call	QWORD PTR __imp_GetQueueStatus
	mov	eax, eax
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	and	eax, 8
	test	eax, eax
	je	SHORT $LN5@WaitDispat
; Line 1145
	cmp	DWORD PTR ?uMsgId@?1??WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z@4IA, 0
	jne	SHORT $LN4@WaitDispat
; Line 1146
	lea	rcx, OFFSET FLAT:$SG82677
	call	QWORD PTR __imp_RegisterWindowMessageW
	mov	DWORD PTR ?uMsgId@?1??WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z@4IA, eax
$LN4@WaitDispat:
; Line 1148
	cmp	DWORD PTR ?uMsgId@?1??WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z@4IA, 0
	je	SHORT $LN3@WaitDispat
$LN2@WaitDispat:
; Line 1151
	mov	DWORD PTR [rsp+32], 1
	mov	r9d, DWORD PTR ?uMsgId@?1??WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z@4IA
	mov	r8d, DWORD PTR ?uMsgId@?1??WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z@4IA
	mov	rdx, -1
	lea	rcx, QWORD PTR msg$82679[rsp]
	call	QWORD PTR __imp_PeekMessageW
	test	eax, eax
	je	SHORT $LN1@WaitDispat
; Line 1152
	jmp	SHORT $LN2@WaitDispat
$LN1@WaitDispat:
$LN3@WaitDispat:
; Line 1154
	call	QWORD PTR __imp_GetCurrentThreadId
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, DWORD PTR ?uMsgId@?1??WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z@4IA
	mov	ecx, eax
	call	QWORD PTR __imp_PostThreadMessageW
$LN5@WaitDispat:
$LN6@WaitDispat:
; Line 1157
	mov	eax, DWORD PTR dwResult$[rsp]
; Line 1158
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
?WaitDispatchingMessages@@YAKPEAXKPEAUHWND__@@I0@Z ENDP	; WaitDispatchingMessages
_TEXT	ENDS
PUBLIC	HRESULT_FROM_WIN32
PUBLIC	?AmGetLastErrorToHResult@@YAJXZ			; AmGetLastErrorToHResult
EXTRN	__imp_GetLastError:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AmGetLastErrorToHResult@@YAJXZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?AmGetLastErrorToHResult@@YAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AmGetLastErrorToHResult@@YAJXZ DD 021501H
	DD	070025206H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?AmGetLastErrorToHResult@@YAJXZ
_TEXT	SEGMENT
dwLastError$ = 32
?AmGetLastErrorToHResult@@YAJXZ PROC			; AmGetLastErrorToHResult, COMDAT
; Line 1161
$LN5:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1162
	call	QWORD PTR __imp_GetLastError
	mov	DWORD PTR dwLastError$[rsp], eax
; Line 1163
	cmp	DWORD PTR dwLastError$[rsp], 0
	je	SHORT $LN2@AmGetLastE
; Line 1165
	mov	ecx, DWORD PTR dwLastError$[rsp]
	call	HRESULT_FROM_WIN32
	jmp	SHORT $LN3@AmGetLastE
; Line 1167
	jmp	SHORT $LN1@AmGetLastE
$LN2@AmGetLastE:
; Line 1169
	mov	eax, -2147467259			; ffffffff80004005H
$LN1@AmGetLastE:
$LN3@AmGetLastE:
; Line 1171
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?AmGetLastErrorToHResult@@YAJXZ ENDP			; AmGetLastErrorToHResult
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
pdata	SEGMENT
$pdata$HRESULT_FROM_WIN32 DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$HRESULT_FROM_WIN32
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$HRESULT_FROM_WIN32 DD 021c01H
	DD	070051209H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = 0
x$ = 32
HRESULT_FROM_WIN32 PROC					; COMDAT
; Line 23841
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+32]
	cmp	DWORD PTR x$[rsp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR x$[rsp]
	mov	DWORD PTR tv68[rsp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	eax, DWORD PTR x$[rsp]
	and	eax, 65535				; 0000ffffH
	or	eax, 458752				; 00070000H
	bts	eax, 31
	mov	DWORD PTR tv68[rsp], eax
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[rsp]
	add	rsp, 16
	pop	rdi
	ret	0
HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
PUBLIC	?QzAtlComPtrAssign@@YAPEAUIUnknown@@PEAPEAU1@PEAU1@@Z ; QzAtlComPtrAssign
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxutil.cpp
pdata	SEGMENT
$pdata$?QzAtlComPtrAssign@@YAPEAUIUnknown@@PEAPEAU1@PEAU1@@Z DD imagerel $LN5
	DD	imagerel $LN5+116
	DD	imagerel $unwind$?QzAtlComPtrAssign@@YAPEAUIUnknown@@PEAPEAU1@PEAU1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QzAtlComPtrAssign@@YAPEAUIUnknown@@PEAPEAU1@PEAU1@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?QzAtlComPtrAssign@@YAPEAUIUnknown@@PEAPEAU1@PEAU1@@Z
_TEXT	SEGMENT
pp$ = 48
lp$ = 56
?QzAtlComPtrAssign@@YAPEAUIUnknown@@PEAPEAU1@PEAU1@@Z PROC ; QzAtlComPtrAssign, COMDAT
; Line 1174
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1175
	cmp	QWORD PTR lp$[rsp], 0
	je	SHORT $LN2@QzAtlComPt
; Line 1176
	mov	rax, QWORD PTR lp$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR lp$[rsp]
	call	QWORD PTR [rax+8]
$LN2@QzAtlComPt:
; Line 1177
	mov	rax, QWORD PTR pp$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN1@QzAtlComPt
; Line 1178
	mov	rax, QWORD PTR pp$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pp$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
$LN1@QzAtlComPt:
; Line 1179
	mov	rax, QWORD PTR pp$[rsp]
	mov	rcx, QWORD PTR lp$[rsp]
	mov	QWORD PTR [rax], rcx
; Line 1180
	mov	rax, QWORD PTR lp$[rsp]
; Line 1181
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?QzAtlComPtrAssign@@YAPEAUIUnknown@@PEAPEAU1@PEAU1@@Z ENDP ; QzAtlComPtrAssign
_TEXT	ENDS
PUBLIC	?TimeKillSynchronousFlagAvailable@@YA_NXZ	; TimeKillSynchronousFlagAvailable
PUBLIC	?CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z	; CompatibleTimeSetEvent
EXTRN	__imp_timeSetEvent:PROC
;	COMDAT ?fTimeKillSynchronousFlagAvailable@?2??CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z@4_NA
_BSS	SEGMENT
?fTimeKillSynchronousFlagAvailable@?2??CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z@4_NA DB 01H DUP (?) ; `CompatibleTimeSetEvent'::`3'::fTimeKillSynchronousFlagAvailable
_BSS	ENDS
;	COMDAT ?fCheckedVersion@?2??CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z@4_NA
_BSS	SEGMENT
?fCheckedVersion@?2??CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z@4_NA DB 01H DUP (?) ; `CompatibleTimeSetEvent'::`3'::fCheckedVersion
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z DD imagerel $LN5
	DD	imagerel $LN5+132
	DD	imagerel $unwind$?CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z DD 022a01H
	DD	070135217H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z
_TEXT	SEGMENT
uDelay$ = 64
uResolution$ = 72
lpTimeProc$ = 80
dwUser$ = 88
fuEvent$ = 96
?CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z PROC	; CompatibleTimeSetEvent, COMDAT
; Line 1201
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+64]
; Line 1207
	movzx	eax, BYTE PTR ?fCheckedVersion@?2??CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z@4_NA
	test	eax, eax
	jne	SHORT $LN2@Compatible
; Line 1208
	call	?TimeKillSynchronousFlagAvailable@@YA_NXZ ; TimeKillSynchronousFlagAvailable
	mov	BYTE PTR ?fTimeKillSynchronousFlagAvailable@?2??CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z@4_NA, al
; Line 1209
	mov	BYTE PTR ?fCheckedVersion@?2??CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z@4_NA, 1
$LN2@Compatible:
; Line 1212
	movzx	eax, BYTE PTR ?fTimeKillSynchronousFlagAvailable@?2??CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z@4_NA
	test	eax, eax
	je	SHORT $LN1@Compatible
; Line 1213
	mov	eax, DWORD PTR fuEvent$[rsp]
	bts	eax, 8
	mov	DWORD PTR fuEvent$[rsp], eax
$LN1@Compatible:
; Line 1218
	mov	eax, DWORD PTR fuEvent$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR dwUser$[rsp]
	mov	r8, QWORD PTR lpTimeProc$[rsp]
	mov	edx, DWORD PTR uResolution$[rsp]
	mov	ecx, DWORD PTR uDelay$[rsp]
	call	QWORD PTR __imp_timeSetEvent
; Line 1219
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CompatibleTimeSetEvent@@YAIIIP6AXII_K00@Z0I@Z ENDP	; CompatibleTimeSetEvent
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__GSHandlerCheck:PROC
EXTRN	__imp_GetVersionExW:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TimeKillSynchronousFlagAvailable@@YA_NXZ DD imagerel $LN6
	DD	imagerel $LN6+138
	DD	imagerel $unwind$?TimeKillSynchronousFlagAvailable@@YA_NXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TimeKillSynchronousFlagAvailable@@YA_NXZ DD 032a19H
	DD	02e0109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	0160H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TimeKillSynchronousFlagAvailable@@YA_NXZ$rtcName$0 DB 06fH ; TimeKillSynchronousFlagAvailable
	DB	073H
	DB	076H
	DB	065H
	DB	072H
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+6
?TimeKillSynchronousFlagAvailable@@YA_NXZ$rtcVarDesc DD 030H ; TimeKillSynchronousFlagAvailable
	DD	0114H
	DQ	FLAT:?TimeKillSynchronousFlagAvailable@@YA_NXZ$rtcName$0
	ORG $+48
?TimeKillSynchronousFlagAvailable@@YA_NXZ$rtcFrameData DD 01H ; TimeKillSynchronousFlagAvailable
	DD	00H
	DQ	FLAT:?TimeKillSynchronousFlagAvailable@@YA_NXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?TimeKillSynchronousFlagAvailable@@YA_NXZ
_TEXT	SEGMENT
osverinfo$ = 48
__$ArrayPad$ = 352
?TimeKillSynchronousFlagAvailable@@YA_NXZ PROC		; TimeKillSynchronousFlagAvailable, COMDAT
; Line 1222
$LN6:
	push	rdi
	sub	rsp, 368				; 00000170H
	mov	rdi, rsp
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1225
	mov	DWORD PTR osverinfo$[rsp], 276		; 00000114H
; Line 1227
	lea	rcx, QWORD PTR osverinfo$[rsp]
	call	QWORD PTR __imp_GetVersionExW
	test	eax, eax
	je	SHORT $LN3@TimeKillSy
; Line 1233
	cmp	DWORD PTR osverinfo$[rsp+4], 5
	ja	SHORT $LN1@TimeKillSy
	cmp	DWORD PTR osverinfo$[rsp+4], 5
	jne	SHORT $LN2@TimeKillSy
	cmp	DWORD PTR osverinfo$[rsp+8], 1
	jb	SHORT $LN2@TimeKillSy
$LN1@TimeKillSy:
; Line 1234
	mov	al, 1
	jmp	SHORT $LN4@TimeKillSy
$LN2@TimeKillSy:
$LN3@TimeKillSy:
; Line 1238
	xor	al, al
$LN4@TimeKillSy:
; Line 1239
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?TimeKillSynchronousFlagAvailable@@YA_NXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 368				; 00000170H
	pop	rdi
	ret	0
?TimeKillSynchronousFlagAvailable@@YA_NXZ ENDP		; TimeKillSynchronousFlagAvailable
_TEXT	ENDS
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\wxlist.h
pdata	SEGMENT
$pdata$?GetHeadPosition@?$CGenericList@VCMsg@@@@QEBAPEAU__POSITION@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?GetHeadPosition@?$CGenericList@VCMsg@@@@QEBAPEAU__POSITION@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetHeadPosition@?$CGenericList@VCMsg@@@@QEBAPEAU__POSITION@@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetHeadPosition@?$CGenericList@VCMsg@@@@QEBAPEAU__POSITION@@XZ
_TEXT	SEGMENT
this$ = 16
?GetHeadPosition@?$CGenericList@VCMsg@@@@QEBAPEAU__POSITION@@XZ PROC ; CGenericList<CMsg>::GetHeadPosition, COMDAT
; Line 508
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	pop	rdi
	ret	0
?GetHeadPosition@?$CGenericList@VCMsg@@@@QEBAPEAU__POSITION@@XZ ENDP ; CGenericList<CMsg>::GetHeadPosition
_TEXT	ENDS
EXTRN	?GetNextI@CBaseList@@IEBAPEAXAEAPEAU__POSITION@@@Z:PROC ; CBaseList::GetNextI
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNext@?$CGenericList@VCMsg@@@@QEBAPEAVCMsg@@AEAPEAU__POSITION@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?GetNext@?$CGenericList@VCMsg@@@@QEBAPEAVCMsg@@AEAPEAU__POSITION@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNext@?$CGenericList@VCMsg@@@@QEBAPEAVCMsg@@AEAPEAU__POSITION@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetNext@?$CGenericList@VCMsg@@@@QEBAPEAVCMsg@@AEAPEAU__POSITION@@@Z
_TEXT	SEGMENT
this$ = 48
rp$ = 56
?GetNext@?$CGenericList@VCMsg@@@@QEBAPEAVCMsg@@AEAPEAU__POSITION@@@Z PROC ; CGenericList<CMsg>::GetNext, COMDAT
; Line 512
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rdx, QWORD PTR rp$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetNextI@CBaseList@@IEBAPEAXAEAPEAU__POSITION@@@Z ; CBaseList::GetNextI
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetNext@?$CGenericList@VCMsg@@@@QEBAPEAVCMsg@@AEAPEAU__POSITION@@@Z ENDP ; CGenericList<CMsg>::GetNext
_TEXT	ENDS
EXTRN	?RemoveHeadI@CBaseList@@IEAAPEAXXZ:PROC		; CBaseList::RemoveHeadI
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveHead@?$CGenericList@VCMsg@@@@QEAAPEAVCMsg@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?RemoveHead@?$CGenericList@VCMsg@@@@QEAAPEAVCMsg@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveHead@?$CGenericList@VCMsg@@@@QEAAPEAVCMsg@@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?RemoveHead@?$CGenericList@VCMsg@@@@QEAAPEAVCMsg@@XZ
_TEXT	SEGMENT
this$ = 48
?RemoveHead@?$CGenericList@VCMsg@@@@QEAAPEAVCMsg@@XZ PROC ; CGenericList<CMsg>::RemoveHead, COMDAT
; Line 517
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	?RemoveHeadI@CBaseList@@IEAAPEAXXZ	; CBaseList::RemoveHeadI
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?RemoveHead@?$CGenericList@VCMsg@@@@QEAAPEAVCMsg@@XZ ENDP ; CGenericList<CMsg>::RemoveHead
_TEXT	ENDS
END

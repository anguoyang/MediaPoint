; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG82238 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82239 DB	'l', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'E', 00H, 'R'
	DB	00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'S', 00H, 'U', 00H
	DB	'C', 00H, 'C', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 't', 00H
	DB	'u', 00H, 'r', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H
	DB	'F', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'N', 00H, 'O'
	DB	00H, 'T', 00H, '_', 00H, 'F', 00H, 'O', 00H, 'U', 00H, 'N', 00H
	DB	'D', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'l', 00H, 'r'
	DB	00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'n', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O'
	DB	00H, 'R', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'V', 00H, 'A', 00H
	DB	'L', 00H, 'I', 00H, 'D', 00H, '_', 00H, 'H', 00H, 'A', 00H, 'N'
	DB	00H, 'D', 00H, 'L', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG82248 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82249 DB	'l', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'E', 00H, 'R'
	DB	00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'S', 00H, 'U', 00H
	DB	'C', 00H, 'C', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 't', 00H
	DB	'u', 00H, 'r', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H
	DB	'N', 00H, 'O', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'R', 00H, 'E'
	DB	00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'M', 00H, 'S', 00H
	DB	00H, 00H
	ORG $+2
$SG82264 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82265 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG82267 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, '\', 00H
	DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG82278 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG82286 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG82292 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG82301 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG82304 DB	'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG82312 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82313 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG82315 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, '\', 00H
	DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG82321 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82322 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG82328 DB	'=', 00H, ' ', 00H, 'A', 00H, 'M', 00H, 'o', 00H, 'v', 00H
	DB	'i', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p'
	DB	00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
$SG82331 DB	'=', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'u', 00H, 'n', 00H
	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG82335 DB	'=', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
$SG82349 DB	'-', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG82352 DB	'I', 00H, 'n', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '3'
	DB	00H, '2', 00H, 00H, 00H
	ORG $+2
$SG82353 DB	'B', 00H, 'o', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG82361 DB	'A', 00H, 'M', 00H, 'o', 00H, 'v', 00H, 'i', 00H, 'e', 00H
	DB	'D', 00H, 'l', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'e', 00H
	DB	'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '2', 00H, '(', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG82364 DB	'-', 00H, ' ', 00H, 'g', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'm', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, ' '
	DB	00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'n', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG82366 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82367 DB	'g', 00H, '_', 00H, 'h', 00H, 'I', 00H, 'n', 00H, 's', 00H
	DB	't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+6
$SG82375 DB	'-', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'O', 00H, 'L'
	DB	00H, 'E', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG82378 DB	'-', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'I', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG82382 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82383 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG82384 DB	'-', 00H, ' ', 00H, 'o', 00H, 'b', 00H, 't', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'I', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'M', 00H, 'a', 00H, 'p', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, '2', 00H, 00H, 00H
$SG82390 DB	'-', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'y', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'I', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'M', 00H, 'a', 00H, 'p', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG82394 DB	'-', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG82402 DB	'-', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG82411 DB	'-', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'O', 00H, 'L'
	DB	00H, 'E', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG82412 DB	'-', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u', 00H
	DB	'r', 00H, 'n', 00H, ' ', 00H, '%', 00H, '0', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+6
$SG82431 DB	'I', 00H, 'n', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '3'
	DB	00H, '2', 00H, 00H, 00H
	ORG $+2
$SG82432 DB	'B', 00H, 'o', 00H, 't', 00H, 'h', 00H, 00H, 00H
CONST	ENDS
;	COMDAT IID_IAMFilterGraphCallback
CONST	SEGMENT
IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	EliminateSubKey
EXTRN	__GSHandlerCheck:PROC
EXTRN	__imp_RegDeleteKeyW:PROC
EXTRN	__imp_RegCloseKey:PROC
EXTRN	__imp_RegEnumKeyExW:PROC
EXTRN	?DbgAssert@@YAXPEB_W0H@Z:PROC			; DbgAssert
EXTRN	__imp_RegOpenKeyExW:PROC
EXTRN	__imp_lstrlenW:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\dllsetup.cpp
pdata	SEGMENT
$pdata$EliminateSubKey DD imagerel $LN11
	DD	imagerel $LN11+424
	DD	imagerel $unwind$EliminateSubKey
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$EliminateSubKey DD 033b19H
	DD	05c0112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	02d0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
EliminateSubKey$rtcName$0 DB 068H
	DB	06bH
	DB	00H
	ORG $+1
EliminateSubKey$rtcName$1 DB 042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
EliminateSubKey$rtcName$2 DB 064H
	DB	077H
	DB	00H
	ORG $+1
EliminateSubKey$rtcName$3 DB 066H
	DB	074H
	DB	00H
	ORG $+5
EliminateSubKey$rtcFrameData DD 04H
	DD	00H
	DQ	FLAT:EliminateSubKey$rtcVarDesc
	ORG $+8
EliminateSubKey$rtcVarDesc DD 02b8H
	DD	08H
	DQ	FLAT:EliminateSubKey$rtcName$3
	DD	0294H
	DD	04H
	DQ	FLAT:EliminateSubKey$rtcName$2
	DD	070H
	DD	0208H
	DQ	FLAT:EliminateSubKey$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:EliminateSubKey$rtcName$0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT EliminateSubKey
_TEXT	SEGMENT
hk$ = 72
lreturn$ = 84
Buffer$82244 = 112
dw$82245 = 660
ft$82246 = 696
__$ArrayPad$ = 720
hkey$ = 752
strSubKey$ = 760
EliminateSubKey PROC					; COMDAT
; Line 40
$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 736				; 000002e0H
	mov	rdi, rsp
	mov	ecx, 184				; 000000b8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+752]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 42
	mov	rcx, QWORD PTR strSubKey$[rsp]
	call	QWORD PTR __imp_lstrlenW
	test	eax, eax
	jne	SHORT $LN8@EliminateS
; Line 44
	mov	eax, -2147467259			; ffffffff80004005H
	jmp	$LN9@EliminateS
$LN8@EliminateS:
; Line 51
	lea	rax, QWORD PTR hk$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 33554432				; 02000000H
	xor	r8d, r8d
	mov	rdx, QWORD PTR strSubKey$[rsp]
	mov	rcx, QWORD PTR hkey$[rsp]
	call	QWORD PTR __imp_RegOpenKeyExW
	mov	DWORD PTR lreturn$[rsp], eax
; Line 55
	cmp	DWORD PTR lreturn$[rsp], 0
	je	SHORT $LN7@EliminateS
	cmp	DWORD PTR lreturn$[rsp], 2
	je	SHORT $LN7@EliminateS
	cmp	DWORD PTR lreturn$[rsp], 6
	je	SHORT $LN7@EliminateS
	mov	r8d, 55					; 00000037H
	lea	rdx, OFFSET FLAT:$SG82238
	lea	rcx, OFFSET FLAT:$SG82239
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN7@EliminateS:
; Line 57
	cmp	DWORD PTR lreturn$[rsp], 0
	jne	$LN6@EliminateS
$LN5@EliminateS:
; Line 65
	mov	DWORD PTR dw$82245[rsp], 260		; 00000104H
; Line 75
	lea	rax, QWORD PTR ft$82246[rsp]
	mov	QWORD PTR [rsp+56], rax
	mov	QWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR dw$82245[rsp]
	lea	r8, QWORD PTR Buffer$82244[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR hk$[rsp]
	call	QWORD PTR __imp_RegEnumKeyExW
	mov	DWORD PTR lreturn$[rsp], eax
; Line 78
	cmp	DWORD PTR lreturn$[rsp], 0
	je	SHORT $LN3@EliminateS
	cmp	DWORD PTR lreturn$[rsp], 259		; 00000103H
	je	SHORT $LN3@EliminateS
	mov	r8d, 78					; 0000004eH
	lea	rdx, OFFSET FLAT:$SG82248
	lea	rcx, OFFSET FLAT:$SG82249
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@EliminateS:
; Line 80
	cmp	DWORD PTR lreturn$[rsp], 0
	jne	SHORT $LN2@EliminateS
; Line 82
	lea	rdx, QWORD PTR Buffer$82244[rsp]
	mov	rcx, QWORD PTR hk$[rsp]
	call	EliminateSubKey
; Line 84
	jmp	SHORT $LN1@EliminateS
$LN2@EliminateS:
; Line 86
	jmp	SHORT $LN4@EliminateS
$LN1@EliminateS:
; Line 88
	jmp	$LN5@EliminateS
$LN4@EliminateS:
; Line 90
	mov	rcx, QWORD PTR hk$[rsp]
	call	QWORD PTR __imp_RegCloseKey
; Line 91
	mov	rdx, QWORD PTR strSubKey$[rsp]
	mov	rcx, QWORD PTR hkey$[rsp]
	call	QWORD PTR __imp_RegDeleteKeyW
$LN6@EliminateS:
; Line 94
	xor	eax, eax
$LN9@EliminateS:
; Line 95
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:EliminateSubKey$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 736				; 000002e0H
	pop	rdi
	ret	0
EliminateSubKey ENDP
_TEXT	ENDS
PUBLIC	HRESULT_FROM_WIN32
PUBLIC	__$ArrayPad$
PUBLIC	AMovieSetupRegisterServer
EXTRN	__imp_RegSetValueExW:PROC
EXTRN	__imp_RegSetValueW:PROC
EXTRN	__imp_RegCreateKeyW:PROC
EXTRN	__imp_wsprintfW:PROC
EXTRN	__imp_StringFromGUID2:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$AMovieSetupRegisterServer DD imagerel $LN8
	DD	imagerel $LN8+753
	DD	imagerel $unwind$AMovieSetupRegisterServer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$AMovieSetupRegisterServer DD 034519H
	DD	064011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	0310H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
AMovieSetupRegisterServer$rtcName$0 DB 061H
	DB	063H
	DB	068H
	DB	054H
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
AMovieSetupRegisterServer$rtcName$1 DB 073H
	DB	07aH
	DB	043H
	DB	04cH
	DB	053H
	DB	049H
	DB	044H
	DB	00H
AMovieSetupRegisterServer$rtcName$2 DB 068H
	DB	06bH
	DB	065H
	DB	079H
	DB	00H
	ORG $+3
AMovieSetupRegisterServer$rtcName$3 DB 068H
	DB	073H
	DB	075H
	DB	062H
	DB	06bH
	DB	065H
	DB	079H
	DB	00H
AMovieSetupRegisterServer$rtcVarDesc DD 02f8H
	DD	08H
	DQ	FLAT:AMovieSetupRegisterServer$rtcName$3
	DD	02d8H
	DD	08H
	DQ	FLAT:AMovieSetupRegisterServer$rtcName$2
	DD	0270H
	DD	04eH
	DQ	FLAT:AMovieSetupRegisterServer$rtcName$1
	DD	040H
	DD	0208H
	DQ	FLAT:AMovieSetupRegisterServer$rtcName$0
	ORG $+192
AMovieSetupRegisterServer$rtcFrameData DD 04H
	DD	00H
	DQ	FLAT:AMovieSetupRegisterServer$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT AMovieSetupRegisterServer
_TEXT	SEGMENT
achTemp$ = 64
szCLSID$ = 624
hr$ = 708
hkey$ = 728
lreturn$ = 740
hsubkey$ = 760
__$ArrayPad$ = 784
clsServer$ = 816
szDescription$ = 824
szFileName$ = 832
szThreadingModel$ = 840
szServerType$ = 848
AMovieSetupRegisterServer PROC				; COMDAT
; Line 115
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 800				; 00000320H
	mov	rdi, rsp
	mov	ecx, 200				; 000000c8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+816]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 126
	mov	r8d, 39					; 00000027H
	lea	rdx, QWORD PTR szCLSID$[rsp]
	mov	rcx, QWORD PTR clsServer$[rsp]
	call	QWORD PTR __imp_StringFromGUID2
	mov	DWORD PTR hr$[rsp], eax
; Line 127
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN5@AMovieSetu
	mov	r8d, 127				; 0000007fH
	lea	rdx, OFFSET FLAT:$SG82264
	lea	rcx, OFFSET FLAT:$SG82265
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN5@AMovieSetu:
; Line 132
	lea	r8, QWORD PTR szCLSID$[rsp]
	lea	rdx, OFFSET FLAT:$SG82267
	lea	rcx, QWORD PTR achTemp$[rsp]
	call	QWORD PTR __imp_wsprintfW
; Line 135
	lea	r8, QWORD PTR hkey$[rsp]
	lea	rdx, QWORD PTR achTemp$[rsp]
	mov	rcx, -2147483648			; ffffffff80000000H
	call	QWORD PTR __imp_RegCreateKeyW
	mov	DWORD PTR lreturn$[rsp], eax
; Line 136
	cmp	DWORD PTR lreturn$[rsp], 0
	je	SHORT $LN4@AMovieSetu
; Line 138
	mov	eax, DWORD PTR lreturn$[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@AMovieSetu
$LN4@AMovieSetu:
; Line 144
	mov	r8, QWORD PTR szDescription$[rsp]
	lea	rdx, OFFSET FLAT:$SG82278
	lea	rcx, QWORD PTR achTemp$[rsp]
	call	QWORD PTR __imp_wsprintfW
; Line 149
	mov	DWORD PTR [rsp+32], 520			; 00000208H
	lea	r9, QWORD PTR achTemp$[rsp]
	mov	r8d, 1
	xor	edx, edx
	mov	rcx, QWORD PTR hkey$[rsp]
	call	QWORD PTR __imp_RegSetValueW
	mov	DWORD PTR lreturn$[rsp], eax
; Line 150
	cmp	DWORD PTR lreturn$[rsp], 0
	je	SHORT $LN3@AMovieSetu
; Line 152
	mov	rcx, QWORD PTR hkey$[rsp]
	call	QWORD PTR __imp_RegCloseKey
; Line 153
	mov	eax, DWORD PTR lreturn$[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@AMovieSetu
$LN3@AMovieSetu:
; Line 162
	mov	r8, QWORD PTR szServerType$[rsp]
	lea	rdx, OFFSET FLAT:$SG82286
	lea	rcx, QWORD PTR achTemp$[rsp]
	call	QWORD PTR __imp_wsprintfW
; Line 165
	lea	r8, QWORD PTR hsubkey$[rsp]
	lea	rdx, QWORD PTR achTemp$[rsp]
	mov	rcx, QWORD PTR hkey$[rsp]
	call	QWORD PTR __imp_RegCreateKeyW
	mov	DWORD PTR lreturn$[rsp], eax
; Line 166
	cmp	DWORD PTR lreturn$[rsp], 0
	je	SHORT $LN2@AMovieSetu
; Line 168
	mov	rcx, QWORD PTR hkey$[rsp]
	call	QWORD PTR __imp_RegCloseKey
; Line 169
	mov	eax, DWORD PTR lreturn$[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@AMovieSetu
$LN2@AMovieSetu:
; Line 174
	mov	r8, QWORD PTR szFileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG82292
	lea	rcx, QWORD PTR achTemp$[rsp]
	call	QWORD PTR __imp_wsprintfW
; Line 179
	lea	rcx, QWORD PTR achTemp$[rsp]
	call	QWORD PTR __imp_lstrlenW
	inc	eax
	cdqe
	shl	rax, 1
	mov	DWORD PTR [rsp+32], eax
	lea	r9, QWORD PTR achTemp$[rsp]
	mov	r8d, 1
	xor	edx, edx
	mov	rcx, QWORD PTR hsubkey$[rsp]
	call	QWORD PTR __imp_RegSetValueW
	mov	DWORD PTR lreturn$[rsp], eax
; Line 180
	cmp	DWORD PTR lreturn$[rsp], 0
	je	SHORT $LN1@AMovieSetu
; Line 182
	mov	rcx, QWORD PTR hkey$[rsp]
	call	QWORD PTR __imp_RegCloseKey
; Line 183
	mov	rcx, QWORD PTR hsubkey$[rsp]
	call	QWORD PTR __imp_RegCloseKey
; Line 184
	mov	eax, DWORD PTR lreturn$[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@AMovieSetu
$LN1@AMovieSetu:
; Line 187
	mov	r8, QWORD PTR szThreadingModel$[rsp]
	lea	rdx, OFFSET FLAT:$SG82301
	lea	rcx, QWORD PTR achTemp$[rsp]
	call	QWORD PTR __imp_wsprintfW
; Line 193
	lea	rcx, QWORD PTR achTemp$[rsp]
	call	QWORD PTR __imp_lstrlenW
	inc	eax
	cdqe
	shl	rax, 1
	mov	DWORD PTR [rsp+40], eax
	lea	rax, QWORD PTR achTemp$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 1
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG82304
	mov	rcx, QWORD PTR hsubkey$[rsp]
	call	QWORD PTR __imp_RegSetValueExW
	mov	DWORD PTR lreturn$[rsp], eax
; Line 197
	mov	rcx, QWORD PTR hkey$[rsp]
	call	QWORD PTR __imp_RegCloseKey
; Line 198
	mov	rcx, QWORD PTR hsubkey$[rsp]
	call	QWORD PTR __imp_RegCloseKey
; Line 202
	mov	ecx, DWORD PTR lreturn$[rsp]
	call	HRESULT_FROM_WIN32
$LN6@AMovieSetu:
; Line 204
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:AMovieSetupRegisterServer$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 800				; 00000320H
	pop	rdi
	ret	0
AMovieSetupRegisterServer ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
pdata	SEGMENT
$pdata$HRESULT_FROM_WIN32 DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$HRESULT_FROM_WIN32
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$HRESULT_FROM_WIN32 DD 021c01H
	DD	070051209H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = 0
x$ = 32
HRESULT_FROM_WIN32 PROC					; COMDAT
; Line 23841
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+32]
	cmp	DWORD PTR x$[rsp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR x$[rsp]
	mov	DWORD PTR tv68[rsp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	eax, DWORD PTR x$[rsp]
	and	eax, 65535				; 0000ffffH
	or	eax, 458752				; 00070000H
	bts	eax, 31
	mov	DWORD PTR tv68[rsp], eax
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[rsp]
	add	rsp, 16
	pop	rdi
	ret	0
HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	AMovieSetupUnregisterServer
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\dllsetup.cpp
pdata	SEGMENT
$pdata$AMovieSetupUnregisterServer DD imagerel $LN5
	DD	imagerel $LN5+255
	DD	imagerel $unwind$AMovieSetupUnregisterServer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$AMovieSetupUnregisterServer DD 033619H
	DD	05a010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	02c0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
AMovieSetupUnregisterServer$rtcName$0 DB 073H
	DB	07aH
	DB	043H
	DB	04cH
	DB	053H
	DB	049H
	DB	044H
	DB	00H
AMovieSetupUnregisterServer$rtcName$1 DB 061H
	DB	063H
	DB	068H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+14
AMovieSetupUnregisterServer$rtcVarDesc DD 0a0H
	DD	0208H
	DQ	FLAT:AMovieSetupUnregisterServer$rtcName$1
	DD	030H
	DD	04eH
	DQ	FLAT:AMovieSetupUnregisterServer$rtcName$0
	ORG $+96
AMovieSetupUnregisterServer$rtcFrameData DD 02H
	DD	00H
	DQ	FLAT:AMovieSetupUnregisterServer$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT AMovieSetupUnregisterServer
_TEXT	SEGMENT
szCLSID$ = 48
hr$ = 132
achBuffer$ = 160
__$ArrayPad$ = 704
clsServer$ = 736
AMovieSetupUnregisterServer PROC			; COMDAT
; Line 219
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 720				; 000002d0H
	mov	rdi, rsp
	mov	ecx, 180				; 000000b4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+736]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 226
	mov	r8d, 39					; 00000027H
	lea	rdx, QWORD PTR szCLSID$[rsp]
	mov	rcx, QWORD PTR clsServer$[rsp]
	call	QWORD PTR __imp_StringFromGUID2
	mov	DWORD PTR hr$[rsp], eax
; Line 227
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN2@AMovieSetu@2
	mov	r8d, 227				; 000000e3H
	lea	rdx, OFFSET FLAT:$SG82312
	lea	rcx, OFFSET FLAT:$SG82313
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@AMovieSetu@2:
; Line 230
	lea	r8, QWORD PTR szCLSID$[rsp]
	lea	rdx, OFFSET FLAT:$SG82315
	lea	rcx, QWORD PTR achBuffer$[rsp]
	call	QWORD PTR __imp_wsprintfW
; Line 235
	lea	rdx, QWORD PTR achBuffer$[rsp]
	mov	rcx, -2147483648			; ffffffff80000000H
	call	EliminateSubKey
	mov	DWORD PTR hr$[rsp], eax
; Line 236
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@AMovieSetu@2
	mov	r8d, 236				; 000000ecH
	lea	rdx, OFFSET FLAT:$SG82321
	lea	rcx, OFFSET FLAT:$SG82322
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@AMovieSetu@2:
; Line 240
	xor	eax, eax
; Line 241
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:AMovieSetupUnregisterServer$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 720				; 000002d0H
	pop	rdi
	ret	0
AMovieSetupUnregisterServer ENDP
_TEXT	ENDS
PUBLIC	AMovieSetupRegisterFilter2
EXTRN	?DbgLogInfo@@YAXKKPEB_WZZ:PROC			; DbgLogInfo
;	COMDAT pdata
pdata	SEGMENT
$pdata$AMovieSetupRegisterFilter2 DD imagerel $LN7
	DD	imagerel $LN7+374
	DD	imagerel $unwind$AMovieSetupRegisterFilter2
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$AMovieSetupRegisterFilter2 DD 022e01H
	DD	07010f217H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
AMovieSetupRegisterFilter2$rtcName$0 DB 072H
	DB	066H
	DB	032H
	DB	00H
	ORG $+12
AMovieSetupRegisterFilter2$rtcVarDesc DD 058H
	DD	018H
	DQ	FLAT:AMovieSetupRegisterFilter2$rtcName$0
	ORG $+48
AMovieSetupRegisterFilter2$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:AMovieSetupRegisterFilter2$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT AMovieSetupRegisterFilter2
_TEXT	SEGMENT
hr$ = 64
rf2$82334 = 88
psetupdata$ = 144
pIFM2$ = 152
bRegister$ = 160
AMovieSetupRegisterFilter2 PROC				; COMDAT
; Line 254
$LN7:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rdi, rsp
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
; Line 255
	lea	r8, OFFSET FLAT:$SG82328
	mov	edx, 3
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 259
	cmp	QWORD PTR psetupdata$[rsp], 0
	jne	SHORT $LN4@AMovieSetu@3
	mov	eax, 1
	jmp	$LN5@AMovieSetu@3
$LN4@AMovieSetu@3:
; Line 266
	lea	r8, OFFSET FLAT:$SG82331
	mov	edx, 3
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 270
	mov	rax, QWORD PTR pIFM2$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR psetupdata$[rsp]
	mov	r9, QWORD PTR [rcx]
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR pIFM2$[rsp]
	call	QWORD PTR [rax+32]
	mov	DWORD PTR hr$[rsp], eax
; Line 273
	cmp	DWORD PTR bRegister$[rsp], 0
	je	$LN3@AMovieSetu@3
; Line 276
	mov	DWORD PTR rf2$82334[rsp], 1
; Line 277
	mov	rax, QWORD PTR psetupdata$[rsp]
	mov	eax, DWORD PTR [rax+16]
	mov	DWORD PTR rf2$82334[rsp+4], eax
; Line 278
	mov	rax, QWORD PTR psetupdata$[rsp]
	mov	eax, DWORD PTR [rax+20]
	mov	DWORD PTR rf2$82334[rsp+8], eax
; Line 279
	mov	rax, QWORD PTR psetupdata$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR rf2$82334[rsp+16], rax
; Line 283
	lea	r8, OFFSET FLAT:$SG82335
	mov	edx, 3
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 289
	mov	rax, QWORD PTR pIFM2$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rcx, QWORD PTR rf2$82334[rsp]
	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	rcx, QWORD PTR psetupdata$[rsp]
	mov	r8, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR psetupdata$[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, QWORD PTR pIFM2$[rsp]
	call	QWORD PTR [rax+40]
	mov	DWORD PTR hr$[rsp], eax
$LN3@AMovieSetu@3:
; Line 297
	cmp	DWORD PTR hr$[rsp], -2147024894		; 80070002H
	jne	SHORT $LN2@AMovieSetu@3
; Line 298
	xor	eax, eax
	jmp	SHORT $LN5@AMovieSetu@3
; Line 299
	jmp	SHORT $LN1@AMovieSetu@3
$LN2@AMovieSetu@3:
; Line 300
	mov	eax, DWORD PTR hr$[rsp]
$LN1@AMovieSetu@3:
$LN5@AMovieSetu@3:
; Line 301
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:AMovieSetupRegisterFilter2$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
AMovieSetupRegisterFilter2 ENDP
_TEXT	ENDS
PUBLIC	$T83011
PUBLIC	$T83010
PUBLIC	RegisterAllServers
EXTRN	?g_Templates@@3PAVCFactoryTemplate@@A:BYTE	; g_Templates
EXTRN	?g_cTemplates@@3HA:DWORD			; g_cTemplates
;	COMDAT pdata
pdata	SEGMENT
$pdata$RegisterAllServers DD imagerel $LN9
	DD	imagerel $LN9+293
	DD	imagerel $unwind$RegisterAllServers
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$RegisterAllServers DD 032601H
	DD	0700bc20fH
	DD	0600aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT RegisterAllServers
_TEXT	SEGMENT
hr$ = 48
i$82343 = 52
pT$82347 = 56
$T83010 = 64
$T83011 = 80
szFileName$ = 128
bRegister$ = 136
RegisterAllServers PROC					; COMDAT
; Line 312
$LN9:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rdi, rsp
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
; Line 313
	mov	DWORD PTR hr$[rsp], 0
; Line 315
	mov	DWORD PTR i$82343[rsp], 0
	jmp	SHORT $LN6@RegisterAl
$LN5@RegisterAl:
	mov	eax, DWORD PTR i$82343[rsp]
	inc	eax
	mov	DWORD PTR i$82343[rsp], eax
$LN6@RegisterAl:
	mov	eax, DWORD PTR ?g_cTemplates@@3HA	; g_cTemplates
	cmp	DWORD PTR i$82343[rsp], eax
	jge	$LN4@RegisterAl
; Line 319
	movsxd	rax, DWORD PTR i$82343[rsp]
	imul	rax, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR pT$82347[rsp], rax
; Line 322
	mov	rax, QWORD PTR pT$82347[rsp]
	mov	r9, QWORD PTR [rax]
	lea	r8, OFFSET FLAT:$SG82349
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 326
	cmp	DWORD PTR bRegister$[rsp], 0
	je	SHORT $LN3@RegisterAl
; Line 330
	mov	rax, QWORD PTR pT$82347[rsp]
	mov	rax, QWORD PTR [rax+8]
	lea	rcx, QWORD PTR $T83010[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rax, OFFSET FLAT:$SG82352
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG82353
	mov	r8, QWORD PTR szFileName$[rsp]
	mov	rax, QWORD PTR pT$82347[rsp]
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR $T83010[rsp]
	call	AMovieSetupRegisterServer
	mov	DWORD PTR hr$[rsp], eax
; Line 332
	jmp	SHORT $LN2@RegisterAl
$LN3@RegisterAl:
; Line 334
	mov	rax, QWORD PTR pT$82347[rsp]
	mov	rax, QWORD PTR [rax+8]
	lea	rcx, QWORD PTR $T83011[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rcx, QWORD PTR $T83011[rsp]
	call	AMovieSetupUnregisterServer
	mov	DWORD PTR hr$[rsp], eax
$LN2@RegisterAl:
; Line 340
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@RegisterAl
; Line 341
	jmp	SHORT $LN4@RegisterAl
$LN1@RegisterAl:
; Line 342
	jmp	$LN5@RegisterAl
$LN4@RegisterAl:
; Line 344
	mov	eax, DWORD PTR hr$[rsp]
; Line 345
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
RegisterAllServers ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	AMovieDllRegisterServer2
EXTRN	__imp_CoUninitialize:PROC
EXTRN	__imp_CoFreeUnusedLibraries:PROC
EXTRN	AMovieSetupRegisterFilter:PROC
EXTRN	CLSID_FilterMapper:BYTE
EXTRN	IID_IFilterMapper:BYTE
EXTRN	__imp_CoCreateInstance:PROC
EXTRN	CLSID_FilterMapper2:BYTE
EXTRN	IID_IFilterMapper2:BYTE
EXTRN	__imp_CoInitialize:PROC
EXTRN	__imp_MultiByteToWideChar:PROC
EXTRN	__imp_lstrlenA:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_GetModuleFileNameA:PROC
EXTRN	?g_hInst@@3PEAUHINSTANCE__@@EA:QWORD		; g_hInst
;	COMDAT pdata
pdata	SEGMENT
$pdata$AMovieDllRegisterServer2 DD imagerel $LN20
	DD	imagerel $LN20+1012
	DD	imagerel $unwind$AMovieDllRegisterServer2
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$AMovieDllRegisterServer2 DD 033419H
	DD	07e010cH
	DD	07005H
	DD	imagerel __GSHandlerCheck
	DD	03e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
AMovieDllRegisterServer2$rtcName$0 DB 061H
	DB	063H
	DB	068H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	04eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+4
AMovieDllRegisterServer2$rtcName$1 DB 061H
	DB	063H
	DB	068H
	DB	054H
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
AMovieDllRegisterServer2$rtcName$2 DB 070H
	DB	049H
	DB	046H
	DB	04dH
	DB	032H
	DB	00H
	ORG $+2
AMovieDllRegisterServer2$rtcName$3 DB 070H
	DB	049H
	DB	046H
	DB	04dH
	DB	00H
	ORG $+3
AMovieDllRegisterServer2$rtcFrameData DD 04H
	DD	00H
	DQ	FLAT:AMovieDllRegisterServer2$rtcVarDesc
	ORG $+8
AMovieDllRegisterServer2$rtcVarDesc DD 03c8H
	DD	08H
	DQ	FLAT:AMovieDllRegisterServer2$rtcName$3
	DD	03a8H
	DD	08H
	DQ	FLAT:AMovieDllRegisterServer2$rtcName$2
	DD	0280H
	DD	0104H
	DQ	FLAT:AMovieDllRegisterServer2$rtcName$1
	DD	050H
	DD	0208H
	DQ	FLAT:AMovieDllRegisterServer2$rtcName$0
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT AMovieDllRegisterServer2
_TEXT	SEGMENT
hr$ = 48
achFileName$ = 80
achTemp$82363 = 640
dwerr$82369 = 916
pIFM2$82385 = 936
pIFM$82386 = 968
i$82395 = 980
pT$82399 = 984
__$ArrayPad$ = 1000
bRegister$ = 1024
AMovieDllRegisterServer2 PROC				; COMDAT
; Line 368
$LN20:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 1008				; 000003f0H
	mov	rdi, rsp
	mov	ecx, 252				; 000000fcH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+1024]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 369
	mov	DWORD PTR hr$[rsp], 0
; Line 371
	lea	r8, OFFSET FLAT:$SG82361
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 383
	lea	r8, OFFSET FLAT:$SG82364
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 387
	cmp	QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA, 0 ; g_hInst
	jne	SHORT $LN17@AMovieDllR
	mov	r8d, 387				; 00000183H
	lea	rdx, OFFSET FLAT:$SG82366
	lea	rcx, OFFSET FLAT:$SG82367
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN17@AMovieDllR:
; Line 391
	mov	r8d, 260				; 00000104H
	lea	rdx, QWORD PTR achTemp$82363[rsp]
	mov	rcx, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	call	QWORD PTR __imp_GetModuleFileNameA
	test	eax, eax
	jne	SHORT $LN16@AMovieDllR
; Line 394
	call	QWORD PTR __imp_GetLastError
	mov	DWORD PTR dwerr$82369[rsp], eax
; Line 395
	mov	eax, DWORD PTR dwerr$82369[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN18@AMovieDllR
$LN16@AMovieDllR:
; Line 403
	lea	rcx, QWORD PTR achTemp$82363[rsp]
	call	QWORD PTR __imp_lstrlenA
	inc	eax
	mov	DWORD PTR [rsp+40], 260			; 00000104H
	lea	rcx, QWORD PTR achFileName$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9d, eax
	lea	r8, QWORD PTR achTemp$82363[rsp]
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_MultiByteToWideChar
; Line 409
	cmp	DWORD PTR bRegister$[rsp], 0
	je	SHORT $LN15@AMovieDllR
; Line 411
	lea	r8, OFFSET FLAT:$SG82375
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 412
	mov	edx, 1
	lea	rcx, QWORD PTR achFileName$[rsp]
	call	RegisterAllServers
	mov	DWORD PTR hr$[rsp], eax
$LN15@AMovieDllR:
; Line 419
	cmp	DWORD PTR hr$[rsp], 0
	jl	$LN14@AMovieDllR
; Line 424
	lea	r8, OFFSET FLAT:$SG82378
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 425
	xor	ecx, ecx
	call	QWORD PTR __imp_CoInitialize
	mov	DWORD PTR hr$[rsp], eax
; Line 426
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN13@AMovieDllR
	mov	r8d, 426				; 000001aaH
	lea	rdx, OFFSET FLAT:$SG82382
	lea	rcx, OFFSET FLAT:$SG82383
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN13@AMovieDllR:
; Line 430
	lea	r8, OFFSET FLAT:$SG82384
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 431
	mov	QWORD PTR pIFM2$82385[rsp], 0
; Line 432
	mov	QWORD PTR pIFM$82386[rsp], 0
; Line 437
	lea	rax, QWORD PTR pIFM2$82385[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:IID_IFilterMapper2
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, OFFSET FLAT:CLSID_FilterMapper2
	call	QWORD PTR __imp_CoCreateInstance
	mov	DWORD PTR hr$[rsp], eax
; Line 438
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN12@AMovieDllR
; Line 440
	lea	r8, OFFSET FLAT:$SG82390
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 447
	lea	rax, QWORD PTR pIFM$82386[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:IID_IFilterMapper
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, OFFSET FLAT:CLSID_FilterMapper
	call	QWORD PTR __imp_CoCreateInstance
	mov	DWORD PTR hr$[rsp], eax
$LN12@AMovieDllR:
; Line 449
	cmp	DWORD PTR hr$[rsp], 0
	jl	$LN11@AMovieDllR
; Line 454
	lea	r8, OFFSET FLAT:$SG82394
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 455
	mov	DWORD PTR i$82395[rsp], 0
	jmp	SHORT $LN10@AMovieDllR
$LN9@AMovieDllR:
	mov	eax, DWORD PTR i$82395[rsp]
	inc	eax
	mov	DWORD PTR i$82395[rsp], eax
$LN10@AMovieDllR:
	mov	eax, DWORD PTR ?g_cTemplates@@3HA	; g_cTemplates
	cmp	DWORD PTR i$82395[rsp], eax
	jge	$LN8@AMovieDllR
; Line 459
	movsxd	rax, DWORD PTR i$82395[rsp]
	imul	rax, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR pT$82399[rsp], rax
; Line 461
	mov	rax, QWORD PTR pT$82399[rsp]
	cmp	QWORD PTR [rax+32], 0
	je	SHORT $LN7@AMovieDllR
; Line 463
	mov	rax, QWORD PTR pT$82399[rsp]
	mov	r9, QWORD PTR [rax]
	lea	r8, OFFSET FLAT:$SG82402
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 465
	cmp	QWORD PTR pIFM2$82385[rsp], 0
	je	SHORT $LN6@AMovieDllR
; Line 467
	mov	r8d, DWORD PTR bRegister$[rsp]
	mov	rdx, QWORD PTR pIFM2$82385[rsp]
	mov	rax, QWORD PTR pT$82399[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	AMovieSetupRegisterFilter2
	mov	DWORD PTR hr$[rsp], eax
; Line 469
	jmp	SHORT $LN5@AMovieDllR
$LN6@AMovieDllR:
; Line 471
	mov	r8d, DWORD PTR bRegister$[rsp]
	mov	rdx, QWORD PTR pIFM$82386[rsp]
	mov	rax, QWORD PTR pT$82399[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	AMovieSetupRegisterFilter
	mov	DWORD PTR hr$[rsp], eax
$LN5@AMovieDllR:
$LN7@AMovieDllR:
; Line 478
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN4@AMovieDllR
; Line 479
	jmp	SHORT $LN8@AMovieDllR
$LN4@AMovieDllR:
; Line 480
	jmp	$LN9@AMovieDllR
$LN8@AMovieDllR:
; Line 484
	cmp	QWORD PTR pIFM2$82385[rsp], 0
	je	SHORT $LN3@AMovieDllR
; Line 485
	mov	rax, QWORD PTR pIFM2$82385[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pIFM2$82385[rsp]
	call	QWORD PTR [rax+16]
; Line 486
	jmp	SHORT $LN2@AMovieDllR
$LN3@AMovieDllR:
; Line 487
	mov	rax, QWORD PTR pIFM$82386[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pIFM$82386[rsp]
	call	QWORD PTR [rax+16]
$LN2@AMovieDllR:
$LN11@AMovieDllR:
; Line 493
	call	QWORD PTR __imp_CoFreeUnusedLibraries
; Line 494
	call	QWORD PTR __imp_CoUninitialize
$LN14@AMovieDllR:
; Line 500
	cmp	DWORD PTR hr$[rsp], 0
	jl	SHORT $LN1@AMovieDllR
	cmp	DWORD PTR bRegister$[rsp], 0
	jne	SHORT $LN1@AMovieDllR
; Line 502
	lea	r8, OFFSET FLAT:$SG82411
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 503
	xor	edx, edx
	lea	rcx, QWORD PTR achFileName$[rsp]
	call	RegisterAllServers
	mov	DWORD PTR hr$[rsp], eax
$LN1@AMovieDllR:
; Line 506
	mov	r9d, DWORD PTR hr$[rsp]
	lea	r8, OFFSET FLAT:$SG82412
	mov	edx, 2
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 507
	mov	eax, DWORD PTR hr$[rsp]
$LN18@AMovieDllR:
; Line 508
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:AMovieDllRegisterServer2$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1008				; 000003f0H
	pop	rdi
	ret	0
AMovieDllRegisterServer2 ENDP
_TEXT	ENDS
PUBLIC	$T83035
PUBLIC	__$ArrayPad$
PUBLIC	AMovieDllRegisterServer
EXTRN	IID_IAMovieSetup:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$AMovieDllRegisterServer DD imagerel $LN14
	DD	imagerel $LN14+596
	DD	imagerel $unwind$AMovieDllRegisterServer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$AMovieDllRegisterServer DD 042b19H
	DD	07f010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	03e0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
AMovieDllRegisterServer$rtcName$0 DB 061H
	DB	063H
	DB	068H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	04eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+4
AMovieDllRegisterServer$rtcName$1 DB 061H
	DB	063H
	DB	068H
	DB	054H
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
AMovieDllRegisterServer$rtcName$2 DB 070H
	DB	073H
	DB	065H
	DB	074H
	DB	075H
	DB	070H
	DB	00H
	ORG $+1
AMovieDllRegisterServer$rtcVarDesc DD 03b8H
	DD	08H
	DQ	FLAT:AMovieDllRegisterServer$rtcName$2
	DD	0280H
	DD	0104H
	DQ	FLAT:AMovieDllRegisterServer$rtcName$1
	DD	050H
	DD	0208H
	DQ	FLAT:AMovieDllRegisterServer$rtcName$0
	ORG $+144
AMovieDllRegisterServer$rtcFrameData DD 03H
	DD	00H
	DQ	FLAT:AMovieDllRegisterServer$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT AMovieDllRegisterServer
_TEXT	SEGMENT
hr$ = 48
achFileName$ = 80
achTemp$82418 = 640
dwerr$82420 = 916
i$82425 = 920
pT$82429 = 928
psetup$82435 = 952
$T83035 = 976
__$ArrayPad$ = 992
AMovieDllRegisterServer PROC				; COMDAT
; Line 532
$LN14:
	push	rsi
	push	rdi
	sub	rsp, 1016				; 000003f8H
	mov	rdi, rsp
	mov	ecx, 254				; 000000feH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 533
	mov	DWORD PTR hr$[rsp], 0
; Line 547
	mov	r8d, 260				; 00000104H
	lea	rdx, QWORD PTR achTemp$82418[rsp]
	mov	rcx, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	call	QWORD PTR __imp_GetModuleFileNameA
	test	eax, eax
	jne	SHORT $LN11@AMovieDllR@2
; Line 550
	call	QWORD PTR __imp_GetLastError
	mov	DWORD PTR dwerr$82420[rsp], eax
; Line 551
	mov	eax, DWORD PTR dwerr$82420[rsp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN12@AMovieDllR@2
$LN11@AMovieDllR@2:
; Line 559
	lea	rcx, QWORD PTR achTemp$82418[rsp]
	call	QWORD PTR __imp_lstrlenA
	inc	eax
	mov	DWORD PTR [rsp+40], 260			; 00000104H
	lea	rcx, QWORD PTR achFileName$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9d, eax
	lea	r8, QWORD PTR achTemp$82418[rsp]
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_MultiByteToWideChar
; Line 565
	mov	DWORD PTR i$82425[rsp], 0
	jmp	SHORT $LN10@AMovieDllR@2
$LN9@AMovieDllR@2:
	mov	eax, DWORD PTR i$82425[rsp]
	inc	eax
	mov	DWORD PTR i$82425[rsp], eax
$LN10@AMovieDllR@2:
	mov	eax, DWORD PTR ?g_cTemplates@@3HA	; g_cTemplates
	cmp	DWORD PTR i$82425[rsp], eax
	jge	$LN8@AMovieDllR@2
; Line 569
	movsxd	rax, DWORD PTR i$82425[rsp]
	imul	rax, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR pT$82429[rsp], rax
; Line 575
	mov	rax, QWORD PTR pT$82429[rsp]
	mov	rax, QWORD PTR [rax+8]
	lea	rcx, QWORD PTR $T83035[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rax, OFFSET FLAT:$SG82431
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG82432
	lea	r8, QWORD PTR achFileName$[rsp]
	mov	rax, QWORD PTR pT$82429[rsp]
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR $T83035[rsp]
	call	AMovieSetupRegisterServer
	mov	DWORD PTR hr$[rsp], eax
; Line 581
	cmp	DWORD PTR hr$[rsp], 0
	jl	$LN7@AMovieDllR@2
	mov	rax, QWORD PTR pT$82429[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	$LN7@AMovieDllR@2
; Line 590
	lea	rax, QWORD PTR psetup$82435[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:IID_IAMovieSetup
	mov	r8d, 1
	xor	edx, edx
	mov	rax, QWORD PTR pT$82429[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_CoCreateInstance
	mov	DWORD PTR hr$[rsp], eax
; Line 591
	cmp	DWORD PTR hr$[rsp], 0
	jl	SHORT $LN6@AMovieDllR@2
; Line 593
	mov	rax, QWORD PTR psetup$82435[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR psetup$82435[rsp]
	call	QWORD PTR [rax+32]
	mov	DWORD PTR hr$[rsp], eax
; Line 594
	cmp	DWORD PTR hr$[rsp], 0
	jl	SHORT $LN5@AMovieDllR@2
; Line 595
	mov	rax, QWORD PTR psetup$82435[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR psetup$82435[rsp]
	call	QWORD PTR [rax+24]
	mov	DWORD PTR hr$[rsp], eax
$LN5@AMovieDllR@2:
; Line 596
	mov	rax, QWORD PTR psetup$82435[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR psetup$82435[rsp]
	call	QWORD PTR [rax+16]
; Line 598
	jmp	SHORT $LN4@AMovieDllR@2
$LN6@AMovieDllR@2:
; Line 601
	cmp	DWORD PTR hr$[rsp], -2147467262		; ffffffff80004002H
	je	SHORT $LN2@AMovieDllR@2
	cmp	DWORD PTR hr$[rsp], -2147220990		; ffffffff80040202H
	jne	SHORT $LN3@AMovieDllR@2
$LN2@AMovieDllR@2:
; Line 602
	mov	DWORD PTR hr$[rsp], 0
$LN3@AMovieDllR@2:
$LN4@AMovieDllR@2:
$LN7@AMovieDllR@2:
; Line 609
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@AMovieDllR@2
; Line 610
	jmp	SHORT $LN8@AMovieDllR@2
$LN1@AMovieDllR@2:
; Line 612
	jmp	$LN9@AMovieDllR@2
$LN8@AMovieDllR@2:
; Line 614
	mov	eax, DWORD PTR hr$[rsp]
$LN12@AMovieDllR@2:
; Line 615
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:AMovieDllRegisterServer$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1016				; 000003f8H
	pop	rdi
	pop	rsi
	ret	0
AMovieDllRegisterServer ENDP
_TEXT	ENDS
PUBLIC	$T83049
PUBLIC	AMovieDllUnregisterServer
;	COMDAT pdata
pdata	SEGMENT
$pdata$AMovieDllUnregisterServer DD imagerel $LN12
	DD	imagerel $LN12+323
	DD	imagerel $unwind$AMovieDllUnregisterServer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$AMovieDllUnregisterServer DD 041901H
	DD	011010aH
	DD	060027003H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
AMovieDllUnregisterServer$rtcName$0 DB 070H
	DB	073H
	DB	065H
	DB	074H
	DB	075H
	DB	070H
	DB	00H
	ORG $+9
AMovieDllUnregisterServer$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:AMovieDllUnregisterServer$rtcName$0
	ORG $+48
AMovieDllUnregisterServer$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:AMovieDllUnregisterServer$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT AMovieDllUnregisterServer
_TEXT	SEGMENT
hr$ = 48
i$82451 = 52
pT$82455 = 56
psetup$82457 = 72
$T83049 = 96
tv65 = 112
AMovieDllUnregisterServer PROC				; COMDAT
; Line 638
$LN12:
	push	rsi
	push	rdi
	sub	rsp, 136				; 00000088H
	mov	rdi, rsp
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 641
	mov	DWORD PTR hr$[rsp], 0
; Line 646
	mov	eax, DWORD PTR ?g_cTemplates@@3HA	; g_cTemplates
	mov	DWORD PTR i$82451[rsp], eax
$LN9@AMovieDllU:
	mov	eax, DWORD PTR i$82451[rsp]
	mov	DWORD PTR tv65[rsp], eax
	mov	eax, DWORD PTR i$82451[rsp]
	dec	eax
	mov	DWORD PTR i$82451[rsp], eax
	cmp	DWORD PTR tv65[rsp], 0
	je	$LN8@AMovieDllU
; Line 650
	movsxd	rax, DWORD PTR i$82451[rsp]
	imul	rax, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR pT$82455[rsp], rax
; Line 654
	mov	rax, QWORD PTR pT$82455[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@AMovieDllU
; Line 663
	lea	rax, QWORD PTR psetup$82457[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:IID_IAMovieSetup
	mov	r8d, 1
	xor	edx, edx
	mov	rax, QWORD PTR pT$82455[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_CoCreateInstance
	mov	DWORD PTR hr$[rsp], eax
; Line 664
	cmp	DWORD PTR hr$[rsp], 0
	jl	SHORT $LN6@AMovieDllU
; Line 666
	mov	rax, QWORD PTR psetup$82457[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR psetup$82457[rsp]
	call	QWORD PTR [rax+32]
	mov	DWORD PTR hr$[rsp], eax
; Line 667
	mov	rax, QWORD PTR psetup$82457[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR psetup$82457[rsp]
	call	QWORD PTR [rax+16]
; Line 669
	jmp	SHORT $LN5@AMovieDllU
$LN6@AMovieDllU:
; Line 672
	cmp	DWORD PTR hr$[rsp], -2147467262		; ffffffff80004002H
	je	SHORT $LN3@AMovieDllU
	cmp	DWORD PTR hr$[rsp], -2147220990		; ffffffff80040202H
	jne	SHORT $LN4@AMovieDllU
$LN3@AMovieDllU:
; Line 673
	mov	DWORD PTR hr$[rsp], 0
$LN4@AMovieDllU:
$LN5@AMovieDllU:
$LN7@AMovieDllU:
; Line 679
	cmp	DWORD PTR hr$[rsp], 0
	jl	SHORT $LN2@AMovieDllU
; Line 681
	mov	rax, QWORD PTR pT$82455[rsp]
	mov	rax, QWORD PTR [rax+8]
	lea	rcx, QWORD PTR $T83049[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rcx, QWORD PTR $T83049[rsp]
	call	AMovieSetupUnregisterServer
	mov	DWORD PTR hr$[rsp], eax
$LN2@AMovieDllU:
; Line 687
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@AMovieDllU
; Line 688
	jmp	SHORT $LN8@AMovieDllU
$LN1@AMovieDllU:
; Line 689
	jmp	$LN9@AMovieDllU
$LN8@AMovieDllU:
; Line 691
	mov	eax, DWORD PTR hr$[rsp]
; Line 692
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:AMovieDllUnregisterServer$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 136				; 00000088H
	pop	rdi
	pop	rsi
	ret	0
AMovieDllUnregisterServer ENDP
_TEXT	ENDS
END

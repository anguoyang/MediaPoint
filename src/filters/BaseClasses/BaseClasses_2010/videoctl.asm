; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG82248 DB	00H, 00H
$SG82254 DB	00H
	ORG $+5
$SG82273 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82274 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82282 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82283 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82291 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82292 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82301 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82302 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82310 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82311 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82318 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82319 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82328 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82329 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82338 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82339 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82344 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82345 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82352 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82353 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82359 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82360 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82367 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82368 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82374 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82375 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82381 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82382 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82388 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82389 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82395 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82396 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82402 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82403 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82408 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82409 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82416 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82417 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82425 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82426 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82433 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82434 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82441 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82442 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82451 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82452 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82458 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82459 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82469 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82470 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82478 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82479 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82489 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82490 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82497 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82498 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82505 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82506 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82514 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82515 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82522 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82523 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82530 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82531 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82537 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82538 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82544 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82545 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82551 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82552 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82559 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82560 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82566 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82567 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82573 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82574 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82581 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82582 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82588 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82589 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82595 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82596 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82602 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82603 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82613 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82614 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82619 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82620 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82629 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82630 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82636 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82637 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82642 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82643 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82649 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82650 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82657 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82658 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82665 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82666 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82672 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82673 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82679 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82680 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82690 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82691 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82697 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82698 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82705 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82706 DB	'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG82714 DB	'U', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 'b'
	DB	00H, 'r', 00H, 'a', 00H, 'r', 00H, 'y', 00H, 00H, 00H
	ORG $+4
$SG82723 DB	'E', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H, 'o', 00H, 'L', 00H, 'o'
	DB	00H, 'a', 00H, 'd', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 00H
	DB	00H
	ORG $+4
$SG82725 DB	'A', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'y', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'e'
	DB	00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG82727 DB	'.', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82728 DB	'm', 00H, '_', 00H, 'h', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82731 DB	'D', 00H, 'D', 00H, 'R', 00H, 'A', 00H, 'W', 00H, '.', 00H
	DB	'D', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+4
$SG82733 DB	'C', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, ' ', 00H, 'D', 00H, 'D'
	DB	00H, 'R', 00H, 'A', 00H, 'W', 00H, '.', 00H, 'D', 00H, 'L', 00H
	DB	'L', 00H, 00H, 00H
	ORG $+6
$SG82734 DB	'N', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG82737 DB	'DirectDrawCreate', 00H
	ORG $+3
$SG82747 DB	'<NULL>', 00H
	ORG $+5
$SG82739 DB	'DirectDrawEnumerateA', 00H
	ORG $+3
$SG82741 DB	'DirectDrawEnumerateExA', 00H
	ORG $+1
$SG82752 DB	'C', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' '
	DB	00H, 'D', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG82744 DB	'C', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'u', 00H, 'n'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H
	DB	':', 00H, ' ', 00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '=', 00H, '%', 00H, 'x', 00H, ' ', 00H, 'E', 00H
	DB	'n', 00H, 'u', 00H, 'm', 00H, '=', 00H, '%', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+2
$SG82745 DB	'N', 00H, 'o', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'r', 00H, 'y', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG82748 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H, 'D', 00H, 'r', 00H, 'a'
	DB	00H, 'w', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' '
	DB	00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG82753 DB	'N', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG82758 DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H
	DB	'w', 00H, ' ', 00H, 'd', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
$SG82760 DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG82764 DB	'E', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'I', 00H, 's', 00H, 'D', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H
	DB	'a', 00H, 'w', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'e'
	DB	00H, 'd', 00H, 00H, 00H
$SG82766 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, ' ', 00H, 'n', 00H, 'o'
	DB	00H, 't', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H
	ORG $+4
$SG82771 DB	'E', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'D'
	DB	00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'D', 00H
	DB	'r', 00H, 'a', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG82773 DB	'N', 00H, 'o', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 00H, 00H
	ORG $+4
$SG82774 DB	'R', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'n', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'a', 00H
	DB	'w', 00H, 00H, 00H
	ORG $+6
$SG82784 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, ' ', 00H, 'V'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '2', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'g'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+6
$SG82786 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, ' ', 00H, 'V'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '1', 00H, 00H, 00H
CONST	ENDS
;	COMDAT IID_IAMFilterGraphCallback
CONST	SEGMENT
IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	?StringFromResource@@YAPEA_WPEA_WH@Z		; StringFromResource
EXTRN	__imp_LoadStringW:PROC
EXTRN	?g_hInst@@3PEAUHINSTANCE__@@EA:QWORD		; g_hInst
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\videoctl.cpp
pdata	SEGMENT
$pdata$?StringFromResource@@YAPEA_WPEA_WH@Z DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$?StringFromResource@@YAPEA_WPEA_WH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StringFromResource@@YAPEA_WPEA_WH@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ?StringFromResource@@YAPEA_WPEA_WH@Z
_TEXT	SEGMENT
pBuffer$ = 48
iResourceID$ = 56
?StringFromResource@@YAPEA_WPEA_WH@Z PROC		; StringFromResource, COMDAT
; Line 19
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 20
	mov	r9d, 256				; 00000100H
	mov	r8, QWORD PTR pBuffer$[rsp]
	mov	edx, DWORD PTR iResourceID$[rsp]
	mov	rcx, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	call	QWORD PTR __imp_LoadStringW
	test	eax, eax
	jne	SHORT $LN1@StringFrom
; Line 21
	lea	rax, OFFSET FLAT:$SG82248
	jmp	SHORT $LN2@StringFrom
$LN1@StringFrom:
; Line 23
	mov	rax, QWORD PTR pBuffer$[rsp]
$LN2@StringFrom:
; Line 24
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?StringFromResource@@YAPEA_WPEA_WH@Z ENDP		; StringFromResource
_TEXT	ENDS
PUBLIC	?StringFromResource@@YAPEADPEADH@Z		; StringFromResource
EXTRN	__imp_LoadStringA:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StringFromResource@@YAPEADPEADH@Z DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$?StringFromResource@@YAPEADPEADH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StringFromResource@@YAPEADPEADH@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?StringFromResource@@YAPEADPEADH@Z
_TEXT	SEGMENT
pBuffer$ = 48
iResourceID$ = 56
?StringFromResource@@YAPEADPEADH@Z PROC			; StringFromResource, COMDAT
; Line 28
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 29
	mov	r9d, 256				; 00000100H
	mov	r8, QWORD PTR pBuffer$[rsp]
	mov	edx, DWORD PTR iResourceID$[rsp]
	mov	rcx, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	call	QWORD PTR __imp_LoadStringA
	test	eax, eax
	jne	SHORT $LN1@StringFrom@2
; Line 30
	lea	rax, OFFSET FLAT:$SG82254
	jmp	SHORT $LN2@StringFrom@2
$LN1@StringFrom@2:
; Line 32
	mov	rax, QWORD PTR pBuffer$[rsp]
$LN2@StringFrom@2:
; Line 33
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?StringFromResource@@YAPEADPEADH@Z ENDP			; StringFromResource
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z ; GetDialogSize
EXTRN	__GSHandlerCheck:PROC
EXTRN	__imp_DestroyWindow:PROC
EXTRN	__imp_GetWindowRect:PROC
EXTRN	__imp_CreateDialogParamW:PROC
EXTRN	__imp_GetDesktopWindow:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
EXTRN	_RTC_CheckStackVars:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z DD imagerel $LN4
	DD	imagerel $LN4+248
	DD	imagerel $unwind$?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z DD 023d19H
	DD	07014d218H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z$rtcName$0 DB 072H ; GetDialogSize
	DB	063H
	DB	00H
	ORG $+13
?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z$rtcVarDesc DD 038H ; GetDialogSize
	DD	010H
	DQ	FLAT:?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z$rtcName$0
	ORG $+48
?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z$rtcFrameData DD 01H ; GetDialogSize
	DD	00H
	DQ	FLAT:?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z
_TEXT	SEGMENT
rc$ = 56
hwnd$ = 88
__$ArrayPad$ = 104
iResourceID$ = 128
pDlgProc$ = 136
lParam$ = 144
pResult$ = 152
?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z PROC ; GetDialogSize, COMDAT
; Line 75
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rdi, rsp
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+128]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 85
	call	QWORD PTR __imp_GetDesktopWindow
	movzx	ecx, WORD PTR iResourceID$[rsp]
	mov	rdx, QWORD PTR lParam$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	mov	r9, QWORD PTR pDlgProc$[rsp]
	mov	r8, rax
	mov	edx, ecx
	mov	rcx, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	call	QWORD PTR __imp_CreateDialogParamW
	mov	QWORD PTR hwnd$[rsp], rax
; Line 86
	cmp	QWORD PTR hwnd$[rsp], 0
	jne	SHORT $LN1@GetDialogS
; Line 87
	xor	eax, eax
	jmp	SHORT $LN2@GetDialogS
$LN1@GetDialogS:
; Line 90
	lea	rdx, QWORD PTR rc$[rsp]
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_GetWindowRect
; Line 91
	mov	eax, DWORD PTR rc$[rsp]
	mov	ecx, DWORD PTR rc$[rsp+8]
	sub	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR pResult$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 92
	mov	eax, DWORD PTR rc$[rsp+4]
	mov	ecx, DWORD PTR rc$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR pResult$[rsp]
	mov	DWORD PTR [rcx+4], eax
; Line 94
	mov	rcx, QWORD PTR hwnd$[rsp]
	call	QWORD PTR __imp_DestroyWindow
; Line 95
	mov	eax, 1
$LN2@GetDialogS:
; Line 96
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?GetDialogSize@@YAHHP6A_JPEAUHWND__@@I_K_J@Z2PEAUtagSIZE@@@Z ENDP ; GetDialogSize
_TEXT	ENDS
PUBLIC	==
PUBLIC	?NonDelegatingQueryInterface@CAggDirectDraw@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CAggDirectDraw::NonDelegatingQueryInterface
EXTRN	?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z:PROC ; CUnknown::NonDelegatingQueryInterface
EXTRN	GetInterface:PROC
EXTRN	IID_IDirectDraw:BYTE
EXTRN	?DbgAssert@@YAXPEB_W0H@Z:PROC			; DbgAssert
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NonDelegatingQueryInterface@CAggDirectDraw@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN6
	DD	imagerel $LN6+153
	DD	imagerel $unwind$?NonDelegatingQueryInterface@CAggDirectDraw@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingQueryInterface@CAggDirectDraw@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NonDelegatingQueryInterface@CAggDirectDraw@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?NonDelegatingQueryInterface@CAggDirectDraw@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CAggDirectDraw::NonDelegatingQueryInterface, COMDAT
; Line 108
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 109
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 0
	jne	SHORT $LN3@NonDelegat
	mov	r8d, 109				; 0000006dH
	lea	rdx, OFFSET FLAT:$SG82273
	lea	rcx, OFFSET FLAT:$SG82274
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@NonDelegat:
; Line 113
	lea	rdx, OFFSET FLAT:IID_IDirectDraw
	mov	rcx, QWORD PTR riid$[rsp]
	call	==
	test	eax, eax
	je	SHORT $LN2@NonDelegat
; Line 114
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 8
	mov	rdx, QWORD PTR ppv$[rsp]
	mov	rcx, rax
	call	GetInterface
	jmp	SHORT $LN4@NonDelegat
; Line 115
	jmp	SHORT $LN1@NonDelegat
$LN2@NonDelegat:
; Line 116
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR ppv$[rsp]
	mov	rdx, QWORD PTR riid$[rsp]
	mov	rcx, rax
	call	?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN1@NonDelegat:
$LN4@NonDelegat:
; Line 118
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?NonDelegatingQueryInterface@CAggDirectDraw@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CAggDirectDraw::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	IsEqualGUID
;	COMDAT pdata
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
pdata	SEGMENT
$pdata$== DD	imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$==
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$== DD	022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ==
_TEXT	SEGMENT
guidOne$ = 48
guidOther$ = 56
==	PROC						; COMDAT
; Line 193
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 194
	mov	rdx, QWORD PTR guidOther$[rsp]
	mov	rcx, QWORD PTR guidOne$[rsp]
	call	IsEqualGUID
; Line 195
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
==	ENDP
_TEXT	ENDS
EXTRN	memcmp:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$IsEqualGUID DD imagerel $LN5
	DD	imagerel $LN5+88
	DD	imagerel $unwind$IsEqualGUID
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsEqualGUID DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT IsEqualGUID
_TEXT	SEGMENT
tv69 = 32
rguid1$ = 64
rguid2$ = 72
IsEqualGUID PROC					; COMDAT
; Line 160
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 161
	mov	r8d, 16
	mov	rdx, QWORD PTR rguid2$[rsp]
	mov	rcx, QWORD PTR rguid1$[rsp]
	call	memcmp
	test	eax, eax
	jne	SHORT $LN3@IsEqualGUI
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
	mov	DWORD PTR tv69[rsp], 0
$LN4@IsEqualGUI:
	mov	eax, DWORD PTR tv69[rsp]
; Line 162
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	?Compact@CAggDirectDraw@@UEAAJXZ		; CAggDirectDraw::Compact
;	COMDAT pdata
; File c:\downloads\wpf mediakit - copy\src\filters\baseclasses\videoctl.cpp
pdata	SEGMENT
$pdata$?Compact@CAggDirectDraw@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$?Compact@CAggDirectDraw@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Compact@CAggDirectDraw@@UEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Compact@CAggDirectDraw@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Compact@CAggDirectDraw@@UEAAJXZ PROC			; CAggDirectDraw::Compact, COMDAT
; Line 122
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 123
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@Compact
	mov	r8d, 123				; 0000007bH
	lea	rdx, OFFSET FLAT:$SG82282
	lea	rcx, OFFSET FLAT:$SG82283
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Compact:
; Line 124
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+24]
; Line 125
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Compact@CAggDirectDraw@@UEAAJXZ ENDP			; CAggDirectDraw::Compact
_TEXT	ENDS
PUBLIC	?CreateClipper@CAggDirectDraw@@UEAAJKPEAPEAUIDirectDrawClipper@@PEAUIUnknown@@@Z ; CAggDirectDraw::CreateClipper
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateClipper@CAggDirectDraw@@UEAAJKPEAPEAUIDirectDrawClipper@@PEAUIUnknown@@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$?CreateClipper@CAggDirectDraw@@UEAAJKPEAPEAUIDirectDrawClipper@@PEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateClipper@CAggDirectDraw@@UEAAJKPEAPEAUIDirectDrawClipper@@PEAUIUnknown@@@Z DD 022c01H
	DD	070143218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CreateClipper@CAggDirectDraw@@UEAAJKPEAPEAUIDirectDrawClipper@@PEAUIUnknown@@@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
lplpDDClipper$ = 64
pUnkOuter$ = 72
?CreateClipper@CAggDirectDraw@@UEAAJKPEAPEAUIDirectDrawClipper@@PEAUIUnknown@@@Z PROC ; CAggDirectDraw::CreateClipper, COMDAT
; Line 129
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 130
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@CreateClip
	mov	r8d, 130				; 00000082H
	lea	rdx, OFFSET FLAT:$SG82291
	lea	rcx, OFFSET FLAT:$SG82292
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CreateClip:
; Line 131
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR pUnkOuter$[rsp]
	mov	r8, QWORD PTR lplpDDClipper$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+32]
; Line 132
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?CreateClipper@CAggDirectDraw@@UEAAJKPEAPEAUIDirectDrawClipper@@PEAUIUnknown@@@Z ENDP ; CAggDirectDraw::CreateClipper
_TEXT	ENDS
PUBLIC	?CreatePalette@CAggDirectDraw@@UEAAJKPEAUtagPALETTEENTRY@@PEAPEAUIDirectDrawPalette@@PEAUIUnknown@@@Z ; CAggDirectDraw::CreatePalette
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreatePalette@CAggDirectDraw@@UEAAJKPEAUtagPALETTEENTRY@@PEAPEAUIDirectDrawPalette@@PEAUIUnknown@@@Z DD imagerel $LN4
	DD	imagerel $LN4+135
	DD	imagerel $unwind$?CreatePalette@CAggDirectDraw@@UEAAJKPEAUtagPALETTEENTRY@@PEAPEAUIDirectDrawPalette@@PEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreatePalette@CAggDirectDraw@@UEAAJKPEAUtagPALETTEENTRY@@PEAPEAUIDirectDrawPalette@@PEAUIUnknown@@@Z DD 022c01H
	DD	070145218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CreatePalette@CAggDirectDraw@@UEAAJKPEAUtagPALETTEENTRY@@PEAPEAUIDirectDrawPalette@@PEAUIUnknown@@@Z
_TEXT	SEGMENT
this$ = 64
dwFlags$ = 72
lpColorTable$ = 80
lplpDDPalette$ = 88
pUnkOuter$ = 96
?CreatePalette@CAggDirectDraw@@UEAAJKPEAUtagPALETTEENTRY@@PEAPEAUIDirectDrawPalette@@PEAUIUnknown@@@Z PROC ; CAggDirectDraw::CreatePalette, COMDAT
; Line 136
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 137
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@CreatePale
	mov	r8d, 137				; 00000089H
	lea	rdx, OFFSET FLAT:$SG82301
	lea	rcx, OFFSET FLAT:$SG82302
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CreatePale:
; Line 138
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR pUnkOuter$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	mov	r9, QWORD PTR lplpDDPalette$[rsp]
	mov	r8, QWORD PTR lpColorTable$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+40]
; Line 139
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CreatePalette@CAggDirectDraw@@UEAAJKPEAUtagPALETTEENTRY@@PEAPEAUIDirectDrawPalette@@PEAUIUnknown@@@Z ENDP ; CAggDirectDraw::CreatePalette
_TEXT	ENDS
PUBLIC	?CreateSurface@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@PEAPEAUIDirectDrawSurface@@PEAUIUnknown@@@Z ; CAggDirectDraw::CreateSurface
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateSurface@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@PEAPEAUIDirectDrawSurface@@PEAUIUnknown@@@Z DD imagerel $LN4
	DD	imagerel $LN4+127
	DD	imagerel $unwind$?CreateSurface@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@PEAPEAUIDirectDrawSurface@@PEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateSurface@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@PEAPEAUIDirectDrawSurface@@PEAUIUnknown@@@Z DD 022d01H
	DD	070153219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?CreateSurface@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@PEAPEAUIDirectDrawSurface@@PEAUIUnknown@@@Z
_TEXT	SEGMENT
this$ = 48
lpDDSurfaceDesc$ = 56
lplpDDSurface$ = 64
pUnkOuter$ = 72
?CreateSurface@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@PEAPEAUIDirectDrawSurface@@PEAUIUnknown@@@Z PROC ; CAggDirectDraw::CreateSurface, COMDAT
; Line 143
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 144
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@CreateSurf
	mov	r8d, 144				; 00000090H
	lea	rdx, OFFSET FLAT:$SG82310
	lea	rcx, OFFSET FLAT:$SG82311
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@CreateSurf:
; Line 145
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR pUnkOuter$[rsp]
	mov	r8, QWORD PTR lplpDDSurface$[rsp]
	mov	rdx, QWORD PTR lpDDSurfaceDesc$[rsp]
	call	QWORD PTR [rax+48]
; Line 146
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?CreateSurface@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@PEAPEAUIDirectDrawSurface@@PEAUIUnknown@@@Z ENDP ; CAggDirectDraw::CreateSurface
_TEXT	ENDS
PUBLIC	?DuplicateSurface@CAggDirectDraw@@UEAAJPEAUIDirectDrawSurface@@PEAPEAU2@@Z ; CAggDirectDraw::DuplicateSurface
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DuplicateSurface@CAggDirectDraw@@UEAAJPEAUIDirectDrawSurface@@PEAPEAU2@@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$?DuplicateSurface@CAggDirectDraw@@UEAAJPEAUIDirectDrawSurface@@PEAPEAU2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DuplicateSurface@CAggDirectDraw@@UEAAJPEAUIDirectDrawSurface@@PEAPEAU2@@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?DuplicateSurface@CAggDirectDraw@@UEAAJPEAUIDirectDrawSurface@@PEAPEAU2@@Z
_TEXT	SEGMENT
this$ = 48
lpDDSurface$ = 56
lplpDupDDSurface$ = 64
?DuplicateSurface@CAggDirectDraw@@UEAAJPEAUIDirectDrawSurface@@PEAPEAU2@@Z PROC ; CAggDirectDraw::DuplicateSurface, COMDAT
; Line 150
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 151
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@DuplicateS
	mov	r8d, 151				; 00000097H
	lea	rdx, OFFSET FLAT:$SG82318
	lea	rcx, OFFSET FLAT:$SG82319
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@DuplicateS:
; Line 152
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lplpDupDDSurface$[rsp]
	mov	rdx, QWORD PTR lpDDSurface$[rsp]
	call	QWORD PTR [rax+56]
; Line 153
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?DuplicateSurface@CAggDirectDraw@@UEAAJPEAUIDirectDrawSurface@@PEAPEAU2@@Z ENDP ; CAggDirectDraw::DuplicateSurface
_TEXT	ENDS
PUBLIC	?EnumDisplayModes@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJ01@Z@Z ; CAggDirectDraw::EnumDisplayModes
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnumDisplayModes@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJ01@Z@Z DD imagerel $LN4
	DD	imagerel $LN4+135
	DD	imagerel $unwind$?EnumDisplayModes@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJ01@Z@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnumDisplayModes@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJ01@Z@Z DD 022c01H
	DD	070145218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?EnumDisplayModes@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJ01@Z@Z
_TEXT	SEGMENT
this$ = 64
dwSurfaceDescCount$ = 72
lplpDDSurfaceDescList$ = 80
lpContext$ = 88
lpEnumCallback$ = 96
?EnumDisplayModes@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJ01@Z@Z PROC ; CAggDirectDraw::EnumDisplayModes, COMDAT
; Line 157
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 158
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@EnumDispla
	mov	r8d, 158				; 0000009eH
	lea	rdx, OFFSET FLAT:$SG82328
	lea	rcx, OFFSET FLAT:$SG82329
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@EnumDispla:
; Line 159
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpEnumCallback$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	mov	r9, QWORD PTR lpContext$[rsp]
	mov	r8, QWORD PTR lplpDDSurfaceDescList$[rsp]
	mov	edx, DWORD PTR dwSurfaceDescCount$[rsp]
	call	QWORD PTR [rax+64]
; Line 160
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?EnumDisplayModes@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJ01@Z@Z ENDP ; CAggDirectDraw::EnumDisplayModes
_TEXT	ENDS
PUBLIC	?EnumSurfaces@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJPEAUIDirectDrawSurface@@01@Z@Z ; CAggDirectDraw::EnumSurfaces
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnumSurfaces@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJPEAUIDirectDrawSurface@@01@Z@Z DD imagerel $LN4
	DD	imagerel $LN4+135
	DD	imagerel $unwind$?EnumSurfaces@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJPEAUIDirectDrawSurface@@01@Z@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnumSurfaces@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJPEAUIDirectDrawSurface@@01@Z@Z DD 022c01H
	DD	070145218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?EnumSurfaces@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJPEAUIDirectDrawSurface@@01@Z@Z
_TEXT	SEGMENT
this$ = 64
dwFlags$ = 72
lpDDSD$ = 80
lpContext$ = 88
lpEnumCallback$ = 96
?EnumSurfaces@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJPEAUIDirectDrawSurface@@01@Z@Z PROC ; CAggDirectDraw::EnumSurfaces, COMDAT
; Line 164
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 165
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@EnumSurfac
	mov	r8d, 165				; 000000a5H
	lea	rdx, OFFSET FLAT:$SG82338
	lea	rcx, OFFSET FLAT:$SG82339
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@EnumSurfac:
; Line 166
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpEnumCallback$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	mov	r9, QWORD PTR lpContext$[rsp]
	mov	r8, QWORD PTR lpDDSD$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+72]
; Line 167
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?EnumSurfaces@CAggDirectDraw@@UEAAJKPEAU_DDSURFACEDESC@@PEAXP6AJPEAUIDirectDrawSurface@@01@Z@Z ENDP ; CAggDirectDraw::EnumSurfaces
_TEXT	ENDS
PUBLIC	?FlipToGDISurface@CAggDirectDraw@@UEAAJXZ	; CAggDirectDraw::FlipToGDISurface
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FlipToGDISurface@CAggDirectDraw@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$?FlipToGDISurface@CAggDirectDraw@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FlipToGDISurface@CAggDirectDraw@@UEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?FlipToGDISurface@CAggDirectDraw@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?FlipToGDISurface@CAggDirectDraw@@UEAAJXZ PROC		; CAggDirectDraw::FlipToGDISurface, COMDAT
; Line 171
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 172
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@FlipToGDIS
	mov	r8d, 172				; 000000acH
	lea	rdx, OFFSET FLAT:$SG82344
	lea	rcx, OFFSET FLAT:$SG82345
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@FlipToGDIS:
; Line 173
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+80]
; Line 174
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?FlipToGDISurface@CAggDirectDraw@@UEAAJXZ ENDP		; CAggDirectDraw::FlipToGDISurface
_TEXT	ENDS
PUBLIC	?GetCaps@CAggDirectDraw@@UEAAJPEAU_DDCAPS_DX7@@0@Z ; CAggDirectDraw::GetCaps
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCaps@CAggDirectDraw@@UEAAJPEAU_DDCAPS_DX7@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$?GetCaps@CAggDirectDraw@@UEAAJPEAU_DDCAPS_DX7@@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCaps@CAggDirectDraw@@UEAAJPEAU_DDCAPS_DX7@@0@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetCaps@CAggDirectDraw@@UEAAJPEAU_DDCAPS_DX7@@0@Z
_TEXT	SEGMENT
this$ = 48
lpDDDriverCaps$ = 56
lpDDHELCaps$ = 64
?GetCaps@CAggDirectDraw@@UEAAJPEAU_DDCAPS_DX7@@0@Z PROC	; CAggDirectDraw::GetCaps, COMDAT
; Line 178
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 179
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetCaps
	mov	r8d, 179				; 000000b3H
	lea	rdx, OFFSET FLAT:$SG82352
	lea	rcx, OFFSET FLAT:$SG82353
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetCaps:
; Line 180
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpDDHELCaps$[rsp]
	mov	rdx, QWORD PTR lpDDDriverCaps$[rsp]
	call	QWORD PTR [rax+88]
; Line 181
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetCaps@CAggDirectDraw@@UEAAJPEAU_DDCAPS_DX7@@0@Z ENDP	; CAggDirectDraw::GetCaps
_TEXT	ENDS
PUBLIC	?GetDisplayMode@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@@Z ; CAggDirectDraw::GetDisplayMode
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDisplayMode@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?GetDisplayMode@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDisplayMode@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetDisplayMode@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@@Z
_TEXT	SEGMENT
this$ = 48
lpDDSurfaceDesc$ = 56
?GetDisplayMode@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@@Z PROC ; CAggDirectDraw::GetDisplayMode, COMDAT
; Line 185
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 186
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetDisplay
	mov	r8d, 186				; 000000baH
	lea	rdx, OFFSET FLAT:$SG82359
	lea	rcx, OFFSET FLAT:$SG82360
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetDisplay:
; Line 187
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDSurfaceDesc$[rsp]
	call	QWORD PTR [rax+96]
; Line 188
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetDisplayMode@CAggDirectDraw@@UEAAJPEAU_DDSURFACEDESC@@@Z ENDP ; CAggDirectDraw::GetDisplayMode
_TEXT	ENDS
PUBLIC	?GetFourCCCodes@CAggDirectDraw@@UEAAJPEAK0@Z	; CAggDirectDraw::GetFourCCCodes
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFourCCCodes@CAggDirectDraw@@UEAAJPEAK0@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$?GetFourCCCodes@CAggDirectDraw@@UEAAJPEAK0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFourCCCodes@CAggDirectDraw@@UEAAJPEAK0@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetFourCCCodes@CAggDirectDraw@@UEAAJPEAK0@Z
_TEXT	SEGMENT
this$ = 48
lpNumCodes$ = 56
lpCodes$ = 64
?GetFourCCCodes@CAggDirectDraw@@UEAAJPEAK0@Z PROC	; CAggDirectDraw::GetFourCCCodes, COMDAT
; Line 192
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 193
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetFourCCC
	mov	r8d, 193				; 000000c1H
	lea	rdx, OFFSET FLAT:$SG82367
	lea	rcx, OFFSET FLAT:$SG82368
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetFourCCC:
; Line 194
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpCodes$[rsp]
	mov	rdx, QWORD PTR lpNumCodes$[rsp]
	call	QWORD PTR [rax+104]
; Line 195
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetFourCCCodes@CAggDirectDraw@@UEAAJPEAK0@Z ENDP	; CAggDirectDraw::GetFourCCCodes
_TEXT	ENDS
PUBLIC	?GetGDISurface@CAggDirectDraw@@UEAAJPEAPEAUIDirectDrawSurface@@@Z ; CAggDirectDraw::GetGDISurface
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetGDISurface@CAggDirectDraw@@UEAAJPEAPEAUIDirectDrawSurface@@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?GetGDISurface@CAggDirectDraw@@UEAAJPEAPEAUIDirectDrawSurface@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetGDISurface@CAggDirectDraw@@UEAAJPEAPEAUIDirectDrawSurface@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetGDISurface@CAggDirectDraw@@UEAAJPEAPEAUIDirectDrawSurface@@@Z
_TEXT	SEGMENT
this$ = 48
lplpGDIDDSurface$ = 56
?GetGDISurface@CAggDirectDraw@@UEAAJPEAPEAUIDirectDrawSurface@@@Z PROC ; CAggDirectDraw::GetGDISurface, COMDAT
; Line 199
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 200
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetGDISurf
	mov	r8d, 200				; 000000c8H
	lea	rdx, OFFSET FLAT:$SG82374
	lea	rcx, OFFSET FLAT:$SG82375
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetGDISurf:
; Line 201
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lplpGDIDDSurface$[rsp]
	call	QWORD PTR [rax+112]
; Line 202
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetGDISurface@CAggDirectDraw@@UEAAJPEAPEAUIDirectDrawSurface@@@Z ENDP ; CAggDirectDraw::GetGDISurface
_TEXT	ENDS
PUBLIC	?GetMonitorFrequency@CAggDirectDraw@@UEAAJPEAK@Z ; CAggDirectDraw::GetMonitorFrequency
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMonitorFrequency@CAggDirectDraw@@UEAAJPEAK@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?GetMonitorFrequency@CAggDirectDraw@@UEAAJPEAK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMonitorFrequency@CAggDirectDraw@@UEAAJPEAK@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetMonitorFrequency@CAggDirectDraw@@UEAAJPEAK@Z
_TEXT	SEGMENT
this$ = 48
lpdwFrequency$ = 56
?GetMonitorFrequency@CAggDirectDraw@@UEAAJPEAK@Z PROC	; CAggDirectDraw::GetMonitorFrequency, COMDAT
; Line 206
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 207
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetMonitor
	mov	r8d, 207				; 000000cfH
	lea	rdx, OFFSET FLAT:$SG82381
	lea	rcx, OFFSET FLAT:$SG82382
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetMonitor:
; Line 208
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpdwFrequency$[rsp]
	call	QWORD PTR [rax+120]
; Line 209
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetMonitorFrequency@CAggDirectDraw@@UEAAJPEAK@Z ENDP	; CAggDirectDraw::GetMonitorFrequency
_TEXT	ENDS
PUBLIC	?GetScanLine@CAggDirectDraw@@UEAAJPEAK@Z	; CAggDirectDraw::GetScanLine
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetScanLine@CAggDirectDraw@@UEAAJPEAK@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?GetScanLine@CAggDirectDraw@@UEAAJPEAK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetScanLine@CAggDirectDraw@@UEAAJPEAK@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetScanLine@CAggDirectDraw@@UEAAJPEAK@Z
_TEXT	SEGMENT
this$ = 48
lpdwScanLine$ = 56
?GetScanLine@CAggDirectDraw@@UEAAJPEAK@Z PROC		; CAggDirectDraw::GetScanLine, COMDAT
; Line 213
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 214
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetScanLin
	mov	r8d, 214				; 000000d6H
	lea	rdx, OFFSET FLAT:$SG82388
	lea	rcx, OFFSET FLAT:$SG82389
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetScanLin:
; Line 215
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpdwScanLine$[rsp]
	call	QWORD PTR [rax+128]
; Line 216
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetScanLine@CAggDirectDraw@@UEAAJPEAK@Z ENDP		; CAggDirectDraw::GetScanLine
_TEXT	ENDS
PUBLIC	?GetVerticalBlankStatus@CAggDirectDraw@@UEAAJPEAH@Z ; CAggDirectDraw::GetVerticalBlankStatus
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetVerticalBlankStatus@CAggDirectDraw@@UEAAJPEAH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?GetVerticalBlankStatus@CAggDirectDraw@@UEAAJPEAH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetVerticalBlankStatus@CAggDirectDraw@@UEAAJPEAH@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetVerticalBlankStatus@CAggDirectDraw@@UEAAJPEAH@Z
_TEXT	SEGMENT
this$ = 48
lpblsInVB$ = 56
?GetVerticalBlankStatus@CAggDirectDraw@@UEAAJPEAH@Z PROC ; CAggDirectDraw::GetVerticalBlankStatus, COMDAT
; Line 220
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 221
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetVertica
	mov	r8d, 221				; 000000ddH
	lea	rdx, OFFSET FLAT:$SG82395
	lea	rcx, OFFSET FLAT:$SG82396
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetVertica:
; Line 222
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpblsInVB$[rsp]
	call	QWORD PTR [rax+136]
; Line 223
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetVerticalBlankStatus@CAggDirectDraw@@UEAAJPEAH@Z ENDP ; CAggDirectDraw::GetVerticalBlankStatus
_TEXT	ENDS
PUBLIC	?Initialize@CAggDirectDraw@@UEAAJPEAU_GUID@@@Z	; CAggDirectDraw::Initialize
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize@CAggDirectDraw@@UEAAJPEAU_GUID@@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?Initialize@CAggDirectDraw@@UEAAJPEAU_GUID@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize@CAggDirectDraw@@UEAAJPEAU_GUID@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Initialize@CAggDirectDraw@@UEAAJPEAU_GUID@@@Z
_TEXT	SEGMENT
this$ = 48
lpGUID$ = 56
?Initialize@CAggDirectDraw@@UEAAJPEAU_GUID@@@Z PROC	; CAggDirectDraw::Initialize, COMDAT
; Line 227
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 228
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@Initialize
	mov	r8d, 228				; 000000e4H
	lea	rdx, OFFSET FLAT:$SG82402
	lea	rcx, OFFSET FLAT:$SG82403
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Initialize:
; Line 229
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpGUID$[rsp]
	call	QWORD PTR [rax+144]
; Line 230
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Initialize@CAggDirectDraw@@UEAAJPEAU_GUID@@@Z ENDP	; CAggDirectDraw::Initialize
_TEXT	ENDS
PUBLIC	?RestoreDisplayMode@CAggDirectDraw@@UEAAJXZ	; CAggDirectDraw::RestoreDisplayMode
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RestoreDisplayMode@CAggDirectDraw@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$?RestoreDisplayMode@CAggDirectDraw@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RestoreDisplayMode@CAggDirectDraw@@UEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?RestoreDisplayMode@CAggDirectDraw@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?RestoreDisplayMode@CAggDirectDraw@@UEAAJXZ PROC	; CAggDirectDraw::RestoreDisplayMode, COMDAT
; Line 234
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 235
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@RestoreDis
	mov	r8d, 235				; 000000ebH
	lea	rdx, OFFSET FLAT:$SG82408
	lea	rcx, OFFSET FLAT:$SG82409
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@RestoreDis:
; Line 236
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+152]
; Line 237
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?RestoreDisplayMode@CAggDirectDraw@@UEAAJXZ ENDP	; CAggDirectDraw::RestoreDisplayMode
_TEXT	ENDS
PUBLIC	?SetCooperativeLevel@CAggDirectDraw@@UEAAJPEAUHWND__@@K@Z ; CAggDirectDraw::SetCooperativeLevel
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCooperativeLevel@CAggDirectDraw@@UEAAJPEAUHWND__@@K@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$?SetCooperativeLevel@CAggDirectDraw@@UEAAJPEAUHWND__@@K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCooperativeLevel@CAggDirectDraw@@UEAAJPEAUHWND__@@K@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetCooperativeLevel@CAggDirectDraw@@UEAAJPEAUHWND__@@K@Z
_TEXT	SEGMENT
this$ = 48
hWnd$ = 56
dwFlags$ = 64
?SetCooperativeLevel@CAggDirectDraw@@UEAAJPEAUHWND__@@K@Z PROC ; CAggDirectDraw::SetCooperativeLevel, COMDAT
; Line 241
$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 242
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@SetCoopera
	mov	r8d, 242				; 000000f2H
	lea	rdx, OFFSET FLAT:$SG82416
	lea	rcx, OFFSET FLAT:$SG82417
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetCoopera:
; Line 243
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR dwFlags$[rsp]
	mov	rdx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR [rax+160]
; Line 244
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetCooperativeLevel@CAggDirectDraw@@UEAAJPEAUHWND__@@K@Z ENDP ; CAggDirectDraw::SetCooperativeLevel
_TEXT	ENDS
PUBLIC	?SetDisplayMode@CAggDirectDraw@@UEAAJKKK@Z	; CAggDirectDraw::SetDisplayMode
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetDisplayMode@CAggDirectDraw@@UEAAJKKK@Z DD imagerel $LN4
	DD	imagerel $LN4+128
	DD	imagerel $unwind$?SetDisplayMode@CAggDirectDraw@@UEAAJKKK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetDisplayMode@CAggDirectDraw@@UEAAJKKK@Z DD 022c01H
	DD	070143218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetDisplayMode@CAggDirectDraw@@UEAAJKKK@Z
_TEXT	SEGMENT
this$ = 48
dwWidth$ = 56
dwHeight$ = 64
dwBpp$ = 72
?SetDisplayMode@CAggDirectDraw@@UEAAJKKK@Z PROC		; CAggDirectDraw::SetDisplayMode, COMDAT
; Line 248
$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 249
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@SetDisplay
	mov	r8d, 249				; 000000f9H
	lea	rdx, OFFSET FLAT:$SG82425
	lea	rcx, OFFSET FLAT:$SG82426
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetDisplay:
; Line 250
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR dwBpp$[rsp]
	mov	r8d, DWORD PTR dwHeight$[rsp]
	mov	edx, DWORD PTR dwWidth$[rsp]
	call	QWORD PTR [rax+168]
; Line 251
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetDisplayMode@CAggDirectDraw@@UEAAJKKK@Z ENDP		; CAggDirectDraw::SetDisplayMode
_TEXT	ENDS
PUBLIC	?WaitForVerticalBlank@CAggDirectDraw@@UEAAJKPEAX@Z ; CAggDirectDraw::WaitForVerticalBlank
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WaitForVerticalBlank@CAggDirectDraw@@UEAAJKPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+118
	DD	imagerel $unwind$?WaitForVerticalBlank@CAggDirectDraw@@UEAAJKPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WaitForVerticalBlank@CAggDirectDraw@@UEAAJKPEAX@Z DD 022701H
	DD	0700f3213H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?WaitForVerticalBlank@CAggDirectDraw@@UEAAJKPEAX@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
hEvent$ = 64
?WaitForVerticalBlank@CAggDirectDraw@@UEAAJKPEAX@Z PROC	; CAggDirectDraw::WaitForVerticalBlank, COMDAT
; Line 255
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 256
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@WaitForVer
	mov	r8d, 256				; 00000100H
	lea	rdx, OFFSET FLAT:$SG82433
	lea	rcx, OFFSET FLAT:$SG82434
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@WaitForVer:
; Line 257
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR hEvent$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+176]
; Line 258
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?WaitForVerticalBlank@CAggDirectDraw@@UEAAJKPEAX@Z ENDP	; CAggDirectDraw::WaitForVerticalBlank
_TEXT	ENDS
PUBLIC	?NonDelegatingQueryInterface@CAggDrawSurface@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CAggDrawSurface::NonDelegatingQueryInterface
EXTRN	IID_IDirectDrawSurface:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NonDelegatingQueryInterface@CAggDrawSurface@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN6
	DD	imagerel $LN6+153
	DD	imagerel $unwind$?NonDelegatingQueryInterface@CAggDrawSurface@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingQueryInterface@CAggDrawSurface@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?NonDelegatingQueryInterface@CAggDrawSurface@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?NonDelegatingQueryInterface@CAggDrawSurface@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CAggDrawSurface::NonDelegatingQueryInterface, COMDAT
; Line 270
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 271
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 0
	jne	SHORT $LN3@NonDelegat@2
	mov	r8d, 271				; 0000010fH
	lea	rdx, OFFSET FLAT:$SG82441
	lea	rcx, OFFSET FLAT:$SG82442
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN3@NonDelegat@2:
; Line 275
	lea	rdx, OFFSET FLAT:IID_IDirectDrawSurface
	mov	rcx, QWORD PTR riid$[rsp]
	call	==
	test	eax, eax
	je	SHORT $LN2@NonDelegat@2
; Line 276
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 8
	mov	rdx, QWORD PTR ppv$[rsp]
	mov	rcx, rax
	call	GetInterface
	jmp	SHORT $LN4@NonDelegat@2
; Line 277
	jmp	SHORT $LN1@NonDelegat@2
$LN2@NonDelegat@2:
; Line 278
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR ppv$[rsp]
	mov	rdx, QWORD PTR riid$[rsp]
	mov	rcx, rax
	call	?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN1@NonDelegat@2:
$LN4@NonDelegat@2:
; Line 280
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?NonDelegatingQueryInterface@CAggDrawSurface@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CAggDrawSurface::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	?AddAttachedSurface@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@@Z ; CAggDrawSurface::AddAttachedSurface
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddAttachedSurface@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?AddAttachedSurface@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddAttachedSurface@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?AddAttachedSurface@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@@Z
_TEXT	SEGMENT
this$ = 48
lpDDSAttachedSurface$ = 56
?AddAttachedSurface@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@@Z PROC ; CAggDrawSurface::AddAttachedSurface, COMDAT
; Line 284
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 285
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@AddAttache
	mov	r8d, 285				; 0000011dH
	lea	rdx, OFFSET FLAT:$SG82451
	lea	rcx, OFFSET FLAT:$SG82452
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@AddAttache:
; Line 286
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDSAttachedSurface$[rsp]
	call	QWORD PTR [rax+24]
; Line 287
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?AddAttachedSurface@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@@Z ENDP ; CAggDrawSurface::AddAttachedSurface
_TEXT	ENDS
PUBLIC	?AddOverlayDirtyRect@CAggDrawSurface@@UEAAJPEAUtagRECT@@@Z ; CAggDrawSurface::AddOverlayDirtyRect
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddOverlayDirtyRect@CAggDrawSurface@@UEAAJPEAUtagRECT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?AddOverlayDirtyRect@CAggDrawSurface@@UEAAJPEAUtagRECT@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddOverlayDirtyRect@CAggDrawSurface@@UEAAJPEAUtagRECT@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?AddOverlayDirtyRect@CAggDrawSurface@@UEAAJPEAUtagRECT@@@Z
_TEXT	SEGMENT
this$ = 48
lpRect$ = 56
?AddOverlayDirtyRect@CAggDrawSurface@@UEAAJPEAUtagRECT@@@Z PROC ; CAggDrawSurface::AddOverlayDirtyRect, COMDAT
; Line 291
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 292
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@AddOverlay
	mov	r8d, 292				; 00000124H
	lea	rdx, OFFSET FLAT:$SG82458
	lea	rcx, OFFSET FLAT:$SG82459
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@AddOverlay:
; Line 293
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpRect$[rsp]
	call	QWORD PTR [rax+32]
; Line 294
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?AddOverlayDirtyRect@CAggDrawSurface@@UEAAJPEAUtagRECT@@@Z ENDP ; CAggDrawSurface::AddOverlayDirtyRect
_TEXT	ENDS
PUBLIC	?Blt@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDBLTFX@@@Z ; CAggDrawSurface::Blt
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Blt@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDBLTFX@@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$?Blt@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDBLTFX@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Blt@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDBLTFX@@@Z DD 022d01H
	DD	070155219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Blt@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDBLTFX@@@Z
_TEXT	SEGMENT
this$ = 64
lpDestRect$ = 72
lpDDSrcSurface$ = 80
lpSrcRect$ = 88
dwFlags$ = 96
lpDDBltFx$ = 104
?Blt@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDBLTFX@@@Z PROC ; CAggDrawSurface::Blt, COMDAT
; Line 298
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 299
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@Blt
	mov	r8d, 299				; 0000012bH
	lea	rdx, OFFSET FLAT:$SG82469
	lea	rcx, OFFSET FLAT:$SG82470
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Blt:
; Line 300
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDBltFx$[rsp]
	mov	QWORD PTR [rsp+40], rdx
	mov	edx, DWORD PTR dwFlags$[rsp]
	mov	DWORD PTR [rsp+32], edx
	mov	r9, QWORD PTR lpSrcRect$[rsp]
	mov	r8, QWORD PTR lpDDSrcSurface$[rsp]
	mov	rdx, QWORD PTR lpDestRect$[rsp]
	call	QWORD PTR [rax+40]
; Line 301
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Blt@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDBLTFX@@@Z ENDP ; CAggDrawSurface::Blt
_TEXT	ENDS
PUBLIC	?BltBatch@CAggDrawSurface@@UEAAJPEAU_DDBLTBATCH@@KK@Z ; CAggDrawSurface::BltBatch
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BltBatch@CAggDrawSurface@@UEAAJPEAU_DDBLTBATCH@@KK@Z DD imagerel $LN4
	DD	imagerel $LN4+127
	DD	imagerel $unwind$?BltBatch@CAggDrawSurface@@UEAAJPEAU_DDBLTBATCH@@KK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BltBatch@CAggDrawSurface@@UEAAJPEAU_DDBLTBATCH@@KK@Z DD 022d01H
	DD	070153219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?BltBatch@CAggDrawSurface@@UEAAJPEAU_DDBLTBATCH@@KK@Z
_TEXT	SEGMENT
this$ = 48
lpDDBltBatch$ = 56
dwCount$ = 64
dwFlags$ = 72
?BltBatch@CAggDrawSurface@@UEAAJPEAU_DDBLTBATCH@@KK@Z PROC ; CAggDrawSurface::BltBatch, COMDAT
; Line 305
$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 306
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@BltBatch
	mov	r8d, 306				; 00000132H
	lea	rdx, OFFSET FLAT:$SG82478
	lea	rcx, OFFSET FLAT:$SG82479
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@BltBatch:
; Line 307
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR dwFlags$[rsp]
	mov	r8d, DWORD PTR dwCount$[rsp]
	mov	rdx, QWORD PTR lpDDBltBatch$[rsp]
	call	QWORD PTR [rax+48]
; Line 308
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?BltBatch@CAggDrawSurface@@UEAAJPEAU_DDBLTBATCH@@KK@Z ENDP ; CAggDrawSurface::BltBatch
_TEXT	ENDS
PUBLIC	?BltFast@CAggDrawSurface@@UEAAJKKPEAUIDirectDrawSurface@@PEAUtagRECT@@K@Z ; CAggDrawSurface::BltFast
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BltFast@CAggDrawSurface@@UEAAJKKPEAUIDirectDrawSurface@@PEAUtagRECT@@K@Z DD imagerel $LN4
	DD	imagerel $LN4+143
	DD	imagerel $unwind$?BltFast@CAggDrawSurface@@UEAAJKKPEAUIDirectDrawSurface@@PEAUtagRECT@@K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BltFast@CAggDrawSurface@@UEAAJKKPEAUIDirectDrawSurface@@PEAUtagRECT@@K@Z DD 022c01H
	DD	070145218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?BltFast@CAggDrawSurface@@UEAAJKKPEAUIDirectDrawSurface@@PEAUtagRECT@@K@Z
_TEXT	SEGMENT
this$ = 64
dwX$ = 72
dwY$ = 80
lpDDSrcSurface$ = 88
lpSrcRect$ = 96
dwTrans$ = 104
?BltFast@CAggDrawSurface@@UEAAJKKPEAUIDirectDrawSurface@@PEAUtagRECT@@K@Z PROC ; CAggDrawSurface::BltFast, COMDAT
; Line 312
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 313
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@BltFast
	mov	r8d, 313				; 00000139H
	lea	rdx, OFFSET FLAT:$SG82489
	lea	rcx, OFFSET FLAT:$SG82490
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@BltFast:
; Line 314
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR dwTrans$[rsp]
	mov	DWORD PTR [rsp+40], edx
	mov	rdx, QWORD PTR lpSrcRect$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	mov	r9, QWORD PTR lpDDSrcSurface$[rsp]
	mov	r8d, DWORD PTR dwY$[rsp]
	mov	edx, DWORD PTR dwX$[rsp]
	call	QWORD PTR [rax+56]
; Line 315
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?BltFast@CAggDrawSurface@@UEAAJKKPEAUIDirectDrawSurface@@PEAUtagRECT@@K@Z ENDP ; CAggDrawSurface::BltFast
_TEXT	ENDS
PUBLIC	?DeleteAttachedSurface@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z ; CAggDrawSurface::DeleteAttachedSurface
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteAttachedSurface@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?DeleteAttachedSurface@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteAttachedSurface@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z DD 022701H
	DD	0700f3213H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?DeleteAttachedSurface@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
lpDDSAttachedSurface$ = 64
?DeleteAttachedSurface@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z PROC ; CAggDrawSurface::DeleteAttachedSurface, COMDAT
; Line 319
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 320
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@DeleteAtta
	mov	r8d, 320				; 00000140H
	lea	rdx, OFFSET FLAT:$SG82497
	lea	rcx, OFFSET FLAT:$SG82498
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@DeleteAtta:
; Line 321
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpDDSAttachedSurface$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+64]
; Line 322
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?DeleteAttachedSurface@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z ENDP ; CAggDrawSurface::DeleteAttachedSurface
_TEXT	ENDS
PUBLIC	?EnumAttachedSurfaces@CAggDrawSurface@@UEAAJPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z ; CAggDrawSurface::EnumAttachedSurfaces
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnumAttachedSurfaces@CAggDrawSurface@@UEAAJPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$?EnumAttachedSurfaces@CAggDrawSurface@@UEAAJPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnumAttachedSurfaces@CAggDrawSurface@@UEAAJPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?EnumAttachedSurfaces@CAggDrawSurface@@UEAAJPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z
_TEXT	SEGMENT
this$ = 48
lpContext$ = 56
lpEnumSurfacesCallback$ = 64
?EnumAttachedSurfaces@CAggDrawSurface@@UEAAJPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z PROC ; CAggDrawSurface::EnumAttachedSurfaces, COMDAT
; Line 326
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 327
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@EnumAttach
	mov	r8d, 327				; 00000147H
	lea	rdx, OFFSET FLAT:$SG82505
	lea	rcx, OFFSET FLAT:$SG82506
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@EnumAttach:
; Line 328
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpEnumSurfacesCallback$[rsp]
	mov	rdx, QWORD PTR lpContext$[rsp]
	call	QWORD PTR [rax+72]
; Line 329
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?EnumAttachedSurfaces@CAggDrawSurface@@UEAAJPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z ENDP ; CAggDrawSurface::EnumAttachedSurfaces
_TEXT	ENDS
PUBLIC	?EnumOverlayZOrders@CAggDrawSurface@@UEAAJKPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z ; CAggDrawSurface::EnumOverlayZOrders
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnumOverlayZOrders@CAggDrawSurface@@UEAAJKPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$?EnumOverlayZOrders@CAggDrawSurface@@UEAAJKPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnumOverlayZOrders@CAggDrawSurface@@UEAAJKPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z DD 022c01H
	DD	070143218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?EnumOverlayZOrders@CAggDrawSurface@@UEAAJKPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
lpContext$ = 64
lpfnCallback$ = 72
?EnumOverlayZOrders@CAggDrawSurface@@UEAAJKPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z PROC ; CAggDrawSurface::EnumOverlayZOrders, COMDAT
; Line 333
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 334
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@EnumOverla
	mov	r8d, 334				; 0000014eH
	lea	rdx, OFFSET FLAT:$SG82514
	lea	rcx, OFFSET FLAT:$SG82515
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@EnumOverla:
; Line 335
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR lpfnCallback$[rsp]
	mov	r8, QWORD PTR lpContext$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+80]
; Line 336
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?EnumOverlayZOrders@CAggDrawSurface@@UEAAJKPEAXP6AJPEAUIDirectDrawSurface@@PEAU_DDSURFACEDESC@@0@Z@Z ENDP ; CAggDrawSurface::EnumOverlayZOrders
_TEXT	ENDS
PUBLIC	?Flip@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@K@Z ; CAggDrawSurface::Flip
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Flip@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@K@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$?Flip@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Flip@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@K@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Flip@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@K@Z
_TEXT	SEGMENT
this$ = 48
lpDDSurfaceTargetOverride$ = 56
dwFlags$ = 64
?Flip@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@K@Z PROC ; CAggDrawSurface::Flip, COMDAT
; Line 340
$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 341
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@Flip
	mov	r8d, 341				; 00000155H
	lea	rdx, OFFSET FLAT:$SG82522
	lea	rcx, OFFSET FLAT:$SG82523
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Flip:
; Line 342
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR dwFlags$[rsp]
	mov	rdx, QWORD PTR lpDDSurfaceTargetOverride$[rsp]
	call	QWORD PTR [rax+88]
; Line 343
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Flip@CAggDrawSurface@@UEAAJPEAUIDirectDrawSurface@@K@Z ENDP ; CAggDrawSurface::Flip
_TEXT	ENDS
PUBLIC	?GetAttachedSurface@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@PEAPEAUIDirectDrawSurface@@@Z ; CAggDrawSurface::GetAttachedSurface
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetAttachedSurface@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@PEAPEAUIDirectDrawSurface@@@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$?GetAttachedSurface@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@PEAPEAUIDirectDrawSurface@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetAttachedSurface@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@PEAPEAUIDirectDrawSurface@@@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetAttachedSurface@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@PEAPEAUIDirectDrawSurface@@@Z
_TEXT	SEGMENT
this$ = 48
lpDDSCaps$ = 56
lplpDDAttachedSurface$ = 64
?GetAttachedSurface@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@PEAPEAUIDirectDrawSurface@@@Z PROC ; CAggDrawSurface::GetAttachedSurface, COMDAT
; Line 347
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 348
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetAttache
	mov	r8d, 348				; 0000015cH
	lea	rdx, OFFSET FLAT:$SG82530
	lea	rcx, OFFSET FLAT:$SG82531
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetAttache:
; Line 349
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lplpDDAttachedSurface$[rsp]
	mov	rdx, QWORD PTR lpDDSCaps$[rsp]
	call	QWORD PTR [rax+96]
; Line 350
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetAttachedSurface@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@PEAPEAUIDirectDrawSurface@@@Z ENDP ; CAggDrawSurface::GetAttachedSurface
_TEXT	ENDS
PUBLIC	?GetBltStatus@CAggDrawSurface@@UEAAJK@Z		; CAggDrawSurface::GetBltStatus
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBltStatus@CAggDrawSurface@@UEAAJK@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$?GetBltStatus@CAggDrawSurface@@UEAAJK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBltStatus@CAggDrawSurface@@UEAAJK@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetBltStatus@CAggDrawSurface@@UEAAJK@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
?GetBltStatus@CAggDrawSurface@@UEAAJK@Z PROC		; CAggDrawSurface::GetBltStatus, COMDAT
; Line 354
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 355
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetBltStat
	mov	r8d, 355				; 00000163H
	lea	rdx, OFFSET FLAT:$SG82537
	lea	rcx, OFFSET FLAT:$SG82538
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetBltStat:
; Line 356
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+104]
; Line 357
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetBltStatus@CAggDrawSurface@@UEAAJK@Z ENDP		; CAggDrawSurface::GetBltStatus
_TEXT	ENDS
PUBLIC	?GetCaps@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@@Z	; CAggDrawSurface::GetCaps
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCaps@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?GetCaps@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCaps@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetCaps@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@@Z
_TEXT	SEGMENT
this$ = 48
lpDDSCaps$ = 56
?GetCaps@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@@Z PROC	; CAggDrawSurface::GetCaps, COMDAT
; Line 361
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 362
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetCaps@2
	mov	r8d, 362				; 0000016aH
	lea	rdx, OFFSET FLAT:$SG82544
	lea	rcx, OFFSET FLAT:$SG82545
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetCaps@2:
; Line 363
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDSCaps$[rsp]
	call	QWORD PTR [rax+112]
; Line 364
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetCaps@CAggDrawSurface@@UEAAJPEAU_DDSCAPS@@@Z ENDP	; CAggDrawSurface::GetCaps
_TEXT	ENDS
PUBLIC	?GetClipper@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawClipper@@@Z ; CAggDrawSurface::GetClipper
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetClipper@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawClipper@@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?GetClipper@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawClipper@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetClipper@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawClipper@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetClipper@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawClipper@@@Z
_TEXT	SEGMENT
this$ = 48
lplpDDClipper$ = 56
?GetClipper@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawClipper@@@Z PROC ; CAggDrawSurface::GetClipper, COMDAT
; Line 368
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 369
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetClipper
	mov	r8d, 369				; 00000171H
	lea	rdx, OFFSET FLAT:$SG82551
	lea	rcx, OFFSET FLAT:$SG82552
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetClipper:
; Line 370
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lplpDDClipper$[rsp]
	call	QWORD PTR [rax+120]
; Line 371
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetClipper@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawClipper@@@Z ENDP ; CAggDrawSurface::GetClipper
_TEXT	ENDS
PUBLIC	?GetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z ; CAggDrawSurface::GetColorKey
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z DD imagerel $LN4
	DD	imagerel $LN4+118
	DD	imagerel $unwind$?GetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z DD 022701H
	DD	0700f3213H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
lpDDColorKey$ = 64
?GetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z PROC ; CAggDrawSurface::GetColorKey, COMDAT
; Line 375
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 376
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetColorKe
	mov	r8d, 376				; 00000178H
	lea	rdx, OFFSET FLAT:$SG82559
	lea	rcx, OFFSET FLAT:$SG82560
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetColorKe:
; Line 377
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpDDColorKey$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+128]
; Line 378
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z ENDP ; CAggDrawSurface::GetColorKey
_TEXT	ENDS
PUBLIC	?GetDC@CAggDrawSurface@@UEAAJPEAPEAUHDC__@@@Z	; CAggDrawSurface::GetDC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDC@CAggDrawSurface@@UEAAJPEAPEAUHDC__@@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?GetDC@CAggDrawSurface@@UEAAJPEAPEAUHDC__@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDC@CAggDrawSurface@@UEAAJPEAPEAUHDC__@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetDC@CAggDrawSurface@@UEAAJPEAPEAUHDC__@@@Z
_TEXT	SEGMENT
this$ = 48
lphDC$ = 56
?GetDC@CAggDrawSurface@@UEAAJPEAPEAUHDC__@@@Z PROC	; CAggDrawSurface::GetDC, COMDAT
; Line 382
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 383
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetDC
	mov	r8d, 383				; 0000017fH
	lea	rdx, OFFSET FLAT:$SG82566
	lea	rcx, OFFSET FLAT:$SG82567
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetDC:
; Line 384
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lphDC$[rsp]
	call	QWORD PTR [rax+136]
; Line 385
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetDC@CAggDrawSurface@@UEAAJPEAPEAUHDC__@@@Z ENDP	; CAggDrawSurface::GetDC
_TEXT	ENDS
PUBLIC	?GetFlipStatus@CAggDrawSurface@@UEAAJK@Z	; CAggDrawSurface::GetFlipStatus
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFlipStatus@CAggDrawSurface@@UEAAJK@Z DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$?GetFlipStatus@CAggDrawSurface@@UEAAJK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFlipStatus@CAggDrawSurface@@UEAAJK@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetFlipStatus@CAggDrawSurface@@UEAAJK@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
?GetFlipStatus@CAggDrawSurface@@UEAAJK@Z PROC		; CAggDrawSurface::GetFlipStatus, COMDAT
; Line 389
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 390
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetFlipSta
	mov	r8d, 390				; 00000186H
	lea	rdx, OFFSET FLAT:$SG82573
	lea	rcx, OFFSET FLAT:$SG82574
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetFlipSta:
; Line 391
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+144]
; Line 392
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetFlipStatus@CAggDrawSurface@@UEAAJK@Z ENDP		; CAggDrawSurface::GetFlipStatus
_TEXT	ENDS
PUBLIC	?GetOverlayPosition@CAggDrawSurface@@UEAAJPEAJ0@Z ; CAggDrawSurface::GetOverlayPosition
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetOverlayPosition@CAggDrawSurface@@UEAAJPEAJ0@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$?GetOverlayPosition@CAggDrawSurface@@UEAAJPEAJ0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetOverlayPosition@CAggDrawSurface@@UEAAJPEAJ0@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetOverlayPosition@CAggDrawSurface@@UEAAJPEAJ0@Z
_TEXT	SEGMENT
this$ = 48
lpdwX$ = 56
lpdwY$ = 64
?GetOverlayPosition@CAggDrawSurface@@UEAAJPEAJ0@Z PROC	; CAggDrawSurface::GetOverlayPosition, COMDAT
; Line 396
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 397
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetOverlay
	mov	r8d, 397				; 0000018dH
	lea	rdx, OFFSET FLAT:$SG82581
	lea	rcx, OFFSET FLAT:$SG82582
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetOverlay:
; Line 398
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpdwY$[rsp]
	mov	rdx, QWORD PTR lpdwX$[rsp]
	call	QWORD PTR [rax+152]
; Line 399
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetOverlayPosition@CAggDrawSurface@@UEAAJPEAJ0@Z ENDP	; CAggDrawSurface::GetOverlayPosition
_TEXT	ENDS
PUBLIC	?GetPalette@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawPalette@@@Z ; CAggDrawSurface::GetPalette
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPalette@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawPalette@@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?GetPalette@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawPalette@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPalette@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawPalette@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetPalette@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawPalette@@@Z
_TEXT	SEGMENT
this$ = 48
lplpDDPalette$ = 56
?GetPalette@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawPalette@@@Z PROC ; CAggDrawSurface::GetPalette, COMDAT
; Line 403
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 404
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetPalette
	mov	r8d, 404				; 00000194H
	lea	rdx, OFFSET FLAT:$SG82588
	lea	rcx, OFFSET FLAT:$SG82589
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetPalette:
; Line 405
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lplpDDPalette$[rsp]
	call	QWORD PTR [rax+160]
; Line 406
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetPalette@CAggDrawSurface@@UEAAJPEAPEAUIDirectDrawPalette@@@Z ENDP ; CAggDrawSurface::GetPalette
_TEXT	ENDS
PUBLIC	?GetPixelFormat@CAggDrawSurface@@UEAAJPEAU_DDPIXELFORMAT@@@Z ; CAggDrawSurface::GetPixelFormat
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPixelFormat@CAggDrawSurface@@UEAAJPEAU_DDPIXELFORMAT@@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?GetPixelFormat@CAggDrawSurface@@UEAAJPEAU_DDPIXELFORMAT@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPixelFormat@CAggDrawSurface@@UEAAJPEAU_DDPIXELFORMAT@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetPixelFormat@CAggDrawSurface@@UEAAJPEAU_DDPIXELFORMAT@@@Z
_TEXT	SEGMENT
this$ = 48
lpDDPixelFormat$ = 56
?GetPixelFormat@CAggDrawSurface@@UEAAJPEAU_DDPIXELFORMAT@@@Z PROC ; CAggDrawSurface::GetPixelFormat, COMDAT
; Line 410
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 411
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@GetPixelFo
	mov	r8d, 411				; 0000019bH
	lea	rdx, OFFSET FLAT:$SG82595
	lea	rcx, OFFSET FLAT:$SG82596
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@GetPixelFo:
; Line 412
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDPixelFormat$[rsp]
	call	QWORD PTR [rax+168]
; Line 413
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetPixelFormat@CAggDrawSurface@@UEAAJPEAU_DDPIXELFORMAT@@@Z ENDP ; CAggDrawSurface::GetPixelFormat
_TEXT	ENDS
PUBLIC	?GetSurfaceDesc@CAggDrawSurface@@UEAAJPEAU_DDSURFACEDESC@@@Z ; CAggDrawSurface::GetSurfaceDesc
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSurfaceDesc@CAggDrawSurface@@UEAAJPEAU_DDSURFACEDESC@@@Z DD imagerel $LN5
	DD	imagerel $LN5+149
	DD	imagerel $unwind$?GetSurfaceDesc@CAggDrawSurface@@UEAAJPEAU_DDSURFACEDESC@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSurfaceDesc@CAggDrawSurface@@UEAAJPEAU_DDSURFACEDESC@@@Z DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetSurfaceDesc@CAggDrawSurface@@UEAAJPEAU_DDSURFACEDESC@@@Z
_TEXT	SEGMENT
hr$ = 32
this$ = 64
lpDDSurfaceDesc$ = 72
?GetSurfaceDesc@CAggDrawSurface@@UEAAJPEAU_DDSURFACEDESC@@@Z PROC ; CAggDrawSurface::GetSurfaceDesc, COMDAT
; Line 427
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 428
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN2@GetSurface
	mov	r8d, 428				; 000001acH
	lea	rdx, OFFSET FLAT:$SG82602
	lea	rcx, OFFSET FLAT:$SG82603
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN2@GetSurface:
; Line 432
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDSurfaceDesc$[rsp]
	call	QWORD PTR [rax+176]
	mov	DWORD PTR hr$[rsp], eax
; Line 433
	cmp	DWORD PTR hr$[rsp], 0
	jge	SHORT $LN1@GetSurface
; Line 434
	mov	eax, DWORD PTR hr$[rsp]
	jmp	SHORT $LN3@GetSurface
$LN1@GetSurface:
; Line 438
	mov	rax, QWORD PTR lpDDSurfaceDesc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	QWORD PTR [rax+40], rcx
; Line 439
	mov	eax, DWORD PTR hr$[rsp]
$LN3@GetSurface:
; Line 440
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?GetSurfaceDesc@CAggDrawSurface@@UEAAJPEAU_DDSURFACEDESC@@@Z ENDP ; CAggDrawSurface::GetSurfaceDesc
_TEXT	ENDS
PUBLIC	?Initialize@CAggDrawSurface@@UEAAJPEAUIDirectDraw@@PEAU_DDSURFACEDESC@@@Z ; CAggDrawSurface::Initialize
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize@CAggDrawSurface@@UEAAJPEAUIDirectDraw@@PEAU_DDSURFACEDESC@@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$?Initialize@CAggDrawSurface@@UEAAJPEAUIDirectDraw@@PEAU_DDSURFACEDESC@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize@CAggDrawSurface@@UEAAJPEAUIDirectDraw@@PEAU_DDSURFACEDESC@@@Z DD 022801H
	DD	070103214H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Initialize@CAggDrawSurface@@UEAAJPEAUIDirectDraw@@PEAU_DDSURFACEDESC@@@Z
_TEXT	SEGMENT
this$ = 48
lpDD$ = 56
lpDDSurfaceDesc$ = 64
?Initialize@CAggDrawSurface@@UEAAJPEAUIDirectDraw@@PEAU_DDSURFACEDESC@@@Z PROC ; CAggDrawSurface::Initialize, COMDAT
; Line 444
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 445
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@Initialize@2
	mov	r8d, 445				; 000001bdH
	lea	rdx, OFFSET FLAT:$SG82613
	lea	rcx, OFFSET FLAT:$SG82614
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Initialize@2:
; Line 446
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpDDSurfaceDesc$[rsp]
	mov	rdx, QWORD PTR lpDD$[rsp]
	call	QWORD PTR [rax+184]
; Line 447
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Initialize@CAggDrawSurface@@UEAAJPEAUIDirectDraw@@PEAU_DDSURFACEDESC@@@Z ENDP ; CAggDrawSurface::Initialize
_TEXT	ENDS
PUBLIC	?IsLost@CAggDrawSurface@@UEAAJXZ		; CAggDrawSurface::IsLost
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsLost@CAggDrawSurface@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$?IsLost@CAggDrawSurface@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsLost@CAggDrawSurface@@UEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?IsLost@CAggDrawSurface@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?IsLost@CAggDrawSurface@@UEAAJXZ PROC			; CAggDrawSurface::IsLost, COMDAT
; Line 451
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 452
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@IsLost
	mov	r8d, 452				; 000001c4H
	lea	rdx, OFFSET FLAT:$SG82619
	lea	rcx, OFFSET FLAT:$SG82620
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@IsLost:
; Line 453
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+192]
; Line 454
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?IsLost@CAggDrawSurface@@UEAAJXZ ENDP			; CAggDrawSurface::IsLost
_TEXT	ENDS
PUBLIC	?Lock@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAU_DDSURFACEDESC@@KPEAX@Z ; CAggDrawSurface::Lock
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Lock@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAU_DDSURFACEDESC@@KPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+140
	DD	imagerel $unwind$?Lock@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAU_DDSURFACEDESC@@KPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Lock@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAU_DDSURFACEDESC@@KPEAX@Z DD 022d01H
	DD	070155219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Lock@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAU_DDSURFACEDESC@@KPEAX@Z
_TEXT	SEGMENT
this$ = 64
lpDestRect$ = 72
lpDDSurfaceDesc$ = 80
dwFlags$ = 88
hEvent$ = 96
?Lock@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAU_DDSURFACEDESC@@KPEAX@Z PROC ; CAggDrawSurface::Lock, COMDAT
; Line 458
$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 459
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@Lock
	mov	r8d, 459				; 000001cbH
	lea	rdx, OFFSET FLAT:$SG82629
	lea	rcx, OFFSET FLAT:$SG82630
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Lock:
; Line 460
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR hEvent$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	mov	r9d, DWORD PTR dwFlags$[rsp]
	mov	r8, QWORD PTR lpDDSurfaceDesc$[rsp]
	mov	rdx, QWORD PTR lpDestRect$[rsp]
	call	QWORD PTR [rax+200]
; Line 461
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Lock@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAU_DDSURFACEDESC@@KPEAX@Z ENDP ; CAggDrawSurface::Lock
_TEXT	ENDS
PUBLIC	?ReleaseDC@CAggDrawSurface@@UEAAJPEAUHDC__@@@Z	; CAggDrawSurface::ReleaseDC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseDC@CAggDrawSurface@@UEAAJPEAUHDC__@@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?ReleaseDC@CAggDrawSurface@@UEAAJPEAUHDC__@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseDC@CAggDrawSurface@@UEAAJPEAUHDC__@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ReleaseDC@CAggDrawSurface@@UEAAJPEAUHDC__@@@Z
_TEXT	SEGMENT
this$ = 48
hDC$ = 56
?ReleaseDC@CAggDrawSurface@@UEAAJPEAUHDC__@@@Z PROC	; CAggDrawSurface::ReleaseDC, COMDAT
; Line 465
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 466
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@ReleaseDC
	mov	r8d, 466				; 000001d2H
	lea	rdx, OFFSET FLAT:$SG82636
	lea	rcx, OFFSET FLAT:$SG82637
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@ReleaseDC:
; Line 467
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR hDC$[rsp]
	call	QWORD PTR [rax+208]
; Line 468
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ReleaseDC@CAggDrawSurface@@UEAAJPEAUHDC__@@@Z ENDP	; CAggDrawSurface::ReleaseDC
_TEXT	ENDS
PUBLIC	?Restore@CAggDrawSurface@@UEAAJXZ		; CAggDrawSurface::Restore
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Restore@CAggDrawSurface@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$?Restore@CAggDrawSurface@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Restore@CAggDrawSurface@@UEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Restore@CAggDrawSurface@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Restore@CAggDrawSurface@@UEAAJXZ PROC			; CAggDrawSurface::Restore, COMDAT
; Line 472
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 473
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@Restore
	mov	r8d, 473				; 000001d9H
	lea	rdx, OFFSET FLAT:$SG82642
	lea	rcx, OFFSET FLAT:$SG82643
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Restore:
; Line 474
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+216]
; Line 475
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Restore@CAggDrawSurface@@UEAAJXZ ENDP			; CAggDrawSurface::Restore
_TEXT	ENDS
PUBLIC	?SetClipper@CAggDrawSurface@@UEAAJPEAUIDirectDrawClipper@@@Z ; CAggDrawSurface::SetClipper
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetClipper@CAggDrawSurface@@UEAAJPEAUIDirectDrawClipper@@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?SetClipper@CAggDrawSurface@@UEAAJPEAUIDirectDrawClipper@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetClipper@CAggDrawSurface@@UEAAJPEAUIDirectDrawClipper@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetClipper@CAggDrawSurface@@UEAAJPEAUIDirectDrawClipper@@@Z
_TEXT	SEGMENT
this$ = 48
lpDDClipper$ = 56
?SetClipper@CAggDrawSurface@@UEAAJPEAUIDirectDrawClipper@@@Z PROC ; CAggDrawSurface::SetClipper, COMDAT
; Line 479
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 480
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@SetClipper
	mov	r8d, 480				; 000001e0H
	lea	rdx, OFFSET FLAT:$SG82649
	lea	rcx, OFFSET FLAT:$SG82650
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetClipper:
; Line 481
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDClipper$[rsp]
	call	QWORD PTR [rax+224]
; Line 482
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetClipper@CAggDrawSurface@@UEAAJPEAUIDirectDrawClipper@@@Z ENDP ; CAggDrawSurface::SetClipper
_TEXT	ENDS
PUBLIC	?SetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z ; CAggDrawSurface::SetColorKey
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z DD imagerel $LN4
	DD	imagerel $LN4+118
	DD	imagerel $unwind$?SetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z DD 022701H
	DD	0700f3213H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
lpDDColorKey$ = 64
?SetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z PROC ; CAggDrawSurface::SetColorKey, COMDAT
; Line 486
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 487
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@SetColorKe
	mov	r8d, 487				; 000001e7H
	lea	rdx, OFFSET FLAT:$SG82657
	lea	rcx, OFFSET FLAT:$SG82658
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetColorKe:
; Line 488
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpDDColorKey$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+232]
; Line 489
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetColorKey@CAggDrawSurface@@UEAAJKPEAU_DDCOLORKEY@@@Z ENDP ; CAggDrawSurface::SetColorKey
_TEXT	ENDS
PUBLIC	?SetOverlayPosition@CAggDrawSurface@@UEAAJJJ@Z	; CAggDrawSurface::SetOverlayPosition
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetOverlayPosition@CAggDrawSurface@@UEAAJJJ@Z DD imagerel $LN4
	DD	imagerel $LN4+118
	DD	imagerel $unwind$?SetOverlayPosition@CAggDrawSurface@@UEAAJJJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetOverlayPosition@CAggDrawSurface@@UEAAJJJ@Z DD 022701H
	DD	0700f3213H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetOverlayPosition@CAggDrawSurface@@UEAAJJJ@Z
_TEXT	SEGMENT
this$ = 48
dwX$ = 56
dwY$ = 64
?SetOverlayPosition@CAggDrawSurface@@UEAAJJJ@Z PROC	; CAggDrawSurface::SetOverlayPosition, COMDAT
; Line 493
$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 494
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@SetOverlay
	mov	r8d, 494				; 000001eeH
	lea	rdx, OFFSET FLAT:$SG82665
	lea	rcx, OFFSET FLAT:$SG82666
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetOverlay:
; Line 495
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR dwY$[rsp]
	mov	edx, DWORD PTR dwX$[rsp]
	call	QWORD PTR [rax+240]
; Line 496
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetOverlayPosition@CAggDrawSurface@@UEAAJJJ@Z ENDP	; CAggDrawSurface::SetOverlayPosition
_TEXT	ENDS
PUBLIC	?SetPalette@CAggDrawSurface@@UEAAJPEAUIDirectDrawPalette@@@Z ; CAggDrawSurface::SetPalette
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetPalette@CAggDrawSurface@@UEAAJPEAUIDirectDrawPalette@@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?SetPalette@CAggDrawSurface@@UEAAJPEAUIDirectDrawPalette@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetPalette@CAggDrawSurface@@UEAAJPEAUIDirectDrawPalette@@@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?SetPalette@CAggDrawSurface@@UEAAJPEAUIDirectDrawPalette@@@Z
_TEXT	SEGMENT
this$ = 48
lpDDPalette$ = 56
?SetPalette@CAggDrawSurface@@UEAAJPEAUIDirectDrawPalette@@@Z PROC ; CAggDrawSurface::SetPalette, COMDAT
; Line 500
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 501
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@SetPalette
	mov	r8d, 501				; 000001f5H
	lea	rdx, OFFSET FLAT:$SG82672
	lea	rcx, OFFSET FLAT:$SG82673
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@SetPalette:
; Line 502
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDPalette$[rsp]
	call	QWORD PTR [rax+248]
; Line 503
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetPalette@CAggDrawSurface@@UEAAJPEAUIDirectDrawPalette@@@Z ENDP ; CAggDrawSurface::SetPalette
_TEXT	ENDS
PUBLIC	?Unlock@CAggDrawSurface@@UEAAJPEAX@Z		; CAggDrawSurface::Unlock
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Unlock@CAggDrawSurface@@UEAAJPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?Unlock@CAggDrawSurface@@UEAAJPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Unlock@CAggDrawSurface@@UEAAJPEAX@Z DD 022301H
	DD	0700b320fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Unlock@CAggDrawSurface@@UEAAJPEAX@Z
_TEXT	SEGMENT
this$ = 48
lpSurfaceData$ = 56
?Unlock@CAggDrawSurface@@UEAAJPEAX@Z PROC		; CAggDrawSurface::Unlock, COMDAT
; Line 507
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 508
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@Unlock
	mov	r8d, 508				; 000001fcH
	lea	rdx, OFFSET FLAT:$SG82679
	lea	rcx, OFFSET FLAT:$SG82680
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@Unlock:
; Line 509
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpSurfaceData$[rsp]
	call	QWORD PTR [rax+256]
; Line 510
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Unlock@CAggDrawSurface@@UEAAJPEAX@Z ENDP		; CAggDrawSurface::Unlock
_TEXT	ENDS
PUBLIC	?UpdateOverlay@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDOVERLAYFX@@@Z ; CAggDrawSurface::UpdateOverlay
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateOverlay@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDOVERLAYFX@@@Z DD imagerel $LN4
	DD	imagerel $LN4+148
	DD	imagerel $unwind$?UpdateOverlay@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDOVERLAYFX@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateOverlay@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDOVERLAYFX@@@Z DD 022d01H
	DD	070155219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?UpdateOverlay@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDOVERLAYFX@@@Z
_TEXT	SEGMENT
this$ = 64
lpSrcRect$ = 72
lpDDDestSurface$ = 80
lpDestRect$ = 88
dwFlags$ = 96
lpDDOverlayFX$ = 104
?UpdateOverlay@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDOVERLAYFX@@@Z PROC ; CAggDrawSurface::UpdateOverlay, COMDAT
; Line 514
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 515
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@UpdateOver
	mov	r8d, 515				; 00000203H
	lea	rdx, OFFSET FLAT:$SG82690
	lea	rcx, OFFSET FLAT:$SG82691
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@UpdateOver:
; Line 516
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR lpDDOverlayFX$[rsp]
	mov	QWORD PTR [rsp+40], rdx
	mov	edx, DWORD PTR dwFlags$[rsp]
	mov	DWORD PTR [rsp+32], edx
	mov	r9, QWORD PTR lpDestRect$[rsp]
	mov	r8, QWORD PTR lpDDDestSurface$[rsp]
	mov	rdx, QWORD PTR lpSrcRect$[rsp]
	call	QWORD PTR [rax+264]
; Line 517
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?UpdateOverlay@CAggDrawSurface@@UEAAJPEAUtagRECT@@PEAUIDirectDrawSurface@@0KPEAU_DDOVERLAYFX@@@Z ENDP ; CAggDrawSurface::UpdateOverlay
_TEXT	ENDS
PUBLIC	?UpdateOverlayDisplay@CAggDrawSurface@@UEAAJK@Z	; CAggDrawSurface::UpdateOverlayDisplay
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateOverlayDisplay@CAggDrawSurface@@UEAAJK@Z DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$?UpdateOverlayDisplay@CAggDrawSurface@@UEAAJK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateOverlayDisplay@CAggDrawSurface@@UEAAJK@Z DD 022201H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?UpdateOverlayDisplay@CAggDrawSurface@@UEAAJK@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
?UpdateOverlayDisplay@CAggDrawSurface@@UEAAJK@Z PROC	; CAggDrawSurface::UpdateOverlayDisplay, COMDAT
; Line 521
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 522
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@UpdateOver@2
	mov	r8d, 522				; 0000020aH
	lea	rdx, OFFSET FLAT:$SG82697
	lea	rcx, OFFSET FLAT:$SG82698
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@UpdateOver@2:
; Line 523
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+272]
; Line 524
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?UpdateOverlayDisplay@CAggDrawSurface@@UEAAJK@Z ENDP	; CAggDrawSurface::UpdateOverlayDisplay
_TEXT	ENDS
PUBLIC	?UpdateOverlayZOrder@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z ; CAggDrawSurface::UpdateOverlayZOrder
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateOverlayZOrder@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z DD imagerel $LN4
	DD	imagerel $LN4+118
	DD	imagerel $unwind$?UpdateOverlayZOrder@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateOverlayZOrder@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z DD 022701H
	DD	0700f3213H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?UpdateOverlayZOrder@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z
_TEXT	SEGMENT
this$ = 48
dwFlags$ = 56
lpDDSReference$ = 64
?UpdateOverlayZOrder@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z PROC ; CAggDrawSurface::UpdateOverlayZOrder, COMDAT
; Line 528
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 529
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN1@UpdateOver@3
	mov	r8d, 529				; 00000211H
	lea	rdx, OFFSET FLAT:$SG82705
	lea	rcx, OFFSET FLAT:$SG82706
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN1@UpdateOver@3:
; Line 530
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR lpDDSReference$[rsp]
	mov	edx, DWORD PTR dwFlags$[rsp]
	call	QWORD PTR [rax+280]
; Line 531
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?UpdateOverlayZOrder@CAggDrawSurface@@UEAAJKPEAUIDirectDrawSurface@@@Z ENDP ; CAggDrawSurface::UpdateOverlayZOrder
_TEXT	ENDS
PUBLIC	??0CLoadDirectDraw@@QEAA@XZ			; CLoadDirectDraw::CLoadDirectDraw
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CLoadDirectDraw@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0CLoadDirectDraw@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CLoadDirectDraw@@QEAA@XZ DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??0CLoadDirectDraw@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0CLoadDirectDraw@@QEAA@XZ PROC			; CLoadDirectDraw::CLoadDirectDraw, COMDAT
; Line 543
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
; Line 544
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0CLoadDirectDraw@@QEAA@XZ ENDP			; CLoadDirectDraw::CLoadDirectDraw
_TEXT	ENDS
PUBLIC	?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ	; CLoadDirectDraw::ReleaseDirectDraw
PUBLIC	??1CLoadDirectDraw@@QEAA@XZ			; CLoadDirectDraw::~CLoadDirectDraw
EXTRN	__imp_FreeLibrary:PROC
EXTRN	?DbgLogInfo@@YAXKKPEB_WZZ:PROC			; DbgLogInfo
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CLoadDirectDraw@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??1CLoadDirectDraw@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CLoadDirectDraw@@QEAA@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ??1CLoadDirectDraw@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CLoadDirectDraw@@QEAA@XZ PROC			; CLoadDirectDraw::~CLoadDirectDraw, COMDAT
; Line 550
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 551
	mov	rcx, QWORD PTR this$[rsp]
	call	?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ ; CLoadDirectDraw::ReleaseDirectDraw
; Line 553
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN1@CLoadDirec
; Line 554
	lea	r8, OFFSET FLAT:$SG82714
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 555
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_FreeLibrary
$LN1@CLoadDirec:
; Line 557
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CLoadDirectDraw@@QEAA@XZ ENDP			; CLoadDirectDraw::~CLoadDirectDraw
_TEXT	ENDS
PUBLIC	?LoadDirectDraw@CLoadDirectDraw@@QEAAJPEAD@Z	; CLoadDirectDraw::LoadDirectDraw
EXTRN	DirectDrawCreateFromDevice:PROC
EXTRN	DirectDrawCreateFromDeviceEx:PROC
EXTRN	__imp_GetProcAddress:PROC
EXTRN	__imp_LoadLibraryW:PROC
EXTRN	__imp_SetErrorMode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LoadDirectDraw@CLoadDirectDraw@@QEAAJPEAD@Z DD imagerel $LN14
	DD	imagerel $LN14+648
	DD	imagerel $unwind$?LoadDirectDraw@CLoadDirectDraw@@QEAAJPEAD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LoadDirectDraw@CLoadDirectDraw@@QEAAJPEAD@Z DD 022301H
	DD	0700bb20fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?LoadDirectDraw@CLoadDirectDraw@@QEAAJPEAD@Z
_TEXT	SEGMENT
pDrawCreate$ = 48
pDrawEnum$ = 56
pDrawEnumEx$ = 64
hr$ = 72
ErrorMode$82730 = 76
tv148 = 80
this$ = 112
szDevice$ = 120
?LoadDirectDraw@CLoadDirectDraw@@QEAAJPEAD@Z PROC	; CLoadDirectDraw::LoadDirectDraw, COMDAT
; Line 571
$LN14:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
; Line 575
	mov	DWORD PTR hr$[rsp], 0
; Line 577
	lea	r8, OFFSET FLAT:$SG82723
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 581
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN9@LoadDirect
; Line 582
	lea	r8, OFFSET FLAT:$SG82725
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 583
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN8@LoadDirect
	mov	r8d, 583				; 00000247H
	lea	rdx, OFFSET FLAT:$SG82727
	lea	rcx, OFFSET FLAT:$SG82728
	call	?DbgAssert@@YAXPEB_W0H@Z		; DbgAssert
$LN8@LoadDirect:
; Line 584
	xor	eax, eax
	jmp	$LN10@LoadDirect
$LN9@LoadDirect:
; Line 589
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN7@LoadDirect
; Line 591
	mov	ecx, 32768				; 00008000H
	call	QWORD PTR __imp_SetErrorMode
	mov	DWORD PTR ErrorMode$82730[rsp], eax
; Line 592
	lea	rcx, OFFSET FLAT:$SG82731
	call	QWORD PTR __imp_LoadLibraryW
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax
; Line 593
	mov	ecx, DWORD PTR ErrorMode$82730[rsp]
	call	QWORD PTR __imp_SetErrorMode
; Line 595
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN6@LoadDirect
; Line 596
	lea	r8, OFFSET FLAT:$SG82733
	mov	edx, 1
	mov	ecx, 16
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 597
	lea	r8, OFFSET FLAT:$SG82734
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 598
	mov	eax, -2147467262			; ffffffff80004002H
	jmp	$LN10@LoadDirect
$LN6@LoadDirect:
$LN7@LoadDirect:
; Line 604
	lea	rdx, OFFSET FLAT:$SG82737
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_GetProcAddress
	mov	QWORD PTR pDrawCreate$[rsp], rax
; Line 606
	lea	rdx, OFFSET FLAT:$SG82739
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_GetProcAddress
	mov	QWORD PTR pDrawEnum$[rsp], rax
; Line 608
	lea	rdx, OFFSET FLAT:$SG82741
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_GetProcAddress
	mov	QWORD PTR pDrawEnumEx$[rsp], rax
; Line 611
	cmp	QWORD PTR pDrawCreate$[rsp], 0
	je	SHORT $LN4@LoadDirect
	cmp	QWORD PTR pDrawEnum$[rsp], 0
	jne	SHORT $LN5@LoadDirect
$LN4@LoadDirect:
; Line 613
	mov	rax, QWORD PTR pDrawEnum$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pDrawCreate$[rsp]
	lea	r8, OFFSET FLAT:$SG82744
	mov	edx, 1
	mov	ecx, 16
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 614
	lea	r8, OFFSET FLAT:$SG82745
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 615
	mov	rcx, QWORD PTR this$[rsp]
	call	?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ ; CLoadDirectDraw::ReleaseDirectDraw
; Line 616
	mov	eax, -2147467262			; ffffffff80004002H
	jmp	$LN10@LoadDirect
$LN5@LoadDirect:
; Line 620
	cmp	QWORD PTR szDevice$[rsp], 0
	je	SHORT $LN12@LoadDirect
	mov	rax, QWORD PTR szDevice$[rsp]
	mov	QWORD PTR tv148[rsp], rax
	jmp	SHORT $LN13@LoadDirect
$LN12@LoadDirect:
	lea	rax, OFFSET FLAT:$SG82747
	mov	QWORD PTR tv148[rsp], rax
$LN13@LoadDirect:
	mov	r9, QWORD PTR tv148[rsp]
	lea	r8, OFFSET FLAT:$SG82748
	mov	edx, 3
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 624
	cmp	QWORD PTR pDrawEnumEx$[rsp], 0
	je	SHORT $LN3@LoadDirect
; Line 626
	mov	r8, QWORD PTR pDrawEnumEx$[rsp]
	mov	rdx, QWORD PTR pDrawCreate$[rsp]
	mov	rcx, QWORD PTR szDevice$[rsp]
	call	DirectDrawCreateFromDeviceEx
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax
; Line 627
	jmp	SHORT $LN2@LoadDirect
$LN3@LoadDirect:
; Line 629
	mov	r8, QWORD PTR pDrawEnum$[rsp]
	mov	rdx, QWORD PTR pDrawCreate$[rsp]
	mov	rcx, QWORD PTR szDevice$[rsp]
	call	DirectDrawCreateFromDevice
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax
$LN2@LoadDirect:
; Line 631
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN1@LoadDirect
; Line 632
	lea	r8, OFFSET FLAT:$SG82752
	mov	edx, 1
	mov	ecx, 16
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 633
	lea	r8, OFFSET FLAT:$SG82753
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 634
	mov	rcx, QWORD PTR this$[rsp]
	call	?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ ; CLoadDirectDraw::ReleaseDirectDraw
; Line 635
	mov	eax, -2147467262			; ffffffff80004002H
	jmp	SHORT $LN10@LoadDirect
$LN1@LoadDirect:
; Line 637
	xor	eax, eax
$LN10@LoadDirect:
; Line 638
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?LoadDirectDraw@CLoadDirectDraw@@QEAAJPEAD@Z ENDP	; CLoadDirectDraw::LoadDirectDraw
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ PROC	; CLoadDirectDraw::ReleaseDirectDraw, COMDAT
; Line 648
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 649
	lea	r8, OFFSET FLAT:$SG82758
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 653
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN1@ReleaseDir
; Line 654
	lea	r8, OFFSET FLAT:$SG82760
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 655
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
; Line 656
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
$LN1@ReleaseDir:
; Line 659
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ReleaseDirectDraw@CLoadDirectDraw@@QEAAXXZ ENDP	; CLoadDirectDraw::ReleaseDirectDraw
_TEXT	ENDS
PUBLIC	?IsDirectDrawLoaded@CLoadDirectDraw@@QEAAJXZ	; CLoadDirectDraw::IsDirectDrawLoaded
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsDirectDrawLoaded@CLoadDirectDraw@@QEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$?IsDirectDrawLoaded@CLoadDirectDraw@@QEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsDirectDrawLoaded@CLoadDirectDraw@@QEAAJXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?IsDirectDrawLoaded@CLoadDirectDraw@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?IsDirectDrawLoaded@CLoadDirectDraw@@QEAAJXZ PROC	; CLoadDirectDraw::IsDirectDrawLoaded, COMDAT
; Line 665
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 666
	lea	r8, OFFSET FLAT:$SG82764
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 668
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN1@IsDirectDr
; Line 669
	lea	r8, OFFSET FLAT:$SG82766
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 670
	mov	eax, 1
	jmp	SHORT $LN2@IsDirectDr
$LN1@IsDirectDr:
; Line 672
	xor	eax, eax
$LN2@IsDirectDr:
; Line 673
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?IsDirectDrawLoaded@CLoadDirectDraw@@QEAAJXZ ENDP	; CLoadDirectDraw::IsDirectDrawLoaded
_TEXT	ENDS
PUBLIC	?GetDirectDraw@CLoadDirectDraw@@QEAAPEAUIDirectDraw@@XZ ; CLoadDirectDraw::GetDirectDraw
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDirectDraw@CLoadDirectDraw@@QEAAPEAUIDirectDraw@@XZ DD imagerel $LN4
	DD	imagerel $LN4+147
	DD	imagerel $unwind$?GetDirectDraw@CLoadDirectDraw@@QEAAPEAUIDirectDraw@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDirectDraw@CLoadDirectDraw@@QEAAPEAUIDirectDraw@@XZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?GetDirectDraw@CLoadDirectDraw@@QEAAPEAUIDirectDraw@@XZ
_TEXT	SEGMENT
this$ = 48
?GetDirectDraw@CLoadDirectDraw@@QEAAPEAUIDirectDraw@@XZ PROC ; CLoadDirectDraw::GetDirectDraw, COMDAT
; Line 679
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 680
	lea	r8, OFFSET FLAT:$SG82771
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 682
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN1@GetDirectD
; Line 683
	lea	r8, OFFSET FLAT:$SG82773
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 684
	xor	eax, eax
	jmp	SHORT $LN2@GetDirectD
$LN1@GetDirectD:
; Line 687
	lea	r8, OFFSET FLAT:$SG82774
	mov	edx, 5
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 688
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+8]
; Line 689
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
$LN2@GetDirectD:
; Line 690
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetDirectDraw@CLoadDirectDraw@@QEAAPEAUIDirectDraw@@XZ ENDP ; CLoadDirectDraw::GetDirectDraw
_TEXT	ENDS
PUBLIC	?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ	; CLoadDirectDraw::IsDirectDrawVersion1
EXTRN	IID_IDirectDraw2:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ DD imagerel $LN7
	DD	imagerel $LN7+207
	DD	imagerel $unwind$?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ$rtcName$0 DB 070H ; CLoadDirectDraw::IsDirectDrawVersion1
	DB	00H
	ORG $+14
?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ$rtcVarDesc DD 028H ; CLoadDirectDraw::IsDirectDrawVersion1
	DD	08H
	DQ	FLAT:?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ$rtcName$0
	ORG $+48
?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ$rtcFrameData DD 01H ; CLoadDirectDraw::IsDirectDrawVersion1
	DD	00H
	DQ	FLAT:?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ
_TEXT	SEGMENT
p$ = 40
hr$ = 52
this$ = 80
?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ PROC	; CLoadDirectDraw::IsDirectDrawVersion1, COMDAT
; Line 699
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 701
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN4@IsDirectDr@2
; Line 702
	xor	eax, eax
	jmp	$LN5@IsDirectDr@2
$LN4@IsDirectDr@2:
; Line 704
	mov	QWORD PTR p$[rsp], 0
; Line 705
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR p$[rsp]
	lea	rdx, OFFSET FLAT:IID_IDirectDraw2
	call	QWORD PTR [rax]
	mov	DWORD PTR hr$[rsp], eax
; Line 706
	cmp	QWORD PTR p$[rsp], 0
	je	SHORT $LN3@IsDirectDr@2
; Line 707
	mov	rax, QWORD PTR p$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR [rax+16]
$LN3@IsDirectDr@2:
; Line 708
	cmp	DWORD PTR hr$[rsp], 0
	jne	SHORT $LN2@IsDirectDr@2
; Line 709
	lea	r8, OFFSET FLAT:$SG82784
	mov	edx, 3
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 710
	xor	eax, eax
	jmp	SHORT $LN5@IsDirectDr@2
; Line 711
	jmp	SHORT $LN1@IsDirectDr@2
$LN2@IsDirectDr@2:
; Line 712
	lea	r8, OFFSET FLAT:$SG82786
	mov	edx, 3
	mov	ecx, 2
	call	?DbgLogInfo@@YAXKKPEB_WZZ		; DbgLogInfo
; Line 713
	mov	eax, 1
$LN1@IsDirectDr@2:
$LN5@IsDirectDr@2:
; Line 715
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?IsDirectDrawVersion1@CLoadDirectDraw@@QEAAHXZ ENDP	; CLoadDirectDraw::IsDirectDrawVersion1
_TEXT	ENDS
END
